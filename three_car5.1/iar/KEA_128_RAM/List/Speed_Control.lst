###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        01/May/2018  14:50:06
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\智能车程序2018\电磁三轮――ZS\5.1\user\C\Speed_Control.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\5.1\user\C\Speed_Control.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_RAM\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_RAM\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_RAM\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\system\coreSupport\ -Ol
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_RAM\List\Speed_Control.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_RAM\Obj\Speed_Control.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\5.1\user\C\Speed_Control.c
      1          #include "Speed_Control.h"
      2          //30,1m//40 1.5m
      3          //50:1.6,55
      4          //60 1.9m//65，2.15m//70,2.3m
      5          /***************速度变量*********************************************************************/
      6          //编码器测的速度和自己设定的速度小写

   \                                 In section .data, align 4
      7          float speed_set_Z=60,speed_set_W=60;
   \                     speed_set_Z:
   \   00000000   0x42700000         DC32 42700000H

   \                                 In section .data, align 4
   \                     speed_set_W:
   \   00000000   0x42700000         DC32 42700000H
      8          /****************速度环*************************************************************************/
      9          //V=30,P=80;I=10;D=0;

   \                                 In section .data, align 4
     10          float Speed_P=30,Speed_I=5,Speed_D=0.00;
   \                     Speed_P:
   \   00000000   0x41F00000         DC32 41F00000H

   \                                 In section .data, align 4
   \                     Speed_I:
   \   00000000   0x40A00000         DC32 40A00000H

   \                                 In section .bss, align 4
   \                     Speed_D:
   \   00000000                      DS8 4
     11          /****************KT*************************************************************************/

   \                                 In section .data, align 4
     12          float Angle_Kt_P=100,Speed_Kt_P=0,Speed_Kt_I=0;
   \                     Angle_Kt_P:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .bss, align 4
   \                     Speed_Kt_P:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Kt_I:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     13          float gyr_angle_speed_up_kt=2;
   \                     gyr_angle_speed_up_kt:
   \   00000000   0x40000000         DC32 40000000H

   \                                 In section .bss, align 4
     14          int   KT_Flag=0;
   \                     KT_Flag:
   \   00000000                      DS8 4
     15          /*-----------------------------------------------------------------------*/
     16          
     17          
     18          
     19          
     20          /***************速度变量2*********************************************************************/

   \                                 In section .bss, align 4
     21          float speed_set_L=0,speed_set_R=0;
   \                     speed_set_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_set_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     22          float speed_set = 30,speed_set_temp = 240;//速度设定值，临时速度设定值
   \                     speed_set:
   \   00000000   0x41F00000         DC32 41F00000H

   \                                 In section .data, align 4
   \                     speed_set_temp:
   \   00000000   0x43700000         DC32 43700000H

   \                                 In section .data, align 4
     23          float speed_set_max=80, speed_set_min=20;//速度设定最大最小值
   \                     speed_set_max:
   \   00000000   0x42A00000         DC32 42A00000H

   \                                 In section .data, align 4
   \                     speed_set_min:
   \   00000000   0x41A00000         DC32 41A00000H

   \                                 In section .bss, align 4
     24          float Motor_Out_Old_L=0,Motor_Out_Old_R=0;//上一次电机输出PWM值
   \                     Motor_Out_Old_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Motor_Out_Old_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     25          float Motor_Out_Max=6500,Motor_Out_Min=2500;//电机输出最大最小值
   \                     Motor_Out_Max:
   \   00000000   0x45CB2000         DC32 45CB2000H

   \                                 In section .data, align 4
   \                     Motor_Out_Min:
   \   00000000   0x451C4000         DC32 451C4000H
     26          /*-----------------------------------------------------------------------*/
     27          /****************速度环2*************************************************************************/

   \                                 In section .bss, align 4
     28          float Speed_Error_L = 0, Speed_Error_Last_L = 0, Speed_Error_Last_Last_L = 0,  //L速度偏差值   
   \                     Speed_Error_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     29                Speed_Error_R = 0, Speed_Error_Last_R = 0, Speed_Error_Last_Last_R = 0;  //R速度偏差值 
   \                     Speed_Error_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_Last_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     30          float Speed_Control_Output_L=0,//左右轮的速度控制输出
   \                     Speed_Control_Output_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     31                Speed_Control_Output_R=0,//        电机PWM输出 
   \                     Speed_Control_Output_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     32                Speed_Control_Output2_L=0,
   \                     Speed_Control_Output2_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     33                Speed_Control_Output2_R=0,
   \                     Speed_Control_Output2_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     34                Speed_Control_Output_Last_L=0,
   \                     Speed_Control_Output_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     35                Speed_Control_Output_Last_R=0,
   \                     Speed_Control_Output_Last_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     36                Speed_Control_Output_Cha_L=0,
   \                     Speed_Control_Output_Cha_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     37                Speed_Control_Output_Cha_R=0,
   \                     Speed_Control_Output_Cha_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     38                Speed_Control_Output_L_Old=0,
   \                     Speed_Control_Output_L_Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     39                Speed_Control_Output_R_Old=0;
   \                     Speed_Control_Output_R_Old:
   \   00000000                      DS8 4
     40          /*-----------------------------------------------------------------------*/
     41          
     42          
     43          
     44          /******************测速变量***********************************************************************/

   \                                 In section .bss, align 4
     45          float speed_measure_L,speed_measure_R,//测速左,车整体速度
   \                     speed_measure_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_measure_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     46                speed_L = 0,speed_R = 0,speed_car = 0;
   \                     speed_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_car:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     47          float speed_old_L=0,speed_old_R=0;//上一次测速
   \                     speed_old_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_old_R:
   \   00000000                      DS8 4
     48          /*-----------------------------------------------------------------------*/
     49          
     50          /******************测速变量***********************************************************************
     51          简介：速度控制，
     52          输入：速度设定值
     53          功能：调节实际速度达到设定值
     54          输出：PWM值
     55          *********************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     56          void Speed_Controler()
     57          {   
   \                     Speed_Controler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     58          //  if(speed_set_temp > speed_set_max)
     59          //    speed_set_temp = speed_set_max;
     60          //  if(speed_set_temp < speed_set_min)
     61          //    speed_set_temp = speed_set_min;  
     62          //  speed_set_L = speed_set_temp;
     63          //  speed_set_R = speed_set_temp; 
     64          
     65            Speed_Error_L = speed_set_L- speed_L; 
   \   00000002   0x....             LDR      R0,??DataTable2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR      R1,??DataTable2_1
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x.... 0x....      BL       __aeabi_fsub
   \   0000000E   0x....             LDR      R1,??DataTable2_2
   \   00000010   0x6008             STR      R0,[R1, #+0]
     66            Speed_Error_R = speed_set_R - speed_R; 
   \   00000012   0x....             LDR      R0,??DataTable2_3
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x....             LDR      R1,??DataTable2_4
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0x.... 0x....      BL       __aeabi_fsub
   \   0000001E   0x....             LDR      R1,??DataTable2_5
   \   00000020   0x6008             STR      R0,[R1, #+0]
     67            
     68          Speed_Control_Output_L=(uint32)(Speed_Control_Output_L_Old + Speed_P*(Speed_Error_L-Speed_Error_Last_L) + Speed_I*Speed_Error_L + Speed_D*(Speed_Error_L+Speed_Error_Last_Last_L-2*Speed_Error_Last_L));
   \   00000022   0x....             LDR      R0,??DataTable2_2
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x....             LDR      R1,??DataTable2_6
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x.... 0x....      BL       __aeabi_fsub
   \   0000002E   0x....             LDR      R1,??DataTable2_7
   \   00000030   0x6809             LDR      R1,[R1, #+0]
   \   00000032   0x.... 0x....      BL       __aeabi_fmul
   \   00000036   0x....             LDR      R1,??DataTable2_8
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x.... 0x....      BL       __aeabi_fadd
   \   0000003E   0x0001             MOVS     R1,R0
   \   00000040   0x000C             MOVS     R4,R1
   \   00000042   0x....             LDR      R0,??DataTable2_9
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0x....             LDR      R0,??DataTable2_2
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x.... 0x....      BL       __aeabi_fmul
   \   0000004E   0x0021             MOVS     R1,R4
   \   00000050   0x.... 0x....      BL       __aeabi_fadd
   \   00000054   0x0001             MOVS     R1,R0
   \   00000056   0x000C             MOVS     R4,R1
   \   00000058   0x....             LDR      R0,??DataTable2_2
   \   0000005A   0x6801             LDR      R1,[R0, #+0]
   \   0000005C   0x....             LDR      R0,??DataTable2_10
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x.... 0x....      BL       __aeabi_fadd
   \   00000064   0x0005             MOVS     R5,R0
   \   00000066   0x....             LDR      R0,??DataTable2_6
   \   00000068   0x6801             LDR      R1,[R0, #+0]
   \   0000006A   0x2080             MOVS     R0,#+128
   \   0000006C   0x05C0             LSLS     R0,R0,#+23       ;; #+1073741824
   \   0000006E   0x.... 0x....      BL       __aeabi_fmul
   \   00000072   0x0001             MOVS     R1,R0
   \   00000074   0x0028             MOVS     R0,R5
   \   00000076   0x.... 0x....      BL       __aeabi_fsub
   \   0000007A   0x....             LDR      R1,??DataTable2_11
   \   0000007C   0x6809             LDR      R1,[R1, #+0]
   \   0000007E   0x.... 0x....      BL       __aeabi_fmul
   \   00000082   0x0021             MOVS     R1,R4
   \   00000084   0x.... 0x....      BL       __aeabi_fadd
   \   00000088   0x.... 0x....      BL       __aeabi_f2uiz
   \   0000008C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000090   0x....             LDR      R1,??DataTable2_12
   \   00000092   0x6008             STR      R0,[R1, #+0]
     69          Speed_Control_Output_R=(uint32)(Speed_Control_Output_R_Old + Speed_P*(Speed_Error_R-Speed_Error_Last_R) + Speed_I*Speed_Error_R + Speed_D*(Speed_Error_R+Speed_Error_Last_Last_R-2*Speed_Error_Last_R));  
   \   00000094   0x....             LDR      R0,??DataTable2_5
   \   00000096   0x6800             LDR      R0,[R0, #+0]
   \   00000098   0x....             LDR      R1,??DataTable3
   \   0000009A   0x6809             LDR      R1,[R1, #+0]
   \   0000009C   0x.... 0x....      BL       __aeabi_fsub
   \   000000A0   0x....             LDR      R1,??DataTable2_7
   \   000000A2   0x6809             LDR      R1,[R1, #+0]
   \   000000A4   0x.... 0x....      BL       __aeabi_fmul
   \   000000A8   0x....             LDR      R1,??DataTable3_1
   \   000000AA   0x6809             LDR      R1,[R1, #+0]
   \   000000AC   0x.... 0x....      BL       __aeabi_fadd
   \   000000B0   0x0001             MOVS     R1,R0
   \   000000B2   0x000C             MOVS     R4,R1
   \   000000B4   0x....             LDR      R0,??DataTable2_9
   \   000000B6   0x6801             LDR      R1,[R0, #+0]
   \   000000B8   0x....             LDR      R0,??DataTable2_5
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x.... 0x....      BL       __aeabi_fmul
   \   000000C0   0x0021             MOVS     R1,R4
   \   000000C2   0x.... 0x....      BL       __aeabi_fadd
   \   000000C6   0x0001             MOVS     R1,R0
   \   000000C8   0x000C             MOVS     R4,R1
   \   000000CA   0x....             LDR      R0,??DataTable2_5
   \   000000CC   0x6801             LDR      R1,[R0, #+0]
   \   000000CE   0x....             LDR      R0,??DataTable3_2
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0x.... 0x....      BL       __aeabi_fadd
   \   000000D6   0x0005             MOVS     R5,R0
   \   000000D8   0x....             LDR      R0,??DataTable3
   \   000000DA   0x6801             LDR      R1,[R0, #+0]
   \   000000DC   0x2080             MOVS     R0,#+128
   \   000000DE   0x05C0             LSLS     R0,R0,#+23       ;; #+1073741824
   \   000000E0   0x.... 0x....      BL       __aeabi_fmul
   \   000000E4   0x0001             MOVS     R1,R0
   \   000000E6   0x0028             MOVS     R0,R5
   \   000000E8   0x.... 0x....      BL       __aeabi_fsub
   \   000000EC   0x....             LDR      R1,??DataTable2_11
   \   000000EE   0x6809             LDR      R1,[R1, #+0]
   \   000000F0   0x.... 0x....      BL       __aeabi_fmul
   \   000000F4   0x0021             MOVS     R1,R4
   \   000000F6   0x.... 0x....      BL       __aeabi_fadd
   \   000000FA   0x.... 0x....      BL       __aeabi_f2uiz
   \   000000FE   0x.... 0x....      BL       __aeabi_ui2f
   \   00000102   0x....             LDR      R1,??DataTable3_3
   \   00000104   0x6008             STR      R0,[R1, #+0]
     70            
     71            if(Speed_Control_Output_L > Motor_Out_Max)
   \   00000106   0x....             LDR      R0,??DataTable3_4
   \   00000108   0x6800             LDR      R0,[R0, #+0]
   \   0000010A   0x....             LDR      R1,??DataTable2_12
   \   0000010C   0x6809             LDR      R1,[R1, #+0]
   \   0000010E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000112   0xD203             BCS      ??Speed_Controler_0
     72              Speed_Control_Output_L = Motor_Out_Max; 
   \   00000114   0x....             LDR      R0,??DataTable3_4
   \   00000116   0x6800             LDR      R0,[R0, #+0]
   \   00000118   0x....             LDR      R1,??DataTable2_12
   \   0000011A   0x6008             STR      R0,[R1, #+0]
     73            if(Speed_Control_Output_L < Motor_Out_Min)
   \                     ??Speed_Controler_0: (+1)
   \   0000011C   0x....             LDR      R0,??DataTable2_12
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0x....             LDR      R1,??DataTable3_5
   \   00000122   0x6809             LDR      R1,[R1, #+0]
   \   00000124   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000128   0xD203             BCS      ??Speed_Controler_1
     74              Speed_Control_Output_L = Motor_Out_Min; 
   \   0000012A   0x....             LDR      R0,??DataTable3_5
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x....             LDR      R1,??DataTable2_12
   \   00000130   0x6008             STR      R0,[R1, #+0]
     75            
     76            if(Speed_Control_Output_R > Motor_Out_Max)
   \                     ??Speed_Controler_1: (+1)
   \   00000132   0x....             LDR      R0,??DataTable3_4
   \   00000134   0x6800             LDR      R0,[R0, #+0]
   \   00000136   0x....             LDR      R1,??DataTable3_3
   \   00000138   0x6809             LDR      R1,[R1, #+0]
   \   0000013A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000013E   0xD203             BCS      ??Speed_Controler_2
     77              Speed_Control_Output_R = Motor_Out_Max; 
   \   00000140   0x....             LDR      R0,??DataTable3_4
   \   00000142   0x6800             LDR      R0,[R0, #+0]
   \   00000144   0x....             LDR      R1,??DataTable3_3
   \   00000146   0x6008             STR      R0,[R1, #+0]
     78            if(Speed_Control_Output_R < Motor_Out_Min)
   \                     ??Speed_Controler_2: (+1)
   \   00000148   0x....             LDR      R0,??DataTable3_3
   \   0000014A   0x6800             LDR      R0,[R0, #+0]
   \   0000014C   0x....             LDR      R1,??DataTable3_5
   \   0000014E   0x6809             LDR      R1,[R1, #+0]
   \   00000150   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000154   0xD203             BCS      ??Speed_Controler_3
     79              Speed_Control_Output_R = Motor_Out_Min;   
   \   00000156   0x....             LDR      R0,??DataTable3_5
   \   00000158   0x6800             LDR      R0,[R0, #+0]
   \   0000015A   0x....             LDR      R1,??DataTable3_3
   \   0000015C   0x6008             STR      R0,[R1, #+0]
     80            
     81            Speed_Control_Output_L_Old= Speed_Control_Output_L;
   \                     ??Speed_Controler_3: (+1)
   \   0000015E   0x....             LDR      R0,??DataTable2_12
   \   00000160   0x6800             LDR      R0,[R0, #+0]
   \   00000162   0x....             LDR      R1,??DataTable2_8
   \   00000164   0x6008             STR      R0,[R1, #+0]
     82            Speed_Error_Last_Last_L = Speed_Error_Last_L;
   \   00000166   0x....             LDR      R0,??DataTable2_6
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x....             LDR      R1,??DataTable2_10
   \   0000016C   0x6008             STR      R0,[R1, #+0]
     83            Speed_Error_Last_L = Speed_Error_L;
   \   0000016E   0x....             LDR      R0,??DataTable2_2
   \   00000170   0x6800             LDR      R0,[R0, #+0]
   \   00000172   0x....             LDR      R1,??DataTable2_6
   \   00000174   0x6008             STR      R0,[R1, #+0]
     84            speed_old_L = speed_L;
   \   00000176   0x....             LDR      R0,??DataTable2_1
   \   00000178   0x6800             LDR      R0,[R0, #+0]
   \   0000017A   0x....             LDR      R1,??DataTable3_6
   \   0000017C   0x6008             STR      R0,[R1, #+0]
     85            
     86            Speed_Control_Output_R_Old= Speed_Control_Output_R;
   \   0000017E   0x....             LDR      R0,??DataTable3_3
   \   00000180   0x6800             LDR      R0,[R0, #+0]
   \   00000182   0x....             LDR      R1,??DataTable3_1
   \   00000184   0x6008             STR      R0,[R1, #+0]
     87            Speed_Error_Last_Last_R = Speed_Error_Last_R;
   \   00000186   0x....             LDR      R0,??DataTable3
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0x....             LDR      R1,??DataTable3_2
   \   0000018C   0x6008             STR      R0,[R1, #+0]
     88            Speed_Error_Last_R = Speed_Error_R;
   \   0000018E   0x....             LDR      R0,??DataTable2_5
   \   00000190   0x6800             LDR      R0,[R0, #+0]
   \   00000192   0x....             LDR      R1,??DataTable3
   \   00000194   0x6008             STR      R0,[R1, #+0]
     89            speed_old_R = speed_R;  
   \   00000196   0x....             LDR      R0,??DataTable2_4
   \   00000198   0x6800             LDR      R0,[R0, #+0]
   \   0000019A   0x....             LDR      R1,??DataTable3_7
   \   0000019C   0x6008             STR      R0,[R1, #+0]
     90           
     91          }
   \   0000019E   0xBD31             POP      {R0,R4,R5,PC}    ;; return
     92          /**
     93            * 简介
     94            *     速度输出平滑函数
     95            * 说明
     96            *     将速度调整分为20个周期，防止影响稳定性
     97            */

   \                                 In section .text, align 2, keep-with-next
     98          void Speed_Controler_Output(void)
     99          {
   \                     Speed_Controler_Output: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    100            Speed_Control_Output2_L = Speed_Control_Output_Cha_L * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    101                                   + Speed_Control_Output_Last_L; 
   \   00000002   0x....             LDR      R0,??DataTable3_8
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x.... 0x....      BL       __aeabi_i2f
   \   0000000C   0x....             LDR      R1,??DataTable3_9
   \   0000000E   0x6809             LDR      R1,[R1, #+0]
   \   00000010   0x.... 0x....      BL       __aeabi_fmul
   \   00000014   0x....             LDR      R1,??DataTable3_10  ;; 0x41a00000
   \   00000016   0x.... 0x....      BL       __aeabi_fdiv
   \   0000001A   0x....             LDR      R1,??DataTable3_11
   \   0000001C   0x6809             LDR      R1,[R1, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_fadd
   \   00000022   0x....             LDR      R1,??DataTable3_12
   \   00000024   0x6008             STR      R0,[R1, #+0]
    102           
    103            Speed_Control_Output2_R = Speed_Control_Output_Cha_R * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    104                                   + Speed_Control_Output_Last_R;  
   \   00000026   0x....             LDR      R0,??DataTable3_8
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x1C40             ADDS     R0,R0,#+1
   \   0000002C   0x.... 0x....      BL       __aeabi_i2f
   \   00000030   0x....             LDR      R1,??DataTable3_13
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x.... 0x....      BL       __aeabi_fmul
   \   00000038   0x....             LDR      R1,??DataTable3_10  ;; 0x41a00000
   \   0000003A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000003E   0x....             LDR      R1,??DataTable3_14
   \   00000040   0x6809             LDR      R1,[R1, #+0]
   \   00000042   0x.... 0x....      BL       __aeabi_fadd
   \   00000046   0x....             LDR      R1,??DataTable3_15
   \   00000048   0x6008             STR      R0,[R1, #+0]
    105          //  Speed_Control_Output = Speed_Control_Cha * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    106          //                         + Speed_Control_Last;
    107          //    
    108          }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return
    109          
    110          /*可在角速度大于2的绝对值时蜂鸣器向测试*/

   \                                 In section .text, align 2, keep-with-next
    111          void KT()
    112          {
   \                     KT: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    113            if(gyr_angle_speed_up>gyr_angle_speed_up_kt)
   \   00000002   0x....             LDR      R0,??DataTable3_16
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR      R1,??DataTable3_17
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000000E   0xD202             BCS      ??KT_0
    114               KT_Flag=1;
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x....             LDR      R1,??DataTable3_18
   \   00000014   0x6008             STR      R0,[R1, #+0]
    115            if(KT_Flag==1)
    116            { //KT输出=P*
    117          //     Kt_Output_L=Angle_Kt_P*gyr_angle_speed_up
    118            }
    119              
    120              
    121              
    122              
    123              
    124              
    125              
    126              
    127              
    128              
    129              
    130              
    131              
    132              
    133          }
   \                     ??KT_0: (+1)
   \   00000016   0xBD01             POP      {R0,PC}          ;; return
    134          
    135          /*************************************************************************
    136          获取车速：分时复用两路测速
    137          (PACNT/200)*(编码器齿数/连接轮齿数)*连接轮周长/测速周期==speed
    138          
    139           Distance+=(qd1_result+qd2_result)/6100.0;  //转化为距离
    140            CarSpeed=(qd1_result+qd2_result)*250.0/6100.0;    //求出车速转换为M/S
    141             if(CarSpeed>3.5)CarSpeed=3.5;
    142          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    143          void Get_CarSpeed(void)
    144          {
   \                     Get_CarSpeed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    145            static uint8 LR_Flag = 0;
    146            LR_Flag = !LR_Flag;//分时复用测两路
   \   00000002   0x....             LDR      R0,??DataTable3_19
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD103             BNE      ??Get_CarSpeed_0
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x....             LDR      R1,??DataTable3_19
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
   \   00000010   0xE002             B        ??Get_CarSpeed_1
   \                     ??Get_CarSpeed_0: (+1)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR      R1,??DataTable3_19
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    147            //开通道
    148            if (LR_Flag)
   \                     ??Get_CarSpeed_1: (+1)
   \   00000018   0x....             LDR      R0,??DataTable3_19
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD01B             BEQ      ??Get_CarSpeed_2
    149            {
    150               speed_measure_L= FTM_SpeedGet(FTM_SPEED_L);//在开始右通道计数前，将左通道数读出
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       FTM_SpeedGet
   \   00000026   0x.... 0x....      BL       __aeabi_ui2f
   \   0000002A   0x....             LDR      R1,??DataTable3_20
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    151               
    152               if(Direction_L==1)
   \   0000002E   0x2023             MOVS     R0,#+35
   \   00000030   0x.... 0x....      BL       GpioGet
   \   00000034   0x2801             CMP      R0,#+1
   \   00000036   0xD104             BNE      ??Get_CarSpeed_3
    153               {
    154                  speed_L=speed_measure_L;//改成2ms一次的测速,速度频率太快，得重调参数,放慢节奏，用4ms
   \   00000038   0x....             LDR      R0,??DataTable3_20
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x....             LDR      R1,??DataTable3_21
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0xE006             B        ??Get_CarSpeed_4
    155          //        speed_L=speed_L*2;//4ms一次的测速,
    156               }
    157               else
    158               {
    159                  speed_L=-1*speed_measure_L;
   \                     ??Get_CarSpeed_3: (+1)
   \   00000042   0x....             LDR      R0,??DataTable3_20
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0x....             LDR      R0,??DataTable3_22  ;; 0xbf800000
   \   00000048   0x.... 0x....      BL       __aeabi_fmul
   \   0000004C   0x....             LDR      R1,??DataTable3_21
   \   0000004E   0x6008             STR      R0,[R1, #+0]
    160               }
    161               
    162               Choose_R;//清零计数
   \                     ??Get_CarSpeed_4: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      BL       FTM_CountClean
   \   00000056   0xE01A             B        ??Get_CarSpeed_5
    163            }   
    164            else
    165            {
    166               speed_measure_R= FTM_SpeedGet(FTM_SPEED_R);//在开始右通道计数前，将左通道数读出
   \                     ??Get_CarSpeed_2: (+1)
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       FTM_SpeedGet
   \   0000005E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000062   0x....             LDR      R1,??DataTable3_23
   \   00000064   0x6008             STR      R0,[R1, #+0]
    167               if(Direction_R==1)
   \   00000066   0x2021             MOVS     R0,#+33
   \   00000068   0x.... 0x....      BL       GpioGet
   \   0000006C   0x2801             CMP      R0,#+1
   \   0000006E   0xD107             BNE      ??Get_CarSpeed_6
    168               {
    169                 speed_R=-1*speed_measure_R;
   \   00000070   0x....             LDR      R0,??DataTable3_23
   \   00000072   0x6801             LDR      R1,[R0, #+0]
   \   00000074   0x....             LDR      R0,??DataTable3_22  ;; 0xbf800000
   \   00000076   0x.... 0x....      BL       __aeabi_fmul
   \   0000007A   0x....             LDR      R1,??DataTable3_24
   \   0000007C   0x6008             STR      R0,[R1, #+0]
   \   0000007E   0xE003             B        ??Get_CarSpeed_7
    170          //       speed_R=speed_R*2;
    171               }
    172               else
    173               {
    174                speed_R=speed_measure_R;
   \                     ??Get_CarSpeed_6: (+1)
   \   00000080   0x....             LDR      R0,??DataTable3_23
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x....             LDR      R1,??DataTable3_24
   \   00000086   0x6008             STR      R0,[R1, #+0]
    175               }
    176            Choose_L;//清零计数
   \                     ??Get_CarSpeed_7: (+1)
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      BL       FTM_CountClean
    177            }
    178          //    if ( (Pulse_L>7)   && (Pulse_R>7)
    179          //      || (Pulse_L>2)   && (Pulse_L<7) && (Pulse_R>12)
    180          //      || (Pulse_L>127) && (Pulse_R>2) && (Pulse_R<7) )
    181          //    {
    182          //        Pulse_L = 0;
    183          //        Pulse_R = 0;
    184          //        forward_flag = 1;
    185          //        Runing_Distance++;
    186          //    }
    187          //    else
    188          //        forward_flag = 0;
    189              if ((speed_L > 150) && (speed_R > 150)&&(speed_L < -150) && (speed_R < -150))
   \                     ??Get_CarSpeed_5: (+1)
   \   0000008E   0x....             LDR      R0,??DataTable3_21
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x....             LDR      R1,??DataTable3_25  ;; 0x43160001
   \   00000094   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000098   0xD814             BHI      ??Get_CarSpeed_8
   \   0000009A   0x....             LDR      R0,??DataTable3_24
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x....             LDR      R1,??DataTable3_25  ;; 0x43160001
   \   000000A0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000A4   0xD80E             BHI      ??Get_CarSpeed_8
   \   000000A6   0x....             LDR      R0,??DataTable3_21
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x....             LDR      R1,??DataTable3_26  ;; 0xc3160000
   \   000000AC   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000B0   0xD208             BCS      ??Get_CarSpeed_8
   \   000000B2   0x....             LDR      R0,??DataTable3_24
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0x....             LDR      R1,??DataTable3_26  ;; 0xc3160000
   \   000000B8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BC   0xD202             BCS      ??Get_CarSpeed_8
    190              {
    191                  carStatus = STOP;
   \   000000BE   0x2001             MOVS     R0,#+1
   \   000000C0   0x....             LDR      R1,??DataTable3_27
   \   000000C2   0x7008             STRB     R0,[R1, #+0]
    192              }
    193          
    194          }
   \                     ??Get_CarSpeed_8: (+1)
   \   000000C4   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??LR_Flag:
   \   00000000                      DS8 1
    195          
    196          
    197          
    198          
    199          
    200          
    201          
    202          
    203          
    204          
    205          
    206          
    207          
    208          
    209          
    210          
    211          
    212          
    213          
    214          
    215          
    216          
    217          
    218          
    219          
    220          
    221          
    222          
    223          
    224          
    225          
    226          
    227          
    228          
    229          
    230          
    231          
    232          
    233          
    234          
    235          
    236          
    237          
    238          
    239          
    240          
    241          
    242          
    243          
    244          
    245          
    246          
    247          
    248          
    249          
    250          
    251          
    252          
    253          
    254          ///*******************************************************************************
    255          //简介：速度输出平滑函数，参考直立
    256          //说明：将速度调整分为20个周期，防止影响稳定性
    257          //*********************************************************************************/
    258          //void Speed_Controler_Output(void)
    259          //{
    260          ////  Speed_Control_Cha_L=0;
    261          ////    Speed_Control_Cha_R=0;
    262          //// Speed_Control_Output_L=Speed_Control_Cha_L * (speed_control_period+1)/SPEED_CONTROL_PERIOD + Speed_Control_L;
    263          //// Speed_Control_Output_R=Speed_Control_Cha_R * (speed_control_period+1)/SPEED_CONTROL_PERIOD + Speed_Control_R;
    264          ////    
    265          //}
    266          ///**
    267          //  * 简介
    268          //  *     速度控制
    269          //  * 注意
    270          //  *     转换进制：脉冲数量 / (s转换 * 编码盘)
    271          //    调节  P_Speed_D         P_Speed_G
    272          //  */
    273          
    274          //void Speed_Controler(void)
    275          //{
    276          //    //Speed_I_lntegral_Max = Speed_I_lntegral_Max_Temp;
    277          //    speed_car = (speed_R+speed_L) / 2;
    278          //    speed_R = 0;
    279          //    speed_L = 0;
    280          ////    speed_car = speed_car / (10*);//转换进制
    281          ////    E_speed = speed_set - speed_car;
    282          //
    283          //    //Speed_I_lntegral_Max = 7000;
    284          //
    285          //    if (E_speed > 0)
    286          //    {
    287          //        P_Speed = P_Speed_D;   ///调
    288          //        Speed_I_lntegral += I_Speed_D*E_speed;
    289          //    }
    290          //    else if(E_speed < 0)
    291          //    {
    292          //        P_Speed = P_Speed_G;    ///调
    293          //        Speed_I_lntegral += I_Speed_G*E_speed;
    294          //    }
    295          //
    296          //    if (Speed_I_lntegral < -Speed_I_lntegral_Max)
    297          //        Speed_I_lntegral = -Speed_I_lntegral_Max;
    298          //    if (Speed_I_lntegral >  Speed_I_lntegral_Max)
    299          //        Speed_I_lntegral =  Speed_I_lntegral_Max;
    300          //
    301          //    Speed_Control_Last = Speed_Control;
    302          //    Speed_Control = P_Speed*E_speed + Speed_I_lntegral;   //记为位置式
    303          //
    304          ////    if (Runing_Distance < 60)
    305          ////    {
    306          ////        if (Speed_Control > 15000)
    307          ////            Speed_Control = 15000;
    308          ////        //else if(Speed_Control<-30000)
    309          ////        //  Speed_Control=-30000;
    310          ////    }
    311          ////    else
    312          ////    {
    313          ////        if (Speed_Control > Motor_Max)
    314          ////            Speed_Control = Motor_Max;
    315          ////        else if (Speed_Control < -Motor_Max)
    316          ////            Speed_Control = -Motor_Max;
    317          ////    }
    318          //    
    319          //    
    320          //    //速度控制输出量的变化（增量）   当前时刻减去前一时刻的输出量
    321          //    Speed_Control_Cha = Speed_Control - Speed_Control_Last;
    322          //      //Speed_I_lntegral_Max = 7000;
    323            //   if (Speed_Error_L > 0)
    324            //   {
    325            //       Speed_P_L = Speed_P_Down;   ///调
    326          //       Speed_I_lntegral_L += Speed_I_D*Speed_Error_L;
    327              //   }
    328              //    else if(Speed_Error_L < 0)
    329              //    {
    330              //        Speed_P_L = Speed_P_Up;   ///调
    331              //        Speed_I_lntegral_L += Speed_I_Up*Speed_Error_L;
    332            //    }
    333            //    
    334             //   if (Speed_Error_R> 0)
    335            //    {
    336            //        Speed_P_R = Speed_P_Down;   ///调
    337          //        Speed_I_lntegral_R += Speed_I_D*Speed_Error_R;
    338            //    }
    339            //    else if(Speed_Error_R < 0)
    340            //    {
    341            //        Speed_P_R = Speed_P_Up;   ///调
    342            //        Speed_I_lntegral_R += Speed_I_Up*Speed_Error_R;
    343            //    }
    344          
    345          //    
    346          //}
    347          ///**
    348          //  * 简介
    349          //  *     速度输出平滑函数
    350          //  * 说明
    351          //  *     将速度调整分为20个周期，防止影响稳定性
    352          //  */
    353          //void Speed_Controler_Output(void)
    354          //{
    355          //    Speed_Control_Output = Speed_Control_Cha * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    356          //                         + Speed_Control_Last;
    357          //    
    358          //}
    359          
    360          /*---------------------NO------------速度控制参考直立-------------------------------------*/

   \                                 In section .data, align 4
    361           float Speed_P_Up=130,Speed_P_Down=130;//速度环P选择
   \                     Speed_P_Up:
   \   00000000   0x43020000         DC32 43020000H

   \                                 In section .data, align 4
   \                     Speed_P_Down:
   \   00000000   0x43020000         DC32 43020000H

   \                                 In section .bss, align 4
    362           float Speed_P_L=0,Speed_P_R=0;//速度环P_左轮，速度环P_右轮  
   \                     Speed_P_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_P_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    363           float Speed_I_Up=0, Speed_I_Down=0;//速度环I选择
   \                     Speed_I_Up:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_I_Down:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    364           float Speed_Control_L=0,Speed_Control_Last_L=0;//本次和上次的左/右轮速度控制
   \                     Speed_Control_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Control_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    365           float Speed_Control_R=0,Speed_Control_Last_R=0;//目前由P,I积分累加组成。
   \                     Speed_Control_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Control_Last_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    366           float Speed_Control_Cha_L=0;//左/右轮的速度控制差值，本次和上次的控制差
   \                     Speed_Control_Cha_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    367           float Speed_Control_Cha_R=0;
   \                     Speed_Control_Cha_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 1
    368          uint8 add_speed_flag=1;	//起步加速过程
   \                     add_speed_flag:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 4
    369          signed int Pulse_L=0,Pulse_R=0;
   \                     Pulse_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Pulse_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    370          float P_Speed = 0,I_Speed = 0; 
   \                     P_Speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     I_Speed:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    371          float P_Speed_D =10,P_Speed_G = 10;// 100;
   \                     P_Speed_D:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
   \                     P_Speed_G:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
    372          float I_Speed_D =2,I_Speed_G=2;//2;
   \                     I_Speed_D:
   \   00000000   0x40000000         DC32 40000000H

   \                                 In section .data, align 4
   \                     I_Speed_G:
   \   00000000   0x40000000         DC32 40000000H

   \                                 In section .bss, align 4
    373          float E_speed = 0.0;//E_speed_Last = 0.0,E_speed_Last_Last = 0.0;
   \                     E_speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    374          float Speed_I_lntegral = 0;
   \                     Speed_I_lntegral:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    375          float Speed_Control = 0,Speed_Control_Last = 0;
   \                     Speed_Control:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Control_Last:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    376          float Speed_Control_Output = 0;
   \                     Speed_Control_Output:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    377          float Speed_Control_Cha = 0;
   \                     Speed_Control_Cha:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    378          int   speed_control_period = 0;
   \                     speed_control_period:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    379          signed int podao_spd=164,podao_spd2=100;
   \                     podao_spd:
   \   00000000   0x000000A4         DC32 164

   \                                 In section .data, align 4
   \                     podao_spd2:
   \   00000000   0x00000064         DC32 100

   \                                 In section .bss, align 4
    380          signed int podao_pulse_L=0, podao_pulse_R =0;
   \                     podao_pulse_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     podao_pulse_R:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     speed_set_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Speed_Error_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     speed_set_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     speed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     Speed_Error_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x........         DC32     Speed_Error_Last_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x........         DC32     Speed_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0x........         DC32     Speed_Control_Output_L_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_9:
   \   00000000   0x........         DC32     Speed_I

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_10:
   \   00000000   0x........         DC32     Speed_Error_Last_Last_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_11:
   \   00000000   0x........         DC32     Speed_D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_12:
   \   00000000   0x........         DC32     Speed_Control_Output_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     Speed_Error_Last_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     Speed_Control_Output_R_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     Speed_Error_Last_Last_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     Speed_Control_Output_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     Motor_Out_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     Motor_Out_Min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     speed_old_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     speed_old_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     speed_control_period

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     Speed_Control_Output_Cha_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     Speed_Control_Output_Last_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     Speed_Control_Output2_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     Speed_Control_Output_Cha_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     Speed_Control_Output_Last_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     Speed_Control_Output2_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     gyr_angle_speed_up_kt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     gyr_angle_speed_up

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     KT_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x........         DC32     ??LR_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x........         DC32     speed_measure_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     speed_measure_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     speed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x43160001         DC32     0x43160001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0xC3160000         DC32     0xc3160000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x........         DC32     carStatus
    381          
    382          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Get_CarSpeed
         8   -> FTM_CountClean
         8   -> FTM_SpeedGet
         8   -> GpioGet
         8   -> __aeabi_fmul
         8   -> __aeabi_ui2f
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
       8   KT
         8 __aeabi_cfcmple
      16   Speed_Controler
        16   -> __aeabi_f2uiz
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
        16   -> __aeabi_ui2f
        16 __aeabi_cfcmple
       8   Speed_Controler_Output
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_i2f


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_10
       4  ??DataTable2_11
       4  ??DataTable2_12
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable2_9
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  Angle_Kt_P
       4  E_speed
     198  Get_CarSpeed
       4  I_Speed
       4  I_Speed_D
       4  I_Speed_G
      24  KT
       4  KT_Flag
       1  LR_Flag
       4  Motor_Out_Max
       4  Motor_Out_Min
       4  Motor_Out_Old_L
       4  Motor_Out_Old_R
       4  P_Speed
       4  P_Speed_D
       4  P_Speed_G
       4  Pulse_L
       4  Pulse_R
       4  Speed_Control
       4  Speed_Control_Cha
       4  Speed_Control_Cha_L
       4  Speed_Control_Cha_R
       4  Speed_Control_L
       4  Speed_Control_Last
       4  Speed_Control_Last_L
       4  Speed_Control_Last_R
       4  Speed_Control_Output
       4  Speed_Control_Output2_L
       4  Speed_Control_Output2_R
       4  Speed_Control_Output_Cha_L
       4  Speed_Control_Output_Cha_R
       4  Speed_Control_Output_L
       4  Speed_Control_Output_L_Old
       4  Speed_Control_Output_Last_L
       4  Speed_Control_Output_Last_R
       4  Speed_Control_Output_R
       4  Speed_Control_Output_R_Old
       4  Speed_Control_R
     416  Speed_Controler
      76  Speed_Controler_Output
       4  Speed_D
       4  Speed_Error_L
       4  Speed_Error_Last_L
       4  Speed_Error_Last_Last_L
       4  Speed_Error_Last_Last_R
       4  Speed_Error_Last_R
       4  Speed_Error_R
       4  Speed_I
       4  Speed_I_Down
       4  Speed_I_Up
       4  Speed_I_lntegral
       4  Speed_Kt_I
       4  Speed_Kt_P
       4  Speed_P
       4  Speed_P_Down
       4  Speed_P_L
       4  Speed_P_R
       4  Speed_P_Up
       1  add_speed_flag
       4  gyr_angle_speed_up_kt
       4  podao_pulse_L
       4  podao_pulse_R
       4  podao_spd
       4  podao_spd2
       4  speed_L
       4  speed_R
       4  speed_car
       4  speed_control_period
       4  speed_measure_L
       4  speed_measure_R
       4  speed_old_L
       4  speed_old_R
       4  speed_set
       4  speed_set_L
       4  speed_set_R
       4  speed_set_W
       4  speed_set_Z
       4  speed_set_max
       4  speed_set_min
       4  speed_set_temp

 
 217 bytes in section .bss
  81 bytes in section .data
 878 bytes in section .text
 
 878 bytes of CODE memory
 298 bytes of DATA memory

Errors: none
Warnings: none
