###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        01/May/2018  16:13:21
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\电磁三轮――ZS\5.1\lib\C\KEA128_gpio.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\5.1\lib\C\KEA128_gpio.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_FLASH\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_FLASH\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\..\system\coreSupport\ -On
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_FLASH\List\KEA128_gpio.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\5.1\iar\KEA_128_FLASH\Obj\KEA128_gpio.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\5.1\lib\C\KEA128_gpio.c
      1          /*********************************************************************************************************************
      2           * COPYRIGHT NOTICE
      3           * Copyright (c) 2017,逐飞科技
      4           * All rights reserved.
      5           * 技术讨论QQ群：179029047
      6           *
      7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
      8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
      9           *
     10           * @file       		KEA128_gpio
     11           * @company	   		成都逐飞科技有限公司
     12           * @author     		逐飞科技(QQ3184284598)
     13           * @version    		v2.0
     14           * @Software 		IAR 7.7 or MDK 5.23
     15           * @Target core		S9KEA128AMLK
     16           * @Taobao   		https://seekfree.taobao.com/
     17           * @date       		2017-11-6
     18           ********************************************************************************************************************/
     19          
     20          #include "KEA128_gpio.h"
     21          
     22          

   \                                 In section .rodata, align 4
     23          static FGPIO_Type * const GPIOX[] = FGPIO_BASES;
   \                     GPIOX:
   \   00000000   0xF8000000         DC32 0F8000000H, 0F8000040H, 0F8000080H
   \              0xF8000040   
   \              0xF8000080   
     24          
     25          
     26          //-------------------------------------------------------------------------------------------------------------------
     27          //  @brief      gpio 初始化
     28          //  @param      ptx_n           选择的引脚
     29          //  @param      ddr             引脚方向    GPI：输入 GPO：输出
     30          //  @param      dat             引脚输出数据（如果设置为输出）
     31          //  @return     void
     32          //  @since      v2.0
     33          //  Sample usage:               gpio_init(A5,GPO,0);   //初始化A5为gpio模式，设置为输出模式，初始化输出低电平
     34          //-------------------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     35          void GpioInit(PTX_n ptx_n, GPIO_MOD ddr, uint8 dat)
     36          {
   \                     GpioInit: (+1)
   \   00000000   0xB578             PUSH     {R3-R6,LR}
     37              vuint8 ptx,ptn;
     38              uint32 temp;
     39          
     40              ptx = PTX(ptx_n);//记录模块号    //A,B......
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0xB2E4             UXTB     R4,R4
   \   00000006   0x0964             LSRS     R4,R4,#+5
   \   00000008   0x466D             MOV      R5,SP
   \   0000000A   0x702C             STRB     R4,[R5, #+0]
     41              ptn = PTn(ptx_n);//记录引脚号    //0,1,2,3......
   \   0000000C   0x06C4             LSLS     R4,R0,#+27       ;; ZeroExtS R4,R0,#+27,#+27
   \   0000000E   0x0EE4             LSRS     R4,R4,#+27
   \   00000010   0x466D             MOV      R5,SP
   \   00000012   0x706C             STRB     R4,[R5, #+1]
     42          
     43              if(dat) dat = 1; //修正dat的值;
   \   00000014   0xB2D2             UXTB     R2,R2
   \   00000016   0x2A00             CMP      R2,#+0
   \   00000018   0xD001             BEQ      ??GpioInit_0
   \   0000001A   0x2401             MOVS     R4,#+1
   \   0000001C   0x0022             MOVS     R2,R4
     44          
     45          
     46              if(GPI == ddr)
   \                     ??GpioInit_0: (+1)
   \   0000001E   0xB2C9             UXTB     R1,R1
   \   00000020   0x2900             CMP      R1,#+0
   \   00000022   0xD12A             BNE      ??GpioInit_1
     47              {
     48                  temp = GPIOX[ptx]->PIDR;
   \   00000024   0x466C             MOV      R4,SP
   \   00000026   0x7824             LDRB     R4,[R4, #+0]
   \   00000028   0x....             LDR      R5,??DataTable4
   \   0000002A   0xB2E4             UXTB     R4,R4
   \   0000002C   0x2604             MOVS     R6,#+4
   \   0000002E   0x4374             MULS     R4,R6,R4
   \   00000030   0x592C             LDR      R4,[R5, R4]
   \   00000032   0x69A4             LDR      R4,[R4, #+24]
   \   00000034   0x0023             MOVS     R3,R4
     49                  temp &= ~((uint32)1<<ptn);
   \   00000036   0x2401             MOVS     R4,#+1
   \   00000038   0x466D             MOV      R5,SP
   \   0000003A   0x786D             LDRB     R5,[R5, #+1]
   \   0000003C   0x40AC             LSLS     R4,R4,R5
   \   0000003E   0x43A3             BICS     R3,R3,R4
     50                  GPIOX[ptx]->PIDR = temp;    //取消输入禁用
   \   00000040   0x....             LDR      R4,??DataTable4
   \   00000042   0x466D             MOV      R5,SP
   \   00000044   0x782D             LDRB     R5,[R5, #+0]
   \   00000046   0x2604             MOVS     R6,#+4
   \   00000048   0x4375             MULS     R5,R6,R5
   \   0000004A   0x5964             LDR      R4,[R4, R5]
   \   0000004C   0x61A3             STR      R3,[R4, #+24]
     51          
     52                  temp = GPIOX[ptx]->PDDR;
   \   0000004E   0x466C             MOV      R4,SP
   \   00000050   0x7824             LDRB     R4,[R4, #+0]
   \   00000052   0x....             LDR      R5,??DataTable4
   \   00000054   0xB2E4             UXTB     R4,R4
   \   00000056   0x2604             MOVS     R6,#+4
   \   00000058   0x4374             MULS     R4,R6,R4
   \   0000005A   0x592C             LDR      R4,[R5, R4]
   \   0000005C   0x6964             LDR      R4,[R4, #+20]
   \   0000005E   0x0023             MOVS     R3,R4
     53                  temp &= ~((uint32)1<<ptn);
   \   00000060   0x2401             MOVS     R4,#+1
   \   00000062   0x466D             MOV      R5,SP
   \   00000064   0x786D             LDRB     R5,[R5, #+1]
   \   00000066   0x40AC             LSLS     R4,R4,R5
   \   00000068   0x43A3             BICS     R3,R3,R4
     54                  GPIOX[ptx]->PDDR = temp;    //设置为输入模式
   \   0000006A   0x....             LDR      R4,??DataTable4
   \   0000006C   0x466D             MOV      R5,SP
   \   0000006E   0x782D             LDRB     R5,[R5, #+0]
   \   00000070   0x2604             MOVS     R6,#+4
   \   00000072   0x4375             MULS     R5,R6,R5
   \   00000074   0x5964             LDR      R4,[R4, R5]
   \   00000076   0x6163             STR      R3,[R4, #+20]
   \   00000078   0xE047             B        ??GpioInit_2
     55              }
     56              else
     57              {
     58                  temp = GPIOX[ptx]->PIDR;
   \                     ??GpioInit_1: (+1)
   \   0000007A   0x466C             MOV      R4,SP
   \   0000007C   0x7824             LDRB     R4,[R4, #+0]
   \   0000007E   0x....             LDR      R5,??DataTable4
   \   00000080   0xB2E4             UXTB     R4,R4
   \   00000082   0x2604             MOVS     R6,#+4
   \   00000084   0x4374             MULS     R4,R6,R4
   \   00000086   0x592C             LDR      R4,[R5, R4]
   \   00000088   0x69A4             LDR      R4,[R4, #+24]
   \   0000008A   0x0023             MOVS     R3,R4
     59                  temp |= ((uint32)1<<ptn);
   \   0000008C   0x001D             MOVS     R5,R3
   \   0000008E   0x2301             MOVS     R3,#+1
   \   00000090   0x466C             MOV      R4,SP
   \   00000092   0x7864             LDRB     R4,[R4, #+1]
   \   00000094   0x40A3             LSLS     R3,R3,R4
   \   00000096   0x432B             ORRS     R3,R3,R5
     60                  GPIOX[ptx]->PIDR = temp;    //输入禁用
   \   00000098   0x....             LDR      R4,??DataTable4
   \   0000009A   0x466D             MOV      R5,SP
   \   0000009C   0x782D             LDRB     R5,[R5, #+0]
   \   0000009E   0x2604             MOVS     R6,#+4
   \   000000A0   0x4375             MULS     R5,R6,R5
   \   000000A2   0x5964             LDR      R4,[R4, R5]
   \   000000A4   0x61A3             STR      R3,[R4, #+24]
     61          
     62                  temp = GPIOX[ptx]->PDDR;
   \   000000A6   0x466C             MOV      R4,SP
   \   000000A8   0x7824             LDRB     R4,[R4, #+0]
   \   000000AA   0x....             LDR      R5,??DataTable4
   \   000000AC   0xB2E4             UXTB     R4,R4
   \   000000AE   0x2604             MOVS     R6,#+4
   \   000000B0   0x4374             MULS     R4,R6,R4
   \   000000B2   0x592C             LDR      R4,[R5, R4]
   \   000000B4   0x6964             LDR      R4,[R4, #+20]
   \   000000B6   0x0023             MOVS     R3,R4
     63                  temp |= ((uint32)1<<ptn);
   \   000000B8   0x001D             MOVS     R5,R3
   \   000000BA   0x2301             MOVS     R3,#+1
   \   000000BC   0x466C             MOV      R4,SP
   \   000000BE   0x7864             LDRB     R4,[R4, #+1]
   \   000000C0   0x40A3             LSLS     R3,R3,R4
   \   000000C2   0x432B             ORRS     R3,R3,R5
     64                  GPIOX[ptx]->PDDR = temp;    //设置为输出模式
   \   000000C4   0x....             LDR      R4,??DataTable4
   \   000000C6   0x466D             MOV      R5,SP
   \   000000C8   0x782D             LDRB     R5,[R5, #+0]
   \   000000CA   0x2604             MOVS     R6,#+4
   \   000000CC   0x4375             MULS     R5,R6,R5
   \   000000CE   0x5964             LDR      R4,[R4, R5]
   \   000000D0   0x6163             STR      R3,[R4, #+20]
     65          
     66                  temp = GPIOX[ptx]->PDOR;
   \   000000D2   0x466C             MOV      R4,SP
   \   000000D4   0x7824             LDRB     R4,[R4, #+0]
   \   000000D6   0x....             LDR      R5,??DataTable4
   \   000000D8   0xB2E4             UXTB     R4,R4
   \   000000DA   0x2604             MOVS     R6,#+4
   \   000000DC   0x4374             MULS     R4,R6,R4
   \   000000DE   0x592C             LDR      R4,[R5, R4]
   \   000000E0   0x6824             LDR      R4,[R4, #+0]
   \   000000E2   0x0023             MOVS     R3,R4
     67                  temp &= ~((uint32)1<<ptn);
   \   000000E4   0x2401             MOVS     R4,#+1
   \   000000E6   0x466D             MOV      R5,SP
   \   000000E8   0x786D             LDRB     R5,[R5, #+1]
   \   000000EA   0x40AC             LSLS     R4,R4,R5
   \   000000EC   0x43A3             BICS     R3,R3,R4
     68                  temp |=  (uint32)dat<<ptn;
   \   000000EE   0x001D             MOVS     R5,R3
   \   000000F0   0xB2D2             UXTB     R2,R2
   \   000000F2   0x466B             MOV      R3,SP
   \   000000F4   0x785C             LDRB     R4,[R3, #+1]
   \   000000F6   0x0013             MOVS     R3,R2
   \   000000F8   0x40A3             LSLS     R3,R3,R4
   \   000000FA   0x432B             ORRS     R3,R3,R5
     69                  GPIOX[ptx]->PDOR = temp;    //设置端口状态
   \   000000FC   0x....             LDR      R4,??DataTable4
   \   000000FE   0x466D             MOV      R5,SP
   \   00000100   0x782D             LDRB     R5,[R5, #+0]
   \   00000102   0x2604             MOVS     R6,#+4
   \   00000104   0x4375             MULS     R5,R6,R5
   \   00000106   0x5964             LDR      R4,[R4, R5]
   \   00000108   0x6023             STR      R3,[R4, #+0]
     70              }
     71          }
   \                     ??GpioInit_2: (+1)
   \   0000010A   0xBD71             POP      {R0,R4-R6,PC}    ;; return
     72          
     73          //-------------------------------------------------------------------------------------------------------------------
     74          //  @brief      设置引脚方向
     75          //  @param      ptx_n           选择的引脚
     76          //  @param      ddr             引脚方向    GPI：输入 GPO：输出
     77          //  @return     void
     78          //  @since      v2.0
     79          //  Sample usage:               gpio_ddr(A5,GPO);   //设置A5为输出模式
     80          //-------------------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
     81          void gpio_ddr(PTX_n ptx_n, GPIO_MOD ddr)
     82          {
   \                     gpio_ddr: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     83              vuint8 ptx,ptn;
     84              uint32 temp;
     85          
     86              ptx = PTX(ptx_n);//记录模块号    //A,B......
   \   00000002   0x0003             MOVS     R3,R0
   \   00000004   0xB2DB             UXTB     R3,R3
   \   00000006   0x095B             LSRS     R3,R3,#+5
   \   00000008   0x466C             MOV      R4,SP
   \   0000000A   0x7023             STRB     R3,[R4, #+0]
     87              ptn = PTn(ptx_n);//记录引脚号    //0,1,2,3......
   \   0000000C   0x06C3             LSLS     R3,R0,#+27       ;; ZeroExtS R3,R0,#+27,#+27
   \   0000000E   0x0EDB             LSRS     R3,R3,#+27
   \   00000010   0x466C             MOV      R4,SP
   \   00000012   0x7063             STRB     R3,[R4, #+1]
     88          
     89              if(GPI == ddr)
   \   00000014   0xB2C9             UXTB     R1,R1
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD12A             BNE      ??gpio_ddr_0
     90              {
     91                  temp = GPIOX[ptx]->PIDR;
   \   0000001A   0x466B             MOV      R3,SP
   \   0000001C   0x781B             LDRB     R3,[R3, #+0]
   \   0000001E   0x....             LDR      R4,??DataTable4
   \   00000020   0xB2DB             UXTB     R3,R3
   \   00000022   0x2504             MOVS     R5,#+4
   \   00000024   0x436B             MULS     R3,R5,R3
   \   00000026   0x58E3             LDR      R3,[R4, R3]
   \   00000028   0x699B             LDR      R3,[R3, #+24]
   \   0000002A   0x001A             MOVS     R2,R3
     92                  temp &= ~((uint32)1<<ptn);
   \   0000002C   0x2301             MOVS     R3,#+1
   \   0000002E   0x466C             MOV      R4,SP
   \   00000030   0x7864             LDRB     R4,[R4, #+1]
   \   00000032   0x40A3             LSLS     R3,R3,R4
   \   00000034   0x439A             BICS     R2,R2,R3
     93                  GPIOX[ptx]->PIDR = temp;    //取消输入禁用
   \   00000036   0x....             LDR      R3,??DataTable4
   \   00000038   0x466C             MOV      R4,SP
   \   0000003A   0x7824             LDRB     R4,[R4, #+0]
   \   0000003C   0x2504             MOVS     R5,#+4
   \   0000003E   0x436C             MULS     R4,R5,R4
   \   00000040   0x591B             LDR      R3,[R3, R4]
   \   00000042   0x619A             STR      R2,[R3, #+24]
     94          
     95                  temp = GPIOX[ptx]->PDDR;
   \   00000044   0x466B             MOV      R3,SP
   \   00000046   0x781B             LDRB     R3,[R3, #+0]
   \   00000048   0x....             LDR      R4,??DataTable4
   \   0000004A   0xB2DB             UXTB     R3,R3
   \   0000004C   0x2504             MOVS     R5,#+4
   \   0000004E   0x436B             MULS     R3,R5,R3
   \   00000050   0x58E3             LDR      R3,[R4, R3]
   \   00000052   0x695B             LDR      R3,[R3, #+20]
   \   00000054   0x001A             MOVS     R2,R3
     96                  temp &= ~((uint32)1<<ptn);
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0x466C             MOV      R4,SP
   \   0000005A   0x7864             LDRB     R4,[R4, #+1]
   \   0000005C   0x40A3             LSLS     R3,R3,R4
   \   0000005E   0x439A             BICS     R2,R2,R3
     97                  GPIOX[ptx]->PDDR = temp;    //设置为输入模式
   \   00000060   0x....             LDR      R3,??DataTable4
   \   00000062   0x466C             MOV      R4,SP
   \   00000064   0x7824             LDRB     R4,[R4, #+0]
   \   00000066   0x2504             MOVS     R5,#+4
   \   00000068   0x436C             MULS     R4,R5,R4
   \   0000006A   0x591B             LDR      R3,[R3, R4]
   \   0000006C   0x615A             STR      R2,[R3, #+20]
   \   0000006E   0xE02B             B        ??gpio_ddr_1
     98              }
     99              else
    100              {
    101                  temp = GPIOX[ptx]->PIDR;
   \                     ??gpio_ddr_0: (+1)
   \   00000070   0x466B             MOV      R3,SP
   \   00000072   0x781B             LDRB     R3,[R3, #+0]
   \   00000074   0x....             LDR      R4,??DataTable4
   \   00000076   0xB2DB             UXTB     R3,R3
   \   00000078   0x2504             MOVS     R5,#+4
   \   0000007A   0x436B             MULS     R3,R5,R3
   \   0000007C   0x58E3             LDR      R3,[R4, R3]
   \   0000007E   0x699B             LDR      R3,[R3, #+24]
   \   00000080   0x001A             MOVS     R2,R3
    102                  temp |= ((uint32)1<<ptn);
   \   00000082   0x0014             MOVS     R4,R2
   \   00000084   0x2201             MOVS     R2,#+1
   \   00000086   0x466B             MOV      R3,SP
   \   00000088   0x785B             LDRB     R3,[R3, #+1]
   \   0000008A   0x409A             LSLS     R2,R2,R3
   \   0000008C   0x4322             ORRS     R2,R2,R4
    103                  GPIOX[ptx]->PIDR = temp;    //输入禁用
   \   0000008E   0x....             LDR      R3,??DataTable4
   \   00000090   0x466C             MOV      R4,SP
   \   00000092   0x7824             LDRB     R4,[R4, #+0]
   \   00000094   0x2504             MOVS     R5,#+4
   \   00000096   0x436C             MULS     R4,R5,R4
   \   00000098   0x591B             LDR      R3,[R3, R4]
   \   0000009A   0x619A             STR      R2,[R3, #+24]
    104          
    105                  temp = GPIOX[ptx]->PDDR;
   \   0000009C   0x466B             MOV      R3,SP
   \   0000009E   0x781B             LDRB     R3,[R3, #+0]
   \   000000A0   0x....             LDR      R4,??DataTable4
   \   000000A2   0xB2DB             UXTB     R3,R3
   \   000000A4   0x2504             MOVS     R5,#+4
   \   000000A6   0x436B             MULS     R3,R5,R3
   \   000000A8   0x58E3             LDR      R3,[R4, R3]
   \   000000AA   0x695B             LDR      R3,[R3, #+20]
   \   000000AC   0x001A             MOVS     R2,R3
    106                  temp |= ((uint32)1<<ptn);
   \   000000AE   0x0014             MOVS     R4,R2
   \   000000B0   0x2201             MOVS     R2,#+1
   \   000000B2   0x466B             MOV      R3,SP
   \   000000B4   0x785B             LDRB     R3,[R3, #+1]
   \   000000B6   0x409A             LSLS     R2,R2,R3
   \   000000B8   0x4322             ORRS     R2,R2,R4
    107                  GPIOX[ptx]->PDDR = temp;    //设置为输出模式
   \   000000BA   0x....             LDR      R3,??DataTable4
   \   000000BC   0x466C             MOV      R4,SP
   \   000000BE   0x7824             LDRB     R4,[R4, #+0]
   \   000000C0   0x2504             MOVS     R5,#+4
   \   000000C2   0x436C             MULS     R4,R5,R4
   \   000000C4   0x591B             LDR      R3,[R3, R4]
   \   000000C6   0x615A             STR      R2,[R3, #+20]
    108              }
    109          }
   \                     ??gpio_ddr_1: (+1)
   \   000000C8   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    110          
    111          //-------------------------------------------------------------------------------------------------------------------
    112          //  @brief      读取引脚状态
    113          //  @param      ptx_n           选择的引脚
    114          //  @return     管脚的状态      1为高电平，0为低电平
    115          //  @since      v2.0
    116          //  Sample usage:               uint8 status = gpio_get(A5);   //读取A5为状态
    117          //-------------------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    118          uint8 GpioGet(PTX_n ptx_n)
    119          {
   \                     GpioGet: (+1)
   \   00000000   0xB418             PUSH     {R3,R4}
   \   00000002   0x0001             MOVS     R1,R0
    120              vuint8 ptx,ptn;
    121              uint32 temp;
    122          
    123              ptx = PTX(ptx_n);//记录模块号    //A,B......
   \   00000004   0x0008             MOVS     R0,R1
   \   00000006   0xB2C0             UXTB     R0,R0
   \   00000008   0x0940             LSRS     R0,R0,#+5
   \   0000000A   0x466B             MOV      R3,SP
   \   0000000C   0x7058             STRB     R0,[R3, #+1]
    124              ptn = PTn(ptx_n);//记录引脚号    //0,1,2,3......
   \   0000000E   0x06C8             LSLS     R0,R1,#+27       ;; ZeroExtS R0,R1,#+27,#+27
   \   00000010   0x0EC0             LSRS     R0,R0,#+27
   \   00000012   0x466B             MOV      R3,SP
   \   00000014   0x7018             STRB     R0,[R3, #+0]
    125          
    126              //设置端口状态
    127              temp = GPIOX[ptx]->PDIR;
   \   00000016   0x4668             MOV      R0,SP
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0x....             LDR      R3,??DataTable4
   \   0000001C   0xB2C0             UXTB     R0,R0
   \   0000001E   0x2404             MOVS     R4,#+4
   \   00000020   0x4360             MULS     R0,R4,R0
   \   00000022   0x5818             LDR      R0,[R3, R0]
   \   00000024   0x6900             LDR      R0,[R0, #+16]
   \   00000026   0x0002             MOVS     R2,R0
    128              return ( (temp >> ptn) & 0x1 );
   \   00000028   0x4668             MOV      R0,SP
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x40C2             LSRS     R2,R2,R0
   \   0000002E   0x0010             MOVS     R0,R2
   \   00000030   0x07C0             LSLS     R0,R0,#+31       ;; ZeroExtS R0,R0,#+31,#+31
   \   00000032   0x0FC0             LSRS     R0,R0,#+31
   \   00000034   0xBC12             POP      {R1,R4}
   \   00000036   0x4770             BX       LR               ;; return
    129          }
    130          
    131          //-------------------------------------------------------------------------------------------------------------------
    132          //  @brief      设置引脚状态
    133          //  @param      ptx_n           选择的引脚
    134          //  @param      dat             1为高电平，0为低电平
    135          //  @return     void
    136          //  @since      v2.0
    137          //  Sample usage:               gpio_set(A5,0);   //设置A5为低电平
    138          //-------------------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    139          void GpioSet(PTX_n ptx_n, uint8 dat)
    140          {
   \                     GpioSet: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    141              vuint8 ptx,ptn;
    142              uint32 temp;
    143          
    144              ptx = PTX(ptx_n);//记录模块号    //A,B......
   \   00000002   0x0003             MOVS     R3,R0
   \   00000004   0xB2DB             UXTB     R3,R3
   \   00000006   0x095B             LSRS     R3,R3,#+5
   \   00000008   0x466C             MOV      R4,SP
   \   0000000A   0x7063             STRB     R3,[R4, #+1]
    145              ptn = PTn(ptx_n);//记录引脚号    //0,1,2,3......
   \   0000000C   0x06C3             LSLS     R3,R0,#+27       ;; ZeroExtS R3,R0,#+27,#+27
   \   0000000E   0x0EDB             LSRS     R3,R3,#+27
   \   00000010   0x466C             MOV      R4,SP
   \   00000012   0x7023             STRB     R3,[R4, #+0]
    146          
    147              if(dat) dat = 1; //修正dat的值;
   \   00000014   0xB2C9             UXTB     R1,R1
   \   00000016   0x2900             CMP      R1,#+0
   \   00000018   0xD001             BEQ      ??GpioSet_0
   \   0000001A   0x2301             MOVS     R3,#+1
   \   0000001C   0x0019             MOVS     R1,R3
    148              //设置端口状态
    149              temp = GPIOX[ptx]->PDOR;
   \                     ??GpioSet_0: (+1)
   \   0000001E   0x466B             MOV      R3,SP
   \   00000020   0x785B             LDRB     R3,[R3, #+1]
   \   00000022   0x....             LDR      R4,??DataTable4
   \   00000024   0xB2DB             UXTB     R3,R3
   \   00000026   0x2504             MOVS     R5,#+4
   \   00000028   0x436B             MULS     R3,R5,R3
   \   0000002A   0x58E3             LDR      R3,[R4, R3]
   \   0000002C   0x681B             LDR      R3,[R3, #+0]
   \   0000002E   0x001A             MOVS     R2,R3
    150              temp &= ~((uint32)1<<ptn);
   \   00000030   0x2301             MOVS     R3,#+1
   \   00000032   0x466C             MOV      R4,SP
   \   00000034   0x7824             LDRB     R4,[R4, #+0]
   \   00000036   0x40A3             LSLS     R3,R3,R4
   \   00000038   0x439A             BICS     R2,R2,R3
    151              temp |=  (uint32)dat<<ptn;
   \   0000003A   0x0014             MOVS     R4,R2
   \   0000003C   0xB2C9             UXTB     R1,R1
   \   0000003E   0x466A             MOV      R2,SP
   \   00000040   0x7813             LDRB     R3,[R2, #+0]
   \   00000042   0x000A             MOVS     R2,R1
   \   00000044   0x409A             LSLS     R2,R2,R3
   \   00000046   0x4322             ORRS     R2,R2,R4
    152              GPIOX[ptx]->PDOR = temp;
   \   00000048   0x....             LDR      R3,??DataTable4
   \   0000004A   0x466C             MOV      R4,SP
   \   0000004C   0x7864             LDRB     R4,[R4, #+1]
   \   0000004E   0x2504             MOVS     R5,#+4
   \   00000050   0x436C             MULS     R4,R5,R4
   \   00000052   0x591B             LDR      R3,[R3, R4]
   \   00000054   0x601A             STR      R2,[R3, #+0]
    153          }
   \   00000056   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    154          
    155          //-------------------------------------------------------------------------------------------------------------------
    156          //  @brief      翻转引脚状态
    157          //  @param      ptx_n           选择的引脚
    158          //  @return     void
    159          //  @since      v2.0
    160          //  Sample usage:               gpio_turn(A5);   //翻转A5
    161          //-------------------------------------------------------------------------------------------------------------------

   \                                 In section .text, align 2, keep-with-next
    162          void GpioTurn(PTX_n ptx_n)
    163          {
   \                     GpioTurn: (+1)
   \   00000000   0xB418             PUSH     {R3,R4}
    164              vuint8 ptx,ptn;
    165              uint32 temp;
    166          
    167              ptx = PTX(ptx_n);//记录模块号    //A,B......
   \   00000002   0x0002             MOVS     R2,R0
   \   00000004   0xB2D2             UXTB     R2,R2
   \   00000006   0x0952             LSRS     R2,R2,#+5
   \   00000008   0x466B             MOV      R3,SP
   \   0000000A   0x701A             STRB     R2,[R3, #+0]
    168              ptn = PTn(ptx_n);//记录引脚号    //0,1,2,3......
   \   0000000C   0x06C2             LSLS     R2,R0,#+27       ;; ZeroExtS R2,R0,#+27,#+27
   \   0000000E   0x0ED2             LSRS     R2,R2,#+27
   \   00000010   0x466B             MOV      R3,SP
   \   00000012   0x705A             STRB     R2,[R3, #+1]
    169          
    170              //设置端口状态
    171              temp = GPIOX[ptx]->PTOR;
   \   00000014   0x466A             MOV      R2,SP
   \   00000016   0x7812             LDRB     R2,[R2, #+0]
   \   00000018   0x....             LDR      R3,??DataTable4
   \   0000001A   0xB2D2             UXTB     R2,R2
   \   0000001C   0x2404             MOVS     R4,#+4
   \   0000001E   0x4362             MULS     R2,R4,R2
   \   00000020   0x589A             LDR      R2,[R3, R2]
   \   00000022   0x68D2             LDR      R2,[R2, #+12]
   \   00000024   0x0011             MOVS     R1,R2
    172              temp |= (uint32)(1<<ptn);
   \   00000026   0x000B             MOVS     R3,R1
   \   00000028   0x2101             MOVS     R1,#+1
   \   0000002A   0x466A             MOV      R2,SP
   \   0000002C   0x7852             LDRB     R2,[R2, #+1]
   \   0000002E   0x4091             LSLS     R1,R1,R2
   \   00000030   0x4319             ORRS     R1,R1,R3
    173              GPIOX[ptx]->PTOR = temp;
   \   00000032   0x....             LDR      R2,??DataTable4
   \   00000034   0x466B             MOV      R3,SP
   \   00000036   0x781B             LDRB     R3,[R3, #+0]
   \   00000038   0x2404             MOVS     R4,#+4
   \   0000003A   0x4363             MULS     R3,R4,R3
   \   0000003C   0x58D2             LDR      R2,[R2, R3]
   \   0000003E   0x60D1             STR      R1,[R2, #+12]
    174          }
   \   00000040   0xBC11             POP      {R0,R4}
   \   00000042   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     GPIOX
    175          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   GpioGet
      20   GpioInit
      16   GpioSet
       8   GpioTurn
      16   gpio_ddr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
      12  GPIOX
      56  GpioGet
     268  GpioInit
      88  GpioSet
      68  GpioTurn
     202  gpio_ddr

 
  12 bytes in section .rodata
 686 bytes in section .text
 
 686 bytes of CODE  memory
  12 bytes of CONST memory

Errors: none
Warnings: none
