###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        17/Jul/2018  09:40:45
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\Speed_Control.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\Speed_Control.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config H:\IAR7.3\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\coreSupport\ -Ol
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\Speed_Control.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\Speed_Control.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\Speed_Control.c
      1          #include "Speed_Control.h"
      2          //30,1m//40 1.5m
      3          //50:1.6,55
      4          //60 1.9m//65，2.15m//70,2.3m
      5          /***************速度变量*********************************************************************/
      6          //编码器测的速度和自己设定的速度小写
      7          //float speed_set_Z=60,speed_set_W=50;
      8          /****************速度环*************************************************************************/
      9          //V=30,P=80;I=10;D=0;
     10          //float Speed_P=130,Speed_I=30,Speed_D=0.00;
     11          /****************KT*************************************************************************/

   \                                 In section .data, align 4
     12          float Angle_Kt_P=100,Speed_Kt_P=0,Speed_Kt_I=0;
   \                     Angle_Kt_P:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .bss, align 4
   \                     Speed_Kt_P:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Kt_I:
   \   00000000                      DS8 4
     13          //float gyr_angle_speed_up_kt=2*
     14          //int   KT_Flag=0;
     15          /***************速度变量2*********************************************************************/  

   \                                 In section .bss, align 4
     16          float speed_buzzer=0;
   \                     speed_buzzer:
   \   00000000                      DS8 4
     17          

   \                                 In section .bss, align 4
     18          float speed_set_L=0,speed_set_R=0,speed_set_L_2=0,speed_set_R_2=0;
   \                     speed_set_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_set_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_set_L_2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_set_R_2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     19          float speed_set_W=60, speed_set_Z=60,speed_set_temp = 0,speed_set_temp_L = 0,speed_set_temp_R=0;//速度设定值，临时速度设定值
   \                     speed_set_W:
   \   00000000   0x42700000         DC32 42700000H

   \                                 In section .data, align 4
   \                     speed_set_Z:
   \   00000000   0x42700000         DC32 42700000H

   \                                 In section .bss, align 4
   \                     speed_set_temp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_set_temp_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_set_temp_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     20          float speed_set_max=80, speed_set_min=20;//速度设定最大最小值
   \                     speed_set_max:
   \   00000000   0x42A00000         DC32 42A00000H

   \                                 In section .data, align 4
   \                     speed_set_min:
   \   00000000   0x41A00000         DC32 41A00000H

   \                                 In section .bss, align 4
     21          float Motor_Out_Old_L=0,Motor_Out_Old_R=0;//上一次电机输出PWM值
   \                     Motor_Out_Old_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Motor_Out_Old_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     22          float Motor_Out_Max=8500,Motor_Out_Min=2500;//电机输出最大最小值
   \                     Motor_Out_Max:
   \   00000000   0x4604D000         DC32 4604D000H

   \                                 In section .data, align 4
   \                     Motor_Out_Min:
   \   00000000   0x451C4000         DC32 451C4000H
     23          /****************速度环2*************************************************************************/

   \                                 In section .bss, align 4
     24          float Speed_Error_L = 0, Speed_Error_Last_L = 0, Speed_Error_Last_Last_L = 0,  //L速度偏差值   
   \                     Speed_Error_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     25                Speed_Error_R = 0, Speed_Error_Last_R = 0, Speed_Error_Last_Last_R = 0;  //R速度偏差值 
   \                     Speed_Error_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_Last_Last_R:
   \   00000000                      DS8 4
     26          

   \                                 In section .bss, align 4
     27          float Speed_Error_L1 = 0,Speed_Error_R1 = 0,Error_Weight,
   \                     Speed_Error_L1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_R1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Error_Weight:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     28                 Speed_Error_L2 = 0,Speed_Error_R2 = 0;
   \                     Speed_Error_L2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Error_R2:
   \   00000000                      DS8 4
     29          

   \                                 In section .bss, align 4
     30          float Speed_Control_Output_L=0,//左右轮的速度控制输出
   \                     Speed_Control_Output_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     31                Speed_Control_Output_R=0,//        电机PWM输出 
   \                     Speed_Control_Output_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     32                Speed_Control_Output2_L=0,
   \                     Speed_Control_Output2_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     33                Speed_Control_Output2_R=0,
   \                     Speed_Control_Output2_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     34                Speed_Control_Output_Last_L=0,
   \                     Speed_Control_Output_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     35                Speed_Control_Output_Last_R=0,
   \                     Speed_Control_Output_Last_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     36                Speed_Control_Output_Cha_L=0,
   \                     Speed_Control_Output_Cha_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     37                Speed_Control_Output_Cha_R=0,
   \                     Speed_Control_Output_Cha_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     38                Speed_Control_Output_L_Old=0,
   \                     Speed_Control_Output_L_Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     39                Speed_Control_Output_R_Old=0;
   \                     Speed_Control_Output_R_Old:
   \   00000000                      DS8 4
     40          /******************测速变量***********************************************************************/

   \                                 In section .bss, align 4
     41          float speed_measure_L,speed_measure_R,//测速左,车整体速度
   \                     speed_measure_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_measure_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     42                speed_L = 0,speed_R = 0,speed_car = 0,speed_car_L = 0,speed_car_R = 0;
   \                     speed_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_car:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_car_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_car_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     43          float speed_old_L=0,speed_old_R=0;//上一次测速
   \                     speed_old_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_old_R:
   \   00000000                      DS8 4
     44          
     45          /******************测速变量***********************************************************************
     46          简介：速度控制，
     47          输入：速度设定值
     48          功能：调节实际速度达到设定值
     49          输出：PWM值
     50          *********************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
     51          void Speed_Controler()
     52          {  
   \                     Speed_Controler: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
     53          //  float Speed_Error_L_Temp1=0,Speed_Error_L_Temp2=0,
     54          //        Speed_Error_R_Temp1=0,Speed_Error_R_Temp2=0;
     55          //弯道有利于转弯，目前认为跟那个之前方向环P一样，会弯道稳速，减速，加速？
     56          //  Speed_Error_L = speed_set_L_2- speed_L; 
     57          //  Speed_Error_R = speed_set_R_2 - speed_R; 
     58            
     59            Speed_Error_L = speed_set_L- speed_L; 
   \   00000002   0x....             LDR      R0,??DataTable0
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR      R1,??DataTable0_1
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x.... 0x....      BL       __aeabi_fsub
   \   0000000E   0x....             LDR      R1,??DataTable0_2
   \   00000010   0x6008             STR      R0,[R1, #+0]
     60            Speed_Error_R = speed_set_R - speed_R;
   \   00000012   0x....             LDR      R0,??DataTable0_3
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x....             LDR      R1,??DataTable0_4
   \   00000018   0x6809             LDR      R1,[R1, #+0]
   \   0000001A   0x.... 0x....      BL       __aeabi_fsub
   \   0000001E   0x....             LDR      R1,??DataTable0_5
   \   00000020   0x6008             STR      R0,[R1, #+0]
     61           
     62          //    Speed_Error_L = speed_set- speed_L; 
     63          //  Speed_Error_R = speed_set - speed_R;  
     64          
     65            
     66          //  Speed_Error_L = speed_set- speed_car; 
     67          //  Speed_Error_R = speed_set - speed_car; 
     68          
     69          //  Speed_Error_L=Speed_Error_L/2;
     70          //  Speed_Error_R=Speed_Error_R/2;
     71          
     72          //  Speed_Error_L1 = speed_set- speed_L; 
     73          //  Speed_Error_R1 = speed_set - speed_R;
     74          //  
     75          //  Speed_Error_L2 = speed_set- speed_car; 
     76          //  Speed_Error_R2 = speed_set - speed_car;
     77          //  
     78          //  Error_Weight=1.0;
     79          //  
     80          //  Speed_Error_L = Speed_Error_L1*Error_Weight+Speed_Error_L2*(1-Error_Weight); 
     81          //  Speed_Error_R = Speed_Error_R1*Error_Weight+Speed_Error_R2*(1-Error_Weight); //:\I:1以下
     82          
     83          //  Speed_Error_L/=2;
     84          //  Speed_Error_R/=2;
     85          
     86          //  Speed_Error_L_Temp1 = speed_set_L- speed_L; 
     87          //  Speed_Error_R_Temp1 = speed_set_R - speed_R;
     88          //  Speed_Error_L_Temp2 = speed_set- speed_L; 
     89          //  Speed_Error_R_Temp2 = speed_set - speed_R; 
     90          //  
     91          //  Speed_Error_L=(Speed_Error_L_Temp1+Speed_Error_L_Temp2)/2;
     92          //  Speed_Error_R=(Speed_Error_R_Temp1+Speed_Error_R_Temp2)/2;
     93          
     94          //Speed_Control_Output_L=(uint32)(Speed_Control_Output_L_Old - Speed_P*(Speed_Error_L-Speed_Error_Last_L) + Speed_I*Speed_Error_L + Speed_D*(Speed_Error_L+Speed_Error_Last_Last_L-2*Speed_Error_Last_L));
     95          //Speed_Control_Output_R=(uint32)(Speed_Control_Output_R_Old - Speed_P*(Speed_Error_R-Speed_Error_Last_R) + Speed_I*Speed_Error_R + Speed_D*(Speed_Error_R+Speed_Error_Last_Last_R-2*Speed_Error_Last_R));  
     96          Speed_Control_Output_L=Speed_Control_Output_L_Old - Speed_P*(Speed_Error_L-Speed_Error_Last_L) + Speed_I*Speed_Error_L + Speed_D*(Speed_Error_L+Speed_Error_Last_Last_L-2*Speed_Error_Last_L);
   \   00000022   0x....             LDR      R0,??DataTable0_6
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x....             LDR      R1,??DataTable0_2
   \   00000028   0x6809             LDR      R1,[R1, #+0]
   \   0000002A   0x.... 0x....      BL       __aeabi_fsub
   \   0000002E   0x....             LDR      R1,??DataTable0_7
   \   00000030   0x6809             LDR      R1,[R1, #+0]
   \   00000032   0x.... 0x....      BL       __aeabi_fmul
   \   00000036   0x....             LDR      R1,??DataTable0_8
   \   00000038   0x6809             LDR      R1,[R1, #+0]
   \   0000003A   0x.... 0x....      BL       __aeabi_fadd
   \   0000003E   0x0001             MOVS     R1,R0
   \   00000040   0x000C             MOVS     R4,R1
   \   00000042   0x....             LDR      R0,??DataTable0_9
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0x....             LDR      R0,??DataTable0_2
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x.... 0x....      BL       __aeabi_fmul
   \   0000004E   0x0021             MOVS     R1,R4
   \   00000050   0x.... 0x....      BL       __aeabi_fadd
   \   00000054   0x0001             MOVS     R1,R0
   \   00000056   0x000C             MOVS     R4,R1
   \   00000058   0x....             LDR      R0,??DataTable0_2
   \   0000005A   0x6801             LDR      R1,[R0, #+0]
   \   0000005C   0x....             LDR      R0,??DataTable0_10
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x.... 0x....      BL       __aeabi_fadd
   \   00000064   0x0005             MOVS     R5,R0
   \   00000066   0x....             LDR      R0,??DataTable0_6
   \   00000068   0x6801             LDR      R1,[R0, #+0]
   \   0000006A   0x2080             MOVS     R0,#+128
   \   0000006C   0x05C0             LSLS     R0,R0,#+23       ;; #+1073741824
   \   0000006E   0x.... 0x....      BL       __aeabi_fmul
   \   00000072   0x0001             MOVS     R1,R0
   \   00000074   0x0028             MOVS     R0,R5
   \   00000076   0x.... 0x....      BL       __aeabi_fsub
   \   0000007A   0x....             LDR      R1,??DataTable0_11
   \   0000007C   0x6809             LDR      R1,[R1, #+0]
   \   0000007E   0x.... 0x....      BL       __aeabi_fmul
   \   00000082   0x0021             MOVS     R1,R4
   \   00000084   0x.... 0x....      BL       __aeabi_fadd
   \   00000088   0x....             LDR      R1,??DataTable0_12
   \   0000008A   0x6008             STR      R0,[R1, #+0]
     97          Speed_Control_Output_R=Speed_Control_Output_R_Old - Speed_P*(Speed_Error_R-Speed_Error_Last_R) + Speed_I*Speed_Error_R + Speed_D*(Speed_Error_R+Speed_Error_Last_Last_R-2*Speed_Error_Last_R);  
   \   0000008C   0x....             LDR      R0,??DataTable1
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x....             LDR      R1,??DataTable0_5
   \   00000092   0x6809             LDR      R1,[R1, #+0]
   \   00000094   0x.... 0x....      BL       __aeabi_fsub
   \   00000098   0x....             LDR      R1,??DataTable0_7
   \   0000009A   0x6809             LDR      R1,[R1, #+0]
   \   0000009C   0x.... 0x....      BL       __aeabi_fmul
   \   000000A0   0x....             LDR      R1,??DataTable1_1
   \   000000A2   0x6809             LDR      R1,[R1, #+0]
   \   000000A4   0x.... 0x....      BL       __aeabi_fadd
   \   000000A8   0x0001             MOVS     R1,R0
   \   000000AA   0x000C             MOVS     R4,R1
   \   000000AC   0x....             LDR      R0,??DataTable0_9
   \   000000AE   0x6801             LDR      R1,[R0, #+0]
   \   000000B0   0x....             LDR      R0,??DataTable0_5
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x.... 0x....      BL       __aeabi_fmul
   \   000000B8   0x0021             MOVS     R1,R4
   \   000000BA   0x.... 0x....      BL       __aeabi_fadd
   \   000000BE   0x0001             MOVS     R1,R0
   \   000000C0   0x000C             MOVS     R4,R1
   \   000000C2   0x....             LDR      R0,??DataTable0_5
   \   000000C4   0x6801             LDR      R1,[R0, #+0]
   \   000000C6   0x....             LDR      R0,??DataTable1_2
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0x.... 0x....      BL       __aeabi_fadd
   \   000000CE   0x0005             MOVS     R5,R0
   \   000000D0   0x....             LDR      R0,??DataTable1
   \   000000D2   0x6801             LDR      R1,[R0, #+0]
   \   000000D4   0x2080             MOVS     R0,#+128
   \   000000D6   0x05C0             LSLS     R0,R0,#+23       ;; #+1073741824
   \   000000D8   0x.... 0x....      BL       __aeabi_fmul
   \   000000DC   0x0001             MOVS     R1,R0
   \   000000DE   0x0028             MOVS     R0,R5
   \   000000E0   0x.... 0x....      BL       __aeabi_fsub
   \   000000E4   0x....             LDR      R1,??DataTable0_11
   \   000000E6   0x6809             LDR      R1,[R1, #+0]
   \   000000E8   0x.... 0x....      BL       __aeabi_fmul
   \   000000EC   0x0021             MOVS     R1,R4
   \   000000EE   0x.... 0x....      BL       __aeabi_fadd
   \   000000F2   0x....             LDR      R1,??DataTable1_3
   \   000000F4   0x6008             STR      R0,[R1, #+0]
     98            
     99            if(Speed_Control_Output_L > Motor_Out_Max)
   \   000000F6   0x....             LDR      R0,??DataTable1_4
   \   000000F8   0x6800             LDR      R0,[R0, #+0]
   \   000000FA   0x....             LDR      R1,??DataTable0_12
   \   000000FC   0x6809             LDR      R1,[R1, #+0]
   \   000000FE   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000102   0xD203             BCS      ??Speed_Controler_0
    100              Speed_Control_Output_L = Motor_Out_Max; 
   \   00000104   0x....             LDR      R0,??DataTable1_4
   \   00000106   0x6800             LDR      R0,[R0, #+0]
   \   00000108   0x....             LDR      R1,??DataTable0_12
   \   0000010A   0x6008             STR      R0,[R1, #+0]
    101            if(Speed_Control_Output_L < 0)
   \                     ??Speed_Controler_0: (+1)
   \   0000010C   0x....             LDR      R0,??DataTable0_12
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0x2100             MOVS     R1,#+0
   \   00000112   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000116   0xD202             BCS      ??Speed_Controler_1
    102              Speed_Control_Output_L = 0; 
   \   00000118   0x2000             MOVS     R0,#+0
   \   0000011A   0x....             LDR      R1,??DataTable0_12
   \   0000011C   0x6008             STR      R0,[R1, #+0]
    103            
    104            if(Speed_Control_Output_R > Motor_Out_Max)
   \                     ??Speed_Controler_1: (+1)
   \   0000011E   0x....             LDR      R0,??DataTable1_4
   \   00000120   0x6800             LDR      R0,[R0, #+0]
   \   00000122   0x....             LDR      R1,??DataTable1_3
   \   00000124   0x6809             LDR      R1,[R1, #+0]
   \   00000126   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000012A   0xD203             BCS      ??Speed_Controler_2
    105              Speed_Control_Output_R = Motor_Out_Max; 
   \   0000012C   0x....             LDR      R0,??DataTable1_4
   \   0000012E   0x6800             LDR      R0,[R0, #+0]
   \   00000130   0x....             LDR      R1,??DataTable1_3
   \   00000132   0x6008             STR      R0,[R1, #+0]
    106            if(Speed_Control_Output_R < 0)
   \                     ??Speed_Controler_2: (+1)
   \   00000134   0x....             LDR      R0,??DataTable1_3
   \   00000136   0x6800             LDR      R0,[R0, #+0]
   \   00000138   0x2100             MOVS     R1,#+0
   \   0000013A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000013E   0xD202             BCS      ??Speed_Controler_3
    107              Speed_Control_Output_R = 0;   
   \   00000140   0x2000             MOVS     R0,#+0
   \   00000142   0x....             LDR      R1,??DataTable1_3
   \   00000144   0x6008             STR      R0,[R1, #+0]
    108            
    109            Speed_Control_Output_L_Old= Speed_Control_Output_L;
   \                     ??Speed_Controler_3: (+1)
   \   00000146   0x....             LDR      R0,??DataTable0_12
   \   00000148   0x6800             LDR      R0,[R0, #+0]
   \   0000014A   0x....             LDR      R1,??DataTable0_8
   \   0000014C   0x6008             STR      R0,[R1, #+0]
    110            Speed_Error_Last_Last_L = Speed_Error_Last_L;
   \   0000014E   0x....             LDR      R0,??DataTable0_6
   \   00000150   0x6800             LDR      R0,[R0, #+0]
   \   00000152   0x....             LDR      R1,??DataTable0_10
   \   00000154   0x6008             STR      R0,[R1, #+0]
    111            Speed_Error_Last_L = Speed_Error_L;
   \   00000156   0x....             LDR      R0,??DataTable0_2
   \   00000158   0x6800             LDR      R0,[R0, #+0]
   \   0000015A   0x....             LDR      R1,??DataTable0_6
   \   0000015C   0x6008             STR      R0,[R1, #+0]
    112            speed_old_L = speed_L;
   \   0000015E   0x....             LDR      R0,??DataTable0_1
   \   00000160   0x6800             LDR      R0,[R0, #+0]
   \   00000162   0x....             LDR      R1,??DataTable1_5
   \   00000164   0x6008             STR      R0,[R1, #+0]
    113            
    114            Speed_Control_Output_R_Old= Speed_Control_Output_R;
   \   00000166   0x....             LDR      R0,??DataTable1_3
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x....             LDR      R1,??DataTable1_1
   \   0000016C   0x6008             STR      R0,[R1, #+0]
    115            Speed_Error_Last_Last_R = Speed_Error_Last_R;
   \   0000016E   0x....             LDR      R0,??DataTable1
   \   00000170   0x6800             LDR      R0,[R0, #+0]
   \   00000172   0x....             LDR      R1,??DataTable1_2
   \   00000174   0x6008             STR      R0,[R1, #+0]
    116            Speed_Error_Last_R = Speed_Error_R;
   \   00000176   0x....             LDR      R0,??DataTable0_5
   \   00000178   0x6800             LDR      R0,[R0, #+0]
   \   0000017A   0x....             LDR      R1,??DataTable1
   \   0000017C   0x6008             STR      R0,[R1, #+0]
    117            speed_old_R = speed_R;  
   \   0000017E   0x....             LDR      R0,??DataTable0_4
   \   00000180   0x6800             LDR      R0,[R0, #+0]
   \   00000182   0x....             LDR      R1,??DataTable3
   \   00000184   0x6008             STR      R0,[R1, #+0]
    118           
    119          }
   \   00000186   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    120          
    121          
    122          
    123          /*************************************************************************
    124          获取车速：分时复用两路测速
    125          (PACNT/200)*(编码器齿数/连接轮齿数)*连接轮周长/测速周期==speed
    126          
    127           Distance+=(qd1_result+qd2_result)/6100.0;  //转化为距离
    128            CarSpeed=(qd1_result+qd2_result)*250.0/6100.0;    //求出车速转换为M/S
    129             if(CarSpeed>3.5)CarSpeed=3.5;
    130          *****************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    131          void Get_CarSpeed(void)
    132          {
   \                     Get_CarSpeed: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    133            static uint8 LR_Flag = 0;
    134            LR_Flag = !LR_Flag;//分时复用测两路
   \   00000002   0x....             LDR      R0,??DataTable2
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD103             BNE      ??Get_CarSpeed_0
   \   0000000A   0x2001             MOVS     R0,#+1
   \   0000000C   0x....             LDR      R1,??DataTable2
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
   \   00000010   0xE002             B        ??Get_CarSpeed_1
   \                     ??Get_CarSpeed_0: (+1)
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x....             LDR      R1,??DataTable2
   \   00000016   0x7008             STRB     R0,[R1, #+0]
    135            //开通道
    136            if (LR_Flag)
   \                     ??Get_CarSpeed_1: (+1)
   \   00000018   0x....             LDR      R0,??DataTable2
   \   0000001A   0x7800             LDRB     R0,[R0, #+0]
   \   0000001C   0x2800             CMP      R0,#+0
   \   0000001E   0xD01B             BEQ      ??Get_CarSpeed_2
    137            {
    138               speed_measure_L= FTM_SpeedGet(FTM_SPEED_L);//在开始右通道计数前，将左通道数读出
   \   00000020   0x2000             MOVS     R0,#+0
   \   00000022   0x.... 0x....      BL       FTM_SpeedGet
   \   00000026   0x.... 0x....      BL       __aeabi_ui2f
   \   0000002A   0x....             LDR      R1,??DataTable3_1
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    139               
    140               if(Direction_L==1)
   \   0000002E   0x2023             MOVS     R0,#+35
   \   00000030   0x.... 0x....      BL       GpioGet
   \   00000034   0x2801             CMP      R0,#+1
   \   00000036   0xD104             BNE      ??Get_CarSpeed_3
    141               {
    142                  speed_L=speed_measure_L;//改成2ms一次的测速,速度频率太快，得重调参数,放慢节奏，用4ms
   \   00000038   0x....             LDR      R0,??DataTable3_1
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x....             LDR      R1,??DataTable3_2
   \   0000003E   0x6008             STR      R0,[R1, #+0]
   \   00000040   0xE006             B        ??Get_CarSpeed_4
    143          //        speed_L=speed_L*2;//4ms一次的测速,
    144               }
    145               else
    146               {
    147                  speed_L=-1*speed_measure_L;
   \                     ??Get_CarSpeed_3: (+1)
   \   00000042   0x....             LDR      R0,??DataTable3_1
   \   00000044   0x6801             LDR      R1,[R0, #+0]
   \   00000046   0x....             LDR      R0,??DataTable3_3  ;; 0xbf800000
   \   00000048   0x.... 0x....      BL       __aeabi_fmul
   \   0000004C   0x....             LDR      R1,??DataTable3_2
   \   0000004E   0x6008             STR      R0,[R1, #+0]
    148               }
    149               
    150               Choose_R;//清零计数
   \                     ??Get_CarSpeed_4: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      BL       FTM_CountClean
   \   00000056   0xE01A             B        ??Get_CarSpeed_5
    151            }   
    152            else
    153            {
    154               speed_measure_R= FTM_SpeedGet(FTM_SPEED_R);//在开始右通道计数前，将左通道数读出
   \                     ??Get_CarSpeed_2: (+1)
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       FTM_SpeedGet
   \   0000005E   0x.... 0x....      BL       __aeabi_ui2f
   \   00000062   0x....             LDR      R1,??DataTable3_4
   \   00000064   0x6008             STR      R0,[R1, #+0]
    155               if(Direction_R==1)
   \   00000066   0x2021             MOVS     R0,#+33
   \   00000068   0x.... 0x....      BL       GpioGet
   \   0000006C   0x2801             CMP      R0,#+1
   \   0000006E   0xD107             BNE      ??Get_CarSpeed_6
    156               {
    157                 speed_R=-1*speed_measure_R;
   \   00000070   0x....             LDR      R0,??DataTable3_4
   \   00000072   0x6801             LDR      R1,[R0, #+0]
   \   00000074   0x....             LDR      R0,??DataTable3_3  ;; 0xbf800000
   \   00000076   0x.... 0x....      BL       __aeabi_fmul
   \   0000007A   0x....             LDR      R1,??DataTable3_5
   \   0000007C   0x6008             STR      R0,[R1, #+0]
   \   0000007E   0xE003             B        ??Get_CarSpeed_7
    158          //       speed_R=speed_R*2;
    159               }
    160               else
    161               {
    162                speed_R=speed_measure_R;
   \                     ??Get_CarSpeed_6: (+1)
   \   00000080   0x....             LDR      R0,??DataTable3_4
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x....             LDR      R1,??DataTable3_5
   \   00000086   0x6008             STR      R0,[R1, #+0]
    163               }
    164            Choose_L;//清零计数
   \                     ??Get_CarSpeed_7: (+1)
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x.... 0x....      BL       FTM_CountClean
    165            }
    166          //    if ( (Pulse_L>7)   && (Pulse_R>7)
    167          //      || (Pulse_L>2)   && (Pulse_L<7) && (Pulse_R>12)
    168          //      || (Pulse_L>127) && (Pulse_R>2) && (Pulse_R<7) )
    169          //    {
    170          //        Pulse_L = 0;
    171          //        Pulse_R = 0;
    172          //        forward_flag = 1;
    173          //        Runing_Distance++;
    174          //    }
    175          //    else
    176          //        forward_flag = 0;
    177              if ((speed_L > 150) && (speed_R > 150)&&(speed_L < -150) && (speed_R < -150))
   \                     ??Get_CarSpeed_5: (+1)
   \   0000008E   0x....             LDR      R0,??DataTable3_2
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x....             LDR      R1,??DataTable3_6  ;; 0x43160001
   \   00000094   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000098   0xD814             BHI      ??Get_CarSpeed_8
   \   0000009A   0x....             LDR      R0,??DataTable3_5
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x....             LDR      R1,??DataTable3_6  ;; 0x43160001
   \   000000A0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000A4   0xD80E             BHI      ??Get_CarSpeed_8
   \   000000A6   0x....             LDR      R0,??DataTable3_2
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x....             LDR      R1,??DataTable3_7  ;; 0xc3160000
   \   000000AC   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000B0   0xD208             BCS      ??Get_CarSpeed_8
   \   000000B2   0x....             LDR      R0,??DataTable3_5
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0x....             LDR      R1,??DataTable3_7  ;; 0xc3160000
   \   000000B8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BC   0xD202             BCS      ??Get_CarSpeed_8
    178              {
    179                  carStatus = STOP;
   \   000000BE   0x2001             MOVS     R0,#+1
   \   000000C0   0x....             LDR      R1,??DataTable3_8
   \   000000C2   0x7008             STRB     R0,[R1, #+0]
    180              }
    181             speed_car=(speed_L+speed_R)/2;    
   \                     ??Get_CarSpeed_8: (+1)
   \   000000C4   0x....             LDR      R0,??DataTable3_2
   \   000000C6   0x6801             LDR      R1,[R0, #+0]
   \   000000C8   0x....             LDR      R0,??DataTable3_5
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x.... 0x....      BL       __aeabi_fadd
   \   000000D0   0x2180             MOVS     R1,#+128
   \   000000D2   0x05C9             LSLS     R1,R1,#+23       ;; #+1073741824
   \   000000D4   0x.... 0x....      BL       __aeabi_fdiv
   \   000000D8   0x....             LDR      R1,??DataTable3_9
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    182             speed_buzzer=speed_set-20;
   \   000000DC   0x....             LDR      R0,??DataTable3_10
   \   000000DE   0x6801             LDR      R1,[R0, #+0]
   \   000000E0   0x....             LDR      R0,??DataTable3_11  ;; 0xc1a00000
   \   000000E2   0x.... 0x....      BL       __aeabi_fadd
   \   000000E6   0x....             LDR      R1,??DataTable3_12
   \   000000E8   0x6008             STR      R0,[R1, #+0]
    183             
    184            
    185            if(speed_car<speed_buzzer)   BUZZER_ON;
   \   000000EA   0x....             LDR      R0,??DataTable3_9
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x....             LDR      R1,??DataTable3_12
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000F6   0xD203             BCS      ??Get_CarSpeed_9
   \   000000F8   0x2101             MOVS     R1,#+1
   \   000000FA   0x2018             MOVS     R0,#+24
   \   000000FC   0x.... 0x....      BL       GpioSet
    186            if(speed_car>speed_buzzer)  BUZZER_OFF;
   \                     ??Get_CarSpeed_9: (+1)
   \   00000100   0x....             LDR      R0,??DataTable3_12
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0x....             LDR      R1,??DataTable3_9
   \   00000106   0x6809             LDR      R1,[R1, #+0]
   \   00000108   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000010C   0xD203             BCS      ??Get_CarSpeed_10
   \   0000010E   0x2100             MOVS     R1,#+0
   \   00000110   0x2018             MOVS     R0,#+24
   \   00000112   0x.... 0x....      BL       GpioSet
    187            if(speed_L<10&&speed_R<10&&speed_L>-10&&speed_R>-10)
   \                     ??Get_CarSpeed_10: (+1)
   \   00000116   0x....             LDR      R0,??DataTable3_2
   \   00000118   0x6800             LDR      R0,[R0, #+0]
   \   0000011A   0x....             LDR      R1,??DataTable3_13  ;; 0x41200000
   \   0000011C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000120   0xD215             BCS      ??Get_CarSpeed_11
   \   00000122   0x....             LDR      R0,??DataTable3_5
   \   00000124   0x6800             LDR      R0,[R0, #+0]
   \   00000126   0x....             LDR      R1,??DataTable3_13  ;; 0x41200000
   \   00000128   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000012C   0xD20F             BCS      ??Get_CarSpeed_11
   \   0000012E   0x....             LDR      R0,??DataTable3_2
   \   00000130   0x6800             LDR      R0,[R0, #+0]
   \   00000132   0x....             LDR      R1,??DataTable3_14  ;; 0xc11fffff
   \   00000134   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000138   0xD809             BHI      ??Get_CarSpeed_11
   \   0000013A   0x....             LDR      R0,??DataTable3_5
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x....             LDR      R1,??DataTable3_14  ;; 0xc11fffff
   \   00000140   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000144   0xD803             BHI      ??Get_CarSpeed_11
    188                BUZZER_OFF;
   \   00000146   0x2100             MOVS     R1,#+0
   \   00000148   0x2018             MOVS     R0,#+24
   \   0000014A   0x.... 0x....      BL       GpioSet
    189          }
   \                     ??Get_CarSpeed_11: (+1)
   \   0000014E   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 1
   \                     ??LR_Flag:
   \   00000000                      DS8 1
    190          

   \                                 In section .text, align 2, keep-with-next
    191          void Stop_zs(void)
    192          {
   \                     Stop_zs: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    193            int Stop_Flag=0;
   \   00000002   0x2200             MOVS     R2,#+0
    194            
    195            if(speed_L>30&&speed_R>30)
   \   00000004   0x....             LDR      R0,??DataTable3_2
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x....             LDR      R1,??DataTable3_15  ;; 0x41f00001
   \   0000000A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000000E   0xD806             BHI      ??Stop_zs_0
   \   00000010   0x....             LDR      R0,??DataTable3_5
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x....             LDR      R1,??DataTable3_15  ;; 0x41f00001
   \   00000016   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000001A   0xD800             BHI      ??Stop_zs_0
    196              Stop_Flag=1;
   \   0000001C   0x2201             MOVS     R2,#+1
    197            
    198            if(Stop_Flag==1)
   \                     ??Stop_zs_0: (+1)
   \   0000001E   0x2A01             CMP      R2,#+1
   \   00000020   0xD150             BNE      ??Stop_zs_1
    199            { 
    200               if(speed_L>200||speed_R>200||(speed_L>150&&speed_R>150))
   \   00000022   0x....             LDR      R0,??DataTable3_2
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0x....             LDR      R1,??DataTable3_16  ;; 0x43480001
   \   00000028   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000002C   0xD911             BLS      ??Stop_zs_2
   \   0000002E   0x....             LDR      R0,??DataTable3_5
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x....             LDR      R1,??DataTable3_16  ;; 0x43480001
   \   00000034   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000038   0xD90B             BLS      ??Stop_zs_2
   \   0000003A   0x....             LDR      R0,??DataTable3_2
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x....             LDR      R1,??DataTable3_6  ;; 0x43160001
   \   00000040   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000044   0xD817             BHI      ??Stop_zs_3
   \   00000046   0x....             LDR      R0,??DataTable3_5
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x....             LDR      R1,??DataTable3_6  ;; 0x43160001
   \   0000004C   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000050   0xD811             BHI      ??Stop_zs_3
    201                  {
    202                    locking_L;
   \                     ??Stop_zs_2: (+1)
   \   00000052   0x2100             MOVS     R1,#+0
   \   00000054   0x202A             MOVS     R0,#+42
   \   00000056   0x.... 0x....      BL       GpioSet
   \   0000005A   0x2100             MOVS     R1,#+0
   \   0000005C   0x201A             MOVS     R0,#+26
   \   0000005E   0x.... 0x....      BL       GpioSet
    203                    locking_R;
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x2024             MOVS     R0,#+36
   \   00000066   0x.... 0x....      BL       GpioSet
   \   0000006A   0x2100             MOVS     R1,#+0
   \   0000006C   0x201C             MOVS     R0,#+28
   \   0000006E   0x.... 0x....      BL       GpioSet
    204                    PIT_DisableIrq();//关 PIT 中断
   \   00000072   0x.... 0x....      BL       PIT_DisableIrq
    205                  }
    206           
    207              if(AD_inductor[0]<1&&AD_inductor[1]<1&&AD_inductor[2]<1)
   \                     ??Stop_zs_3: (+1)
   \   00000076   0x....             LDR      R0,??DataTable3_17
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x21FE             MOVS     R1,#+254
   \   0000007C   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   0000007E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000082   0xD21F             BCS      ??Stop_zs_1
   \   00000084   0x....             LDR      R0,??DataTable3_17
   \   00000086   0x6840             LDR      R0,[R0, #+4]
   \   00000088   0x21FE             MOVS     R1,#+254
   \   0000008A   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   0000008C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000090   0xD218             BCS      ??Stop_zs_1
   \   00000092   0x....             LDR      R0,??DataTable3_17
   \   00000094   0x6880             LDR      R0,[R0, #+8]
   \   00000096   0x21FE             MOVS     R1,#+254
   \   00000098   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   0000009A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000009E   0xD211             BCS      ??Stop_zs_1
    208                 {
    209                    locking_L;
   \   000000A0   0x2100             MOVS     R1,#+0
   \   000000A2   0x202A             MOVS     R0,#+42
   \   000000A4   0x.... 0x....      BL       GpioSet
   \   000000A8   0x2100             MOVS     R1,#+0
   \   000000AA   0x201A             MOVS     R0,#+26
   \   000000AC   0x.... 0x....      BL       GpioSet
    210                    locking_R;
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x2024             MOVS     R0,#+36
   \   000000B4   0x.... 0x....      BL       GpioSet
   \   000000B8   0x2100             MOVS     R1,#+0
   \   000000BA   0x201C             MOVS     R0,#+28
   \   000000BC   0x.... 0x....      BL       GpioSet
    211                    PIT_DisableIrq();//关 PIT 中断
   \   000000C0   0x.... 0x....      BL       PIT_DisableIrq
    212                 }
    213            }
    214          
    215          }
   \                     ??Stop_zs_1: (+1)
   \   000000C4   0xBD01             POP      {R0,PC}          ;; return
    216          
    217          /**
    218            * 简介
    219            *     速度输出平滑函数
    220            * 说明
    221            *     将速度调整分为20个周期，防止影响稳定性
    222            */

   \                                 In section .text, align 2, keep-with-next
    223          void Speed_Controler_Output(void)
    224          {
   \                     Speed_Controler_Output: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    225            Speed_Control_Output2_L = Speed_Control_Output_Cha_L * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    226                                   + Speed_Control_Output_Last_L; 
   \   00000002   0x....             LDR      R0,??DataTable3_18
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x.... 0x....      BL       __aeabi_i2f
   \   0000000C   0x....             LDR      R1,??DataTable3_19
   \   0000000E   0x6809             LDR      R1,[R1, #+0]
   \   00000010   0x.... 0x....      BL       __aeabi_fmul
   \   00000014   0x....             LDR      R1,??DataTable3_20  ;; 0x40a00000
   \   00000016   0x.... 0x....      BL       __aeabi_fdiv
   \   0000001A   0x....             LDR      R1,??DataTable3_21
   \   0000001C   0x6809             LDR      R1,[R1, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_fadd
   \   00000022   0x....             LDR      R1,??DataTable3_22
   \   00000024   0x6008             STR      R0,[R1, #+0]
    227           
    228            Speed_Control_Output2_R = Speed_Control_Output_Cha_R * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    229                                   + Speed_Control_Output_Last_R;  
   \   00000026   0x....             LDR      R0,??DataTable3_18
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x1C40             ADDS     R0,R0,#+1
   \   0000002C   0x.... 0x....      BL       __aeabi_i2f
   \   00000030   0x....             LDR      R1,??DataTable3_23
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x.... 0x....      BL       __aeabi_fmul
   \   00000038   0x....             LDR      R1,??DataTable3_20  ;; 0x40a00000
   \   0000003A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000003E   0x....             LDR      R1,??DataTable3_24
   \   00000040   0x6809             LDR      R1,[R1, #+0]
   \   00000042   0x.... 0x....      BL       __aeabi_fadd
   \   00000046   0x....             LDR      R1,??DataTable3_25
   \   00000048   0x6008             STR      R0,[R1, #+0]
    230          //  Speed_Control_Output = Speed_Control_Cha * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    231          //                         + Speed_Control_Last;
    232          //    
    233          }
   \   0000004A   0xBD01             POP      {R0,PC}          ;; return
    234          
    235          
    236          
    237          /*可在角速度大于2的绝对值时蜂鸣器向测试*/

   \                                 In section .text, align 2, keep-with-next
    238          void KT()
    239          {
    240          //  if(gyr_angle_speed_up>gyr_angle_speed_up_kt)
    241          //     KT_Flag=1;
    242          //  if(KT_Flag==1)
    243          //  { //KT输出=P*
    244          ////     Kt_Output_L=Angle_Kt_P*gyr_angle_speed_up
    245          //  }
    246             
    247          }
   \                     KT: (+1)
   \   00000000   0x4770             BX       LR               ;; return
    248          
    249          
    250          
    251          
    252          
    253          
    254          
    255          
    256          
    257          
    258          
    259          
    260          
    261          
    262          
    263          
    264          
    265          
    266          
    267          
    268          
    269          
    270          
    271          
    272          
    273          
    274          
    275          
    276          
    277          
    278          
    279          
    280          
    281          
    282          
    283          
    284          
    285          
    286          
    287          
    288          
    289          
    290          
    291          
    292          
    293          
    294          
    295          
    296          ///*******************************************************************************
    297          //简介：速度输出平滑函数，参考直立
    298          //说明：将速度调整分为20个周期，防止影响稳定性
    299          //*********************************************************************************/
    300          //void Speed_Controler_Output(void)
    301          //{
    302          ////  Speed_Control_Cha_L=0;
    303          ////    Speed_Control_Cha_R=0;
    304          //// Speed_Control_Output_L=Speed_Control_Cha_L * (speed_control_period+1)/SPEED_CONTROL_PERIOD + Speed_Control_L;
    305          //// Speed_Control_Output_R=Speed_Control_Cha_R * (speed_control_period+1)/SPEED_CONTROL_PERIOD + Speed_Control_R;
    306          ////    
    307          //}
    308          ///**
    309          //  * 简介
    310          //  *     速度控制
    311          //  * 注意
    312          //  *     转换进制：脉冲数量 / (s转换 * 编码盘)
    313          //    调节  P_Speed_D         P_Speed_G
    314          //  */
    315          
    316          //void Speed_Controler(void)
    317          //{
    318          //    //Speed_I_lntegral_Max = Speed_I_lntegral_Max_Temp;
    319          //    speed_car = (speed_R+speed_L) / 2;
    320          //    speed_R = 0;
    321          //    speed_L = 0;
    322          ////    speed_car = speed_car / (10*);//转换进制
    323          ////    E_speed = speed_set - speed_car;
    324          //
    325          //    //Speed_I_lntegral_Max = 7000;
    326          //
    327          //    if (E_speed > 0)
    328          //    {
    329          //        P_Speed = P_Speed_D;   ///调
    330          //        Speed_I_lntegral += I_Speed_D*E_speed;
    331          //    }
    332          //    else if(E_speed < 0)
    333          //    {
    334          //        P_Speed = P_Speed_G;    ///调
    335          //        Speed_I_lntegral += I_Speed_G*E_speed;
    336          //    }
    337          //
    338          //    if (Speed_I_lntegral < -Speed_I_lntegral_Max)
    339          //        Speed_I_lntegral = -Speed_I_lntegral_Max;
    340          //    if (Speed_I_lntegral >  Speed_I_lntegral_Max)
    341          //        Speed_I_lntegral =  Speed_I_lntegral_Max;
    342          //
    343          //    Speed_Control_Last = Speed_Control;
    344          //    Speed_Control = P_Speed*E_speed + Speed_I_lntegral;   //记为位置式
    345          //
    346          ////    if (Runing_Distance < 60)
    347          ////    {
    348          ////        if (Speed_Control > 15000)
    349          ////            Speed_Control = 15000;
    350          ////        //else if(Speed_Control<-30000)
    351          ////        //  Speed_Control=-30000;
    352          ////    }
    353          ////    else
    354          ////    {
    355          ////        if (Speed_Control > Motor_Max)
    356          ////            Speed_Control = Motor_Max;
    357          ////        else if (Speed_Control < -Motor_Max)
    358          ////            Speed_Control = -Motor_Max;
    359          ////    }
    360          //    
    361          //    
    362          //    //速度控制输出量的变化（增量）   当前时刻减去前一时刻的输出量
    363          //    Speed_Control_Cha = Speed_Control - Speed_Control_Last;
    364          //      //Speed_I_lntegral_Max = 7000;
    365            //   if (Speed_Error_L > 0)
    366            //   {
    367            //       Speed_P_L = Speed_P_Down;   ///调
    368          //       Speed_I_lntegral_L += Speed_I_D*Speed_Error_L;
    369              //   }
    370              //    else if(Speed_Error_L < 0)
    371              //    {
    372              //        Speed_P_L = Speed_P_Up;   ///调
    373              //        Speed_I_lntegral_L += Speed_I_Up*Speed_Error_L;
    374            //    }
    375            //    
    376             //   if (Speed_Error_R> 0)
    377            //    {
    378            //        Speed_P_R = Speed_P_Down;   ///调
    379          //        Speed_I_lntegral_R += Speed_I_D*Speed_Error_R;
    380            //    }
    381            //    else if(Speed_Error_R < 0)
    382            //    {
    383            //        Speed_P_R = Speed_P_Up;   ///调
    384            //        Speed_I_lntegral_R += Speed_I_Up*Speed_Error_R;
    385            //    }
    386          
    387          //    
    388          //}
    389          ///**
    390          //  * 简介
    391          //  *     速度输出平滑函数
    392          //  * 说明
    393          //  *     将速度调整分为20个周期，防止影响稳定性
    394          //  */
    395          //void Speed_Controler_Output(void)
    396          //{
    397          //    Speed_Control_Output = Speed_Control_Cha * (speed_control_period+1)/SPEED_CONTROL_PERIOD
    398          //                         + Speed_Control_Last;
    399          //    
    400          //}
    401          
    402          /*---------------------NO------------速度控制参考直立-------------------------------------*/

   \                                 In section .data, align 4
    403           float Speed_P_Up=130,Speed_P_Down=130;//速度环P选择
   \                     Speed_P_Up:
   \   00000000   0x43020000         DC32 43020000H

   \                                 In section .data, align 4
   \                     Speed_P_Down:
   \   00000000   0x43020000         DC32 43020000H

   \                                 In section .bss, align 4
    404           float Speed_P_L=0,Speed_P_R=0;//速度环P_左轮，速度环P_右轮  
   \                     Speed_P_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_P_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    405           float Speed_I_Up=0, Speed_I_Down=0;//速度环I选择
   \                     Speed_I_Up:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_I_Down:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    406           float Speed_Control_L=0,Speed_Control_Last_L=0;//本次和上次的左/右轮速度控制
   \                     Speed_Control_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Control_Last_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    407           float Speed_Control_R=0,Speed_Control_Last_R=0;//目前由P,I积分累加组成。
   \                     Speed_Control_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Control_Last_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    408           float Speed_Control_Cha_L=0;//左/右轮的速度控制差值，本次和上次的控制差
   \                     Speed_Control_Cha_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    409           float Speed_Control_Cha_R=0;
   \                     Speed_Control_Cha_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 1
    410          uint8 add_speed_flag=1;	//起步加速过程
   \                     add_speed_flag:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 4
    411          signed int Pulse_L=0,Pulse_R=0;
   \                     Pulse_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Pulse_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    412          float P_Speed = 0,I_Speed = 0; 
   \                     P_Speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     I_Speed:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    413          float P_Speed_D =10,P_Speed_G = 10;// 100;
   \                     P_Speed_D:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
   \                     P_Speed_G:
   \   00000000   0x41200000         DC32 41200000H

   \                                 In section .data, align 4
    414          float I_Speed_D =2,I_Speed_G=2;//2;
   \                     I_Speed_D:
   \   00000000   0x40000000         DC32 40000000H

   \                                 In section .data, align 4
   \                     I_Speed_G:
   \   00000000   0x40000000         DC32 40000000H

   \                                 In section .bss, align 4
    415          float E_speed = 0.0;//E_speed_Last = 0.0,E_speed_Last_Last = 0.0;
   \                     E_speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    416          float Speed_I_lntegral = 0;
   \                     Speed_I_lntegral:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    417          float Speed_Control = 0,Speed_Control_Last = 0;
   \                     Speed_Control:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_Control_Last:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    418          float Speed_Control_Output = 0;
   \                     Speed_Control_Output:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    419          float Speed_Control_Cha = 0;
   \                     Speed_Control_Cha:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    420          int   speed_control_period = 0;
   \                     speed_control_period:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    421          signed int podao_spd=164,podao_spd2=100;
   \                     podao_spd:
   \   00000000   0x000000A4         DC32 164

   \                                 In section .data, align 4
   \                     podao_spd2:
   \   00000000   0x00000064         DC32 100

   \                                 In section .bss, align 4
    422          signed int podao_pulse_L=0, podao_pulse_R =0;
   \                     podao_pulse_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     podao_pulse_R:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     speed_set_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x........         DC32     Speed_Error_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     speed_set_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     speed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     Speed_Error_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x........         DC32     Speed_Error_Last_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0x........         DC32     Speed_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_8:
   \   00000000   0x........         DC32     Speed_Control_Output_L_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_9:
   \   00000000   0x........         DC32     Speed_I

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_10:
   \   00000000   0x........         DC32     Speed_Error_Last_Last_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_11:
   \   00000000   0x........         DC32     Speed_D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_12:
   \   00000000   0x........         DC32     Speed_Control_Output_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Speed_Error_Last_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     Speed_Control_Output_R_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     Speed_Error_Last_Last_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     Speed_Control_Output_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     Motor_Out_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     speed_old_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     ??LR_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     speed_old_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     speed_measure_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     speed_measure_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     speed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x43160001         DC32     0x43160001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0xC3160000         DC32     0xc3160000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     carStatus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     speed_car

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0xC1A00000         DC32     0xc1a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     speed_buzzer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0xC11FFFFF         DC32     0xc11fffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x41F00001         DC32     0x41f00001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x43480001         DC32     0x43480001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     speed_control_period

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x........         DC32     Speed_Control_Output_Cha_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x40A00000         DC32     0x40a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x........         DC32     Speed_Control_Output_Last_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x........         DC32     Speed_Control_Output2_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     Speed_Control_Output_Cha_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     Speed_Control_Output_Last_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x........         DC32     Speed_Control_Output2_R
    423          
    424          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Get_CarSpeed
         8   -> FTM_CountClean
         8   -> FTM_SpeedGet
         8   -> GpioGet
         8   -> GpioSet
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_ui2f
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
       0   KT
      16   Speed_Controler
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
        16 __aeabi_cfcmple
       8   Speed_Controler_Output
         8   -> __aeabi_fadd
         8   -> __aeabi_fdiv
         8   -> __aeabi_fmul
         8   -> __aeabi_i2f
       8   Stop_zs
         8   -> GpioSet
         8   -> PIT_DisableIrq
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_10
       4  ??DataTable0_11
       4  ??DataTable0_12
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable0_8
       4  ??DataTable0_9
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable2
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  Angle_Kt_P
       4  E_speed
       4  Error_Weight
     336  Get_CarSpeed
       4  I_Speed
       4  I_Speed_D
       4  I_Speed_G
       2  KT
       1  LR_Flag
       4  Motor_Out_Max
       4  Motor_Out_Min
       4  Motor_Out_Old_L
       4  Motor_Out_Old_R
       4  P_Speed
       4  P_Speed_D
       4  P_Speed_G
       4  Pulse_L
       4  Pulse_R
       4  Speed_Control
       4  Speed_Control_Cha
       4  Speed_Control_Cha_L
       4  Speed_Control_Cha_R
       4  Speed_Control_L
       4  Speed_Control_Last
       4  Speed_Control_Last_L
       4  Speed_Control_Last_R
       4  Speed_Control_Output
       4  Speed_Control_Output2_L
       4  Speed_Control_Output2_R
       4  Speed_Control_Output_Cha_L
       4  Speed_Control_Output_Cha_R
       4  Speed_Control_Output_L
       4  Speed_Control_Output_L_Old
       4  Speed_Control_Output_Last_L
       4  Speed_Control_Output_Last_R
       4  Speed_Control_Output_R
       4  Speed_Control_Output_R_Old
       4  Speed_Control_R
     392  Speed_Controler
      76  Speed_Controler_Output
       4  Speed_Error_L
       4  Speed_Error_L1
       4  Speed_Error_L2
       4  Speed_Error_Last_L
       4  Speed_Error_Last_Last_L
       4  Speed_Error_Last_Last_R
       4  Speed_Error_Last_R
       4  Speed_Error_R
       4  Speed_Error_R1
       4  Speed_Error_R2
       4  Speed_I_Down
       4  Speed_I_Up
       4  Speed_I_lntegral
       4  Speed_Kt_I
       4  Speed_Kt_P
       4  Speed_P_Down
       4  Speed_P_L
       4  Speed_P_R
       4  Speed_P_Up
     198  Stop_zs
       1  add_speed_flag
       4  podao_pulse_L
       4  podao_pulse_R
       4  podao_spd
       4  podao_spd2
       4  speed_L
       4  speed_R
       4  speed_buzzer
       4  speed_car
       4  speed_car_L
       4  speed_car_R
       4  speed_control_period
       4  speed_measure_L
       4  speed_measure_R
       4  speed_old_L
       4  speed_old_R
       4  speed_set_L
       4  speed_set_L_2
       4  speed_set_R
       4  speed_set_R_2
       4  speed_set_W
       4  speed_set_Z
       4  speed_set_max
       4  speed_set_min
       4  speed_set_temp
       4  speed_set_temp_L
       4  speed_set_temp_R

 
   261 bytes in section .bss
    61 bytes in section .data
 1 188 bytes in section .text
 
 1 188 bytes of CODE memory
   322 bytes of DATA memory

Errors: none
Warnings: none
