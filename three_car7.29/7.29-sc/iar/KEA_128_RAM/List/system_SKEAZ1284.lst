###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        17/Jul/2018  09:40:46
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\system\system_SKEAZ1284.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\system\system_SKEAZ1284.c -D IAR
#        -D TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config H:\IAR7.3\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\coreSupport\ -Ol
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\system_SKEAZ1284.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\system_SKEAZ1284.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\7.17\system\system_SKEAZ1284.c
      1          /*********************************************************************************************************************
      2           * COPYRIGHT NOTICE
      3           * Copyright (c) 2017,逐飞科技
      4           * All rights reserved.
      5           * 技术讨论QQ群：179029047
      6           *
      7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
      8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
      9           *
     10           * @file       		system
     11           * @company	   		成都逐飞科技有限公司
     12           * @author     		逐飞科技(QQ3184284598)
     13           * @version    		v2.0
     14           * @Software 		IAR 7.7 or MDK 5.23
     15           * @Target core		S9KEA128AMLK
     16           * @Taobao   		https://seekfree.taobao.com/
     17           * @date       		2017-11-6
     18           ********************************************************************************************************************/
     19          
     20          #include <stdint.h>
     21          #include "SKEAZ1284.h"
     22          #include "system_SKEAZ1284.h"
     23          #include "common.h"
     24          
     25          

   \                                 In section .text, align 2, keep-with-next
     26          void disable_wdog(void)
     27          {
     28              /* WDOG->TOVAL: TOVAL=0xE803 */
     29              WDOG->TOVAL = WDOG_TOVAL_TOVAL(0xE803); /* Timeout value */
   \                     disable_wdog: (+1)
   \   00000000   0x....             LDR      R0,??DataTable1  ;; 0xe803
   \   00000002   0x....             LDR      R1,??DataTable1_1  ;; 0x40052004
   \   00000004   0x8008             STRH     R0,[R1, #+0]
     30              /* WDOG->CS2: WIN=0,FLG=0,??=0,PRES=0,??=0,??=0,CLK=1 */
     31              WDOG->CS2 = WDOG_CS2_CLK(0x01);       /* 1-kHz clock source */
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x....             LDR      R1,??DataTable1_2  ;; 0x40052001
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
     32              /* WDOG->CS1: EN=0,INT=0,UPDATE=1,TST=0,DBG=0,WAIT=1,STOP=1 */
     33              WDOG->CS1 = WDOG_CS1_UPDATE_MASK |
     34                          WDOG_CS1_TST(0x00) |
     35                          WDOG_CS1_WAIT_MASK |
     36                          WDOG_CS1_STOP_MASK;
   \   0000000C   0x2023             MOVS     R0,#+35
   \   0000000E   0x....             LDR      R1,??DataTable1_3  ;; 0x40052000
   \   00000010   0x7008             STRB     R0,[R1, #+0]
     37          }
   \   00000012   0x4770             BX       LR               ;; return
     38          

   \                                 In section .text, align 2, keep-with-next
     39          void Start (void)
     40          {
   \                     Start: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     41              disable_wdog();
   \   00000002   0x.... 0x....      BL       disable_wdog
     42          
     43              if(2 == KEA128_CLOCK)
     44              {
     45                  SIM->CLKDIV = SIM_CLKDIV_OUTDIV1(0x00) | SIM_CLKDIV_OUTDIV2_MASK; //设置预分频系数
     46          
     47                  ICS->C2 = ICS_C2_BDIV(0x00) | ICS_C2_LP_MASK;
     48                  ICS->C1 = ICS_C1_CLKS(0x00) | ICS_C1_IREFS_MASK | ICS_C1_IRCLKEN_MASK | ICS_C1_IREFSTEN_MASK;
     49                  while((ICS->S & ICS_S_IREFST_MASK) == 0x00U) {};    //等待内部时钟被选择为基准时钟
     50                  while((ICS->S & ICS_S_LOCK_MASK) == 0x00U){};       //等待FLL锁定
     51                  while((ICS->S & 0x0CU) != 0x00U) {};                //等待选择FLL输出
     52              }
     53              else
     54              {
     55                  SIM->CLKDIV = SIM_CLKDIV_OUTDIV1(0x00) | SIM_CLKDIV_OUTDIV2_MASK; //设置预分频系数
   \   00000006   0x2080             MOVS     R0,#+128
   \   00000008   0x0440             LSLS     R0,R0,#+17       ;; #+16777216
   \   0000000A   0x....             LDR      R1,??DataTable1_4  ;; 0x40048024
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     56                  //切换到PEE模式
     57                  ICS->C2 = ICS_C2_BDIV(0x00) | ICS_C2_LP_MASK;
   \   0000000E   0x2010             MOVS     R0,#+16
   \   00000010   0x....             LDR      R1,??DataTable1_5  ;; 0x40064001
   \   00000012   0x7008             STRB     R0,[R1, #+0]
     58                  OSC->CR = OSC_CR_OSCEN_MASK | OSC_CR_OSCOS_MASK | OSC_CR_RANGE_MASK | OSC_CR_HGO_MASK;
   \   00000014   0x2096             MOVS     R0,#+150
   \   00000016   0x....             LDR      R1,??DataTable1_6  ;; 0x40065000
   \   00000018   0x7008             STRB     R0,[R1, #+0]
     59                  ICS->C1 = ICS_C1_CLKS(0x00) | ICS_C1_RDIV(0x04-KEA128_CLOCK) | ICS_C1_IRCLKEN_MASK;
   \   0000001A   0x201A             MOVS     R0,#+26
   \   0000001C   0x....             LDR      R1,??DataTable1_7  ;; 0x40064000
   \   0000001E   0x7008             STRB     R0,[R1, #+0]
     60                  while((ICS->S & ICS_S_IREFST_MASK) != 0x00U) {};    //等待外部时钟被选择为基准时钟
   \                     ??Start_0: (+1)
   \   00000020   0x....             LDR      R0,??DataTable1_8  ;; 0x40064004
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x06C0             LSLS     R0,R0,#+27
   \   00000026   0xD4FB             BMI      ??Start_0
     61                  while((ICS->S & ICS_S_LOCK_MASK) == 0x00U){};       //等待FLL锁定
   \                     ??Start_1: (+1)
   \   00000028   0x....             LDR      R0,??DataTable1_8  ;; 0x40064004
   \   0000002A   0x7800             LDRB     R0,[R0, #+0]
   \   0000002C   0x0640             LSLS     R0,R0,#+25
   \   0000002E   0xD5FB             BPL      ??Start_1
     62                  while((ICS->S & 0x0CU) != 0x00U) {};                //等待选择FLL输出
   \                     ??Start_2: (+1)
   \   00000030   0x....             LDR      R0,??DataTable1_8  ;; 0x40064004
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x210C             MOVS     R1,#+12
   \   00000036   0x4208             TST      R0,R1
   \   00000038   0xD1FA             BNE      ??Start_2
     63              }
     64              //SIM->SOPT0 |= SIM_SOPT0_CLKOE_MASK;                 //H2输出总线时钟
     65          }
   \   0000003A   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x0000E803         DC32     0xe803

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x40052004         DC32     0x40052004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x40052001         DC32     0x40052001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40052000         DC32     0x40052000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x40048024         DC32     0x40048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x40064001         DC32     0x40064001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x40065000         DC32     0x40065000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x40064000         DC32     0x40064000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x40064004         DC32     0x40064004
     66          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Start
         8   -> disable_wdog
       0   disable_wdog


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
      60  Start
      20  disable_wdog

 
 116 bytes in section .text
 
 116 bytes of CODE memory

Errors: none
Warnings: none
