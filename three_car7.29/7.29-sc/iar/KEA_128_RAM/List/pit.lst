###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        17/Jul/2018  09:40:44
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\电磁三轮――ZS\7.17\device\C\pit.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\device\C\pit.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config H:\IAR7.3\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\coreSupport\ -Ol
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\pit.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\pit.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\7.17\device\C\pit.c
      1          /**
      2            ******************************************************************************
      3            * COPYRIGHT NOTICE
      4            * Copyright (c) 2018,华北科技学院
      5            * All rights reserved.
      6            *
      7            * 文件名称：     pit.c
      8            * 文件标识：
      9            * 摘    要：     周期中断定时器
     10            *
     11            * 当前版本：     1.0
     12            * 负    责：     韩志伟
     13            * 时    间：     2018年1月23日 16:45:38
     14            ******************************************************************************
     15            */
     16          #include "pit.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_EnableIRQ(IRQn_Type)
   \                     NVIC_EnableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0x06C0             LSLS     R0,R0,#+27       ;; ZeroExtS R0,R0,#+27,#+27
   \   00000004   0x0EC0             LSRS     R0,R0,#+27
   \   00000006   0x4081             LSLS     R1,R1,R0
   \   00000008   0x....             LDR      R0,??DataTable4  ;; 0xe000e100
   \   0000000A   0x6001             STR      R1,[R0, #+0]
   \   0000000C   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
   \   static __interwork __softfp void NVIC_DisableIRQ(IRQn_Type)
   \                     NVIC_DisableIRQ: (+1)
   \   00000000   0x2101             MOVS     R1,#+1
   \   00000002   0x06C0             LSLS     R0,R0,#+27       ;; ZeroExtS R0,R0,#+27,#+27
   \   00000004   0x0EC0             LSRS     R0,R0,#+27
   \   00000006   0x4081             LSLS     R1,R1,R0
   \   00000008   0x....             LDR      R0,??DataTable4_1  ;; 0xe000e180
   \   0000000A   0x6001             STR      R1,[R0, #+0]
   \   0000000C   0x4770             BX       LR               ;; return
     17          
     18          /**
     19            * 简介
     20            *     PIT0初始化
     21            * 参数
     22            *     pitn  只有PIT0有效
     23            *     us：表示定时溢出开始递减的值
     24            * 注意
     25            *     LDVAL写入值 =（定时周期/时钟周期）-1
     26            */

   \                                 In section .text, align 2, keep-with-next
     27          void PIT_Init(uint8 pitn, uint16 us)
     28          {
   \                     PIT_Init: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0005             MOVS     R5,R0
     29          //    get_clk();
     30          
     31              uint32 cnt = 0;
   \   00000004   0x2000             MOVS     R0,#+0
     32              cnt = us * (bus_clk_khz/1000) - 1;
   \   00000006   0xB289             UXTH     R1,R1
   \   00000008   0x000C             MOVS     R4,R1
   \   0000000A   0x....             LDR      R0,??DataTable4_2
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x21FA             MOVS     R1,#+250
   \   00000010   0x0089             LSLS     R1,R1,#+2        ;; #+1000
   \   00000012   0x.... 0x....      BL       __aeabi_uidiv
   \   00000016   0x0021             MOVS     R1,R4
   \   00000018   0x4348             MULS     R0,R1,R0
   \   0000001A   0x1E40             SUBS     R0,R0,#+1
     33          
     34          	SIM->SCGC       |= SIM_SCGC_PIT_MASK;       //使能PIT时钟
   \   0000001C   0x....             LDR      R1,??DataTable4_3  ;; 0x40048014
   \   0000001E   0x6809             LDR      R1,[R1, #+0]
   \   00000020   0x2202             MOVS     R2,#+2
   \   00000022   0x430A             ORRS     R2,R2,R1
   \   00000024   0x....             LDR      R1,??DataTable4_3  ;; 0x40048014
   \   00000026   0x600A             STR      R2,[R1, #+0]
     35          
     36          	PIT->MCR        &= ~PIT_MCR_MDIS_MASK;      //必须在执行任何其他设置之前使能该字段
   \   00000028   0x....             LDR      R1,??DataTable4_4  ;; 0x40037000
   \   0000002A   0x6809             LDR      R1,[R1, #+0]
   \   0000002C   0x2202             MOVS     R2,#+2
   \   0000002E   0x4391             BICS     R1,R1,R2
   \   00000030   0x....             LDR      R2,??DataTable4_4  ;; 0x40037000
   \   00000032   0x6011             STR      R1,[R2, #+0]
     37          	PIT->MCR        |= PIT_MCR_FRZ_MASK;	    //调试模式下禁止运行
   \   00000034   0x....             LDR      R1,??DataTable4_4  ;; 0x40037000
   \   00000036   0x6809             LDR      R1,[R1, #+0]
   \   00000038   0x2201             MOVS     R2,#+1
   \   0000003A   0x430A             ORRS     R2,R2,R1
   \   0000003C   0x....             LDR      R1,??DataTable4_4  ;; 0x40037000
   \   0000003E   0x600A             STR      R2,[R1, #+0]
     38          //    PIT->MCR        &= ~PIT_MCR_FRZ_MASK;	    //调试模式下允许运行
     39          	PIT->CHANNEL[pitn].LDVAL  = cnt;            //设置溢出中断时间
   \   00000040   0x....             LDR      R1,??DataTable4_5  ;; 0x40037100
   \   00000042   0xB2ED             UXTB     R5,R5
   \   00000044   0x2210             MOVS     R2,#+16
   \   00000046   0x436A             MULS     R2,R5,R2
   \   00000048   0x5088             STR      R0,[R1, R2]
     40          	PIT_CLEAR;								    //清除中断标志位
   \   0000004A   0x....             LDR      R0,??DataTable4_6  ;; 0x4003710c
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x2101             MOVS     R1,#+1
   \   00000050   0x4301             ORRS     R1,R1,R0
   \   00000052   0x....             LDR      R0,??DataTable4_6  ;; 0x4003710c
   \   00000054   0x6001             STR      R1,[R0, #+0]
     41          	PIT->CHANNEL[pitn].TCTRL &= ~ PIT_TCTRL_TEN_MASK;       //禁止PITn定时器（用于清空计数值）
   \   00000056   0x....             LDR      R0,??DataTable4_5  ;; 0x40037100
   \   00000058   0xB2ED             UXTB     R5,R5
   \   0000005A   0x2110             MOVS     R1,#+16
   \   0000005C   0x4369             MULS     R1,R5,R1
   \   0000005E   0x1840             ADDS     R0,R0,R1
   \   00000060   0x6880             LDR      R0,[R0, #+8]
   \   00000062   0x2101             MOVS     R1,#+1
   \   00000064   0x4388             BICS     R0,R0,R1
   \   00000066   0x....             LDR      R1,??DataTable4_5  ;; 0x40037100
   \   00000068   0xB2ED             UXTB     R5,R5
   \   0000006A   0x2210             MOVS     R2,#+16
   \   0000006C   0x436A             MULS     R2,R5,R2
   \   0000006E   0x1889             ADDS     R1,R1,R2
   \   00000070   0x6088             STR      R0,[R1, #+8]
     42              PIT->CHANNEL[pitn].TCTRL  = ( 0
     43          								| PIT_TCTRL_TEN_MASK        //使能 PITn定时器
     44          								& (~PIT_TCTRL_TIE_MASK)     //关PITn中断
     45          								);
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x....             LDR      R1,??DataTable4_5  ;; 0x40037100
   \   00000076   0xB2ED             UXTB     R5,R5
   \   00000078   0x2210             MOVS     R2,#+16
   \   0000007A   0x4355             MULS     R5,R2,R5
   \   0000007C   0x1949             ADDS     R1,R1,R5
   \   0000007E   0x6088             STR      R0,[R1, #+8]
     46          }
   \   00000080   0xBD30             POP      {R4,R5,PC}       ;; return
     47          
     48          /**
     49            * 简介
     50            *     使能PIT0中断
     51            */

   \                                 In section .text, align 2, keep-with-next
     52          void PIT_EnableIrq()
     53          {
   \                     PIT_EnableIrq: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     54              PIT_CLEAR;   //清中断标志
   \   00000002   0x....             LDR      R0,??DataTable4_6  ;; 0x4003710c
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2101             MOVS     R1,#+1
   \   00000008   0x4301             ORRS     R1,R1,R0
   \   0000000A   0x....             LDR      R0,??DataTable4_6  ;; 0x4003710c
   \   0000000C   0x6001             STR      R1,[R0, #+0]
     55              PIT->CHANNEL[PIT0].TCTRL |= PIT_TCTRL_TIE_MASK; //开pit中断
   \   0000000E   0x....             LDR      R0,??DataTable4_7  ;; 0x40037108
   \   00000010   0x6800             LDR      R0,[R0, #+0]
   \   00000012   0x2102             MOVS     R1,#+2
   \   00000014   0x4301             ORRS     R1,R1,R0
   \   00000016   0x....             LDR      R0,??DataTable4_7  ;; 0x40037108
   \   00000018   0x6001             STR      R1,[R0, #+0]
     56              enable_irq(PIT0_IRQ);
   \   0000001A   0x2016             MOVS     R0,#+22
   \   0000001C   0x.... 0x....      BL       NVIC_EnableIRQ
     57          }
   \   00000020   0xBD01             POP      {R0,PC}          ;; return
     58          
     59          /**
     60            * 简介
     61            *     禁止PIT0中断
     62            */

   \                                 In section .text, align 2, keep-with-next
     63          void PIT_DisableIrq()
     64          {
   \                     PIT_DisableIrq: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     65              PIT->CHANNEL[PIT0].TCTRL &= (~PIT_TCTRL_TIE_MASK); //关pit中断
   \   00000002   0x....             LDR      R0,??DataTable4_7  ;; 0x40037108
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2102             MOVS     R1,#+2
   \   00000008   0x4388             BICS     R0,R0,R1
   \   0000000A   0x....             LDR      R1,??DataTable4_7  ;; 0x40037108
   \   0000000C   0x6008             STR      R0,[R1, #+0]
     66              disable_irq(PIT0_IRQ);
   \   0000000E   0x2016             MOVS     R0,#+22
   \   00000010   0x.... 0x....      BL       NVIC_DisableIRQ
     67          }
   \   00000014   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0xE000E100         DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0xE000E180         DC32     0xe000e180

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     bus_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x40048014         DC32     0x40048014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x40037000         DC32     0x40037000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x40037100         DC32     0x40037100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x4003710C         DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x40037108         DC32     0x40037108
     68          
     69          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   NVIC_DisableIRQ
       0   NVIC_EnableIRQ
       8   PIT_DisableIrq
         8   -> NVIC_DisableIRQ
       8   PIT_EnableIrq
         8   -> NVIC_EnableIRQ
      12   PIT_Init
        12 __aeabi_uidiv


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
      14  NVIC_DisableIRQ
      14  NVIC_EnableIRQ
      22  PIT_DisableIrq
      34  PIT_EnableIrq
     130  PIT_Init

 
 246 bytes in section .text
 
 246 bytes of CODE memory

Errors: none
Warnings: none
