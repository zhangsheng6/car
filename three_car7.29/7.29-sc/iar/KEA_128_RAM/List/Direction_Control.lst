###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        17/Jul/2018  09:40:33
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\Direction_Control.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\Direction_Control.c -D
#        IAR -D TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config H:\IAR7.3\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\coreSupport\ -Ol
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\Direction_Control.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\Direction_Control.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\Direction_Control.c
      1          #include "Direction_Control.h"
      2          #include "math.h"
      3          #include "BL.h"
      4          
      5          
      6          /*****************************阿克曼角参数2************************************/

   \                                 In section .bss, align 4
      7          float k=0;float k3=0.0,k4=0.0;float B=15.5,L=15;float angle,angle_2;float  speed_temp2=0,speed_temp1=-20;
   \                     k:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     k3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     k4:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     `B`:
   \   00000000   0x41780000         DC32 41780000H

   \                                 In section .data, align 4
   \                     L:
   \   00000000   0x41700000         DC32 41700000H

   \                                 In section .bss, align 4
   \                     angle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     angle_2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     speed_temp2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     speed_temp1:
   \   00000000   0xC1A00000         DC32 0C1A00000H
      8          /*-----------方向环2---------------------------------------------------------------*/
      9          #define N 3

   \                                 In section .bss, align 4
     10           float Speed_I_D_Temp=0,X=20;float Accum_Error_L[N]={0};float Accum_Error_R[N]={0};float Chazhi_Error_L[N]={0};float Chazhi_Error_R[N]={0};float Sum_Error_L=0,Sum_Error_R=0;float Speed_I_lntegral_L=0 ,Speed_I_lntegral_R=0;float Speed_I_lntegral_Max = 9000;float Direction_Control_Output_L = 0.0;float Direction_Control_Output_R = 0.0,Control_Output_L=0,Control_Output_R=0;uint8 Piaoyi_L=0,Piaoyi_R=0;
   \                     Speed_I_D_Temp:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     X:
   \   00000000   0x41A00000         DC32 41A00000H

   \                                 In section .bss, align 4
   \                     Accum_Error_L:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     Accum_Error_R:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     Chazhi_Error_L:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     Chazhi_Error_R:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     Sum_Error_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Sum_Error_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_I_lntegral_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_I_lntegral_R:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     Speed_I_lntegral_Max:
   \   00000000   0x460CA000         DC32 460CA000H

   \                                 In section .bss, align 4
   \                     Direction_Control_Output_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Direction_Control_Output_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Control_Output_L:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Control_Output_R:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
   \                     Piaoyi_L:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     Piaoyi_R:
   \   00000000                      DS8 1
     11          /*--------------------------------------------------------------------------*/
     12          /********************************************************************************/

   \                                 In section .data, align 4
     13          float Chazhi_point=45;
   \                     Chazhi_point:
   \   00000000   0x42340000         DC32 42340000H

   \                                 In section .data, align 4
     14          float  Angle_Weight=0.5,Direction_Weight=0.5;
   \                     Angle_Weight:
   \   00000000   0x3F000000         DC32 3F000000H

   \                                 In section .data, align 4
   \                     Direction_Weight:
   \   00000000   0x3F000000         DC32 3F000000H

   \                                 In section .data, align 4
     15          float Chazhi_limit=75;float Chasu_Bili=1,Chasu_Bili_Temp=1, Speed_Bili=1,Chazhi_Bili=1,Chazhi_Bili_Temp=1,Speed_Bili_Temp=1,Chazhi_Temp=0;double angle_limit=60,angle_limit_2=60;float change_bili_F=1,change_bili_Z=1;float speed_dead_F=-0;int change_value=10;int change_factor=0; int change_variable=0;                                                                float Angle_P_choose;int   angle_P=60;
   \                     Chazhi_limit:
   \   00000000   0x42960000         DC32 42960000H

   \                                 In section .data, align 4
   \                     Chasu_Bili:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
   \                     Chasu_Bili_Temp:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
   \                     Speed_Bili:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
   \                     Chazhi_Bili:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
   \                     Chazhi_Bili_Temp:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
   \                     Speed_Bili_Temp:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
   \                     Chazhi_Temp:
   \   00000000                      DS8 4

   \                                 In section .data, align 8
   \                     angle_limit:
   \   00000000   0x00000000         DC32 0H, 404E0000H
   \              0x404E0000   

   \                                 In section .data, align 8
   \                     angle_limit_2:
   \   00000000   0x00000000         DC32 0H, 404E0000H
   \              0x404E0000   

   \                                 In section .data, align 4
   \                     change_bili_F:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
   \                     change_bili_Z:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
   \                     speed_dead_F:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     change_value:
   \   00000000   0x0000000A         DC32 10

   \                                 In section .bss, align 4
   \                     change_factor:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     change_variable:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_P_choose:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     angle_P:
   \   00000000   0x0000003C         DC32 60

   \                                 In section .bss, align 4
     16          float Direction_P2_Temp=0,Direction_P2_Speed=0,Direction_P2_Chazhi=0;int t=0;
   \                     Direction_P2_Temp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Direction_P2_Speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Direction_P2_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     t:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     17          float Angle_P_Temp=0,Angle_D_Speed=0,Angle_D_Chazhi=0;
   \                     Angle_P_Temp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_D_Speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_D_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     18          float speed_point=0; float Direction_P_Temp=0;  
   \                     speed_point:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Direction_P_Temp:
   \   00000000                      DS8 4
     19          
     20          
     21          //验证tuoluoyi正负
     22          //1目前调节动态P,陀螺仪PD,直道弯道速度不一样
     23          //2降低速度设定，改参数，全程速度差不多，在渐渐提高速度设定，在速度达到最后极限，在采取直道速度比玩到速度大
     24          //让全程速度差不多，弯道速度设定大于直道
     25          //速度  P    P2   D2     AP
     26          //100  600  600  -1000   100好轮胎
     27          //100  1000  600  -1000  100差轮胎
     28          /************************常用调参变量**************************************************/

   \                                 In section .data, align 4
     29          float  speed_set  = 80,//改5ms 
   \                     speed_set:
   \   00000000   0x42A00000         DC32 42A00000H
     30          

   \                                 In section .data, align 4
     31              Direction_P=100,        Direction_D=0,          Direction_I=0,          //阿克曼角位置式方向+速度环
   \                     Direction_P:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .bss, align 4
   \                     Direction_D:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Direction_I:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     32              Direction_P2=700,     Direction_D2=-1000,         Direction_I2=0.0,                 //差值位置式 
   \                     Direction_P2:
   \   00000000   0x442F0000         DC32 442F0000H

   \                                 In section .data, align 4
   \                     Direction_D2:
   \   00000000   0xC47A0000         DC32 0C47A0000H

   \                                 In section .bss, align 4
   \                     Direction_I2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     33              Angle_P=100,          Angle_D=0,                  Angle_D_Temp,//陀螺仪
   \                     Angle_P:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .bss, align 4
   \                     Angle_D:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_D_Temp:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     34                                                             Speed_P=0,          Speed_I=0,                 Speed_D=0.00;//速度还增量式
   \                     Speed_P:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_I:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Speed_D:
   \   00000000                      DS8 4
     35          /************************常用调参变量**************************************************/

   \                                 In section .text, align 2, keep-with-next
     36          void Direction_Controler(void)//2.71828
     37          {
   \                     Direction_Controler: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     38           float speed_error2=0;
   \   00000002   0x2000             MOVS     R0,#+0
     39            float K1=0,K2=0,K3=0,K4=10;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x....             LDR      R0,??DataTable0  ;; 0x41200000
     40            float Son_DP=0,Son_AP=0,Son_AD=0,Son_AD_Max=100,jsd=0;
   \   0000000C   0x2700             MOVS     R7,#+0
   \   0000000E   0x2400             MOVS     R4,#+0
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x....             LDR      R0,??DataTable0_1  ;; 0x42c80000
   \   00000014   0x2500             MOVS     R5,#+0
     41            float Son_DP2=0,Son_AP2=0;
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0x2500             MOVS     R5,#+0
     42            float Chazhi_Mid=50,Chazhi_Error=0;
   \   0000001A   0x....             LDR      R6,??DataTable0_2  ;; 0x42480000
   \   0000001C   0x2000             MOVS     R0,#+0
     43          //车速小， 正值；车速大，负值 
     44          speed_error2=speed_buzzer+0-speed_car;
   \   0000001E   0x....             LDR      R0,??DataTable0_3
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x....             LDR      R1,??DataTable0_4
   \   00000024   0x6809             LDR      R1,[R1, #+0]
   \   00000026   0x.... 0x....      BL       __aeabi_fsub
     45          //差值大，偏差正
     46          Chazhi_Error=abs_f(Chazhi)-Chazhi_Mid;
   \   0000002A   0x....             LDR      R0,??DataTable0_5
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       abs_f
   \   00000032   0x0031             MOVS     R1,R6
   \   00000034   0x.... 0x....      BL       __aeabi_fsub
     47          Chazhi_Error/=Chazhi_Mid;
   \   00000038   0x0031             MOVS     R1,R6
   \   0000003A   0x.... 0x....      BL       __aeabi_fdiv
     48          ///--------------------------------------------
     49          
     50          //  K1=0;
     51          //Son_DP=-1*speed_error2*K1;
     52          
     53          //K2=0;
     54          //Son_AP=-1*speed_error2*K2;
     55          ////
     56          ////if(Chazhi_Error>0)
     57          ////{
     58          //if(Son_AP<-100)
     59          //      Son_AP=-100;
     60             
     61          //}
     62          //   if(Son_DP<-100)
     63          //      Son_DP=-100;
     64          
     65          //
     66          //K4=10;
     67          //Son_AP2=Chazhi_Error*K4;
     68          
     69          //Son_DP=0;
     70          //Son_AP=0;
     71          //if(Son_DP<-1*Direction_P2/2)    Son_DP=-1*Direction_P2/2;
     72          //if(Son_DP<0)    Son_DP=0;
     73          //if(Son_AP<-50)    Son_AP=-50;
     74          //if(Son_AP>100)    Son_AP=100; 
     75          
     76          Direction_P2_Temp=Direction_P2+Son_DP;
   \   0000003E   0x....             LDR      R0,??DataTable0_6
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x0039             MOVS     R1,R7
   \   00000044   0x.... 0x....      BL       __aeabi_fadd
   \   00000048   0x....             LDR      R1,??DataTable0_7
   \   0000004A   0x6008             STR      R0,[R1, #+0]
     77          
     78          //--------------------------------------------
     79          if(abs_f(Chazhi)<20)
   \   0000004C   0x....             LDR      R0,??DataTable0_5
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x.... 0x....      BL       abs_f
   \   00000054   0x....             LDR      R1,??DataTable0_8  ;; 0x41a00000
   \   00000056   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000005A   0xD206             BCS      ??Direction_Controler_0
     80          { 
     81          Angle_P_Temp=0+Son_AP+Son_AP2;
   \   0000005C   0x0020             MOVS     R0,R4
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0x.... 0x....      BL       __aeabi_fadd
   \   00000064   0x....             LDR      R1,??DataTable0_9
   \   00000066   0x6008             STR      R0,[R1, #+0]
   \   00000068   0xE037             B        ??Direction_Controler_1
     82          }
     83          else if(abs_f(Chazhi)<40)//20-40
   \                     ??Direction_Controler_0: (+1)
   \   0000006A   0x....             LDR      R0,??DataTable0_5
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x.... 0x....      BL       abs_f
   \   00000072   0x....             LDR      R1,??DataTable0_10  ;; 0x42200000
   \   00000074   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000078   0xD20E             BCS      ??Direction_Controler_2
     84          { 
     85          Angle_P_Temp=Angle_P/4+Son_AP+Son_AP2;
   \   0000007A   0x....             LDR      R0,??DataTable0_11
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x2181             MOVS     R1,#+129
   \   00000080   0x05C9             LSLS     R1,R1,#+23       ;; #+1082130432
   \   00000082   0x.... 0x....      BL       __aeabi_fdiv
   \   00000086   0x0021             MOVS     R1,R4
   \   00000088   0x.... 0x....      BL       __aeabi_fadd
   \   0000008C   0x0029             MOVS     R1,R5
   \   0000008E   0x.... 0x....      BL       __aeabi_fadd
   \   00000092   0x....             LDR      R1,??DataTable0_9
   \   00000094   0x6008             STR      R0,[R1, #+0]
   \   00000096   0xE020             B        ??Direction_Controler_1
     86          }else if(abs_f(Chazhi)<50)//40-50
   \                     ??Direction_Controler_2: (+1)
   \   00000098   0x....             LDR      R0,??DataTable0_5
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x.... 0x....      BL       abs_f
   \   000000A0   0x....             LDR      R1,??DataTable0_2  ;; 0x42480000
   \   000000A2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000A6   0xD20E             BCS      ??Direction_Controler_3
     87          { 
     88          Angle_P_Temp=Angle_P/2+Son_AP+Son_AP2;
   \   000000A8   0x....             LDR      R0,??DataTable0_11
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x2180             MOVS     R1,#+128
   \   000000AE   0x05C9             LSLS     R1,R1,#+23       ;; #+1073741824
   \   000000B0   0x.... 0x....      BL       __aeabi_fdiv
   \   000000B4   0x0021             MOVS     R1,R4
   \   000000B6   0x.... 0x....      BL       __aeabi_fadd
   \   000000BA   0x0029             MOVS     R1,R5
   \   000000BC   0x.... 0x....      BL       __aeabi_fadd
   \   000000C0   0x....             LDR      R1,??DataTable0_9
   \   000000C2   0x6008             STR      R0,[R1, #+0]
   \   000000C4   0xE009             B        ??Direction_Controler_1
     89          }
     90          else 
     91          {
     92          Angle_P_Temp=Angle_P+Son_AP+Son_AP2;
   \                     ??Direction_Controler_3: (+1)
   \   000000C6   0x....             LDR      R0,??DataTable0_11
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0x0021             MOVS     R1,R4
   \   000000CC   0x.... 0x....      BL       __aeabi_fadd
   \   000000D0   0x0029             MOVS     R1,R5
   \   000000D2   0x.... 0x....      BL       __aeabi_fadd
   \   000000D6   0x....             LDR      R1,??DataTable0_9
   \   000000D8   0x6008             STR      R0,[R1, #+0]
     93          }   
     94          //K3=10;
     95          //Son_AD=speed_error2*K3;
     96          //if(Son_AD>50)    Son_AD=50;
     97          //if(Son_AD>Son_AD_Max)    Son_AD=Son_AD_Max;
     98          //if(Son_AD<-Son_AD_Max)    Son_AD=-Son_AD_Max;
     99          //if(Son_AD<0)    Son_AD=0;
    100          //Son_AD=0; 
    101          
    102          //if(abs_f(Chazhi)<40)
    103          //{ 
    104          //Angle_D_Temp=Angle_D+Son_AD;
    105          //}
    106          //else if(abs_f(Chazhi)<60)
    107          //{ 
    108          //Angle_D_Temp=Angle_D/3+Son_AD;
    109          //}
    110          //else if(abs_f(Chazhi)<70)
    111          //{ 
    112          //Angle_D_Temp=0+Son_AD;
    113          //}
    114          //else if(abs_f(Chazhi)<80)
    115          //{ 
    116          //Angle_D_Temp=0+Son_AD;
    117          //}
    118          //else 
    119          //{
    120          //Angle_D_Temp=0+Son_AD;
    121          //}
    122          
    123          //Angle_D_Temp=Angle_D+Son_AD;
    124          //if(gyr_angle_speed>200)
    125          //     gyr_angle_speed=200;
    126          //if(gyr_angle_speed<-200)
    127          //     gyr_angle_speed=-200;
    128          if(Chazhi>0)//左转角速度负，
   \                     ??Direction_Controler_1: (+1)
   \   000000DA   0x....             LDR      R0,??DataTable0_5
   \   000000DC   0x6800             LDR      R0,[R0, #+0]
   \   000000DE   0x2100             MOVS     R1,#+0
   \   000000E0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000E4   0xD208             BCS      ??Direction_Controler_4
    129             jsd=-1*abs_f(gyr_angle_speed);
   \   000000E6   0x....             LDR      R0,??DataTable0_12
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0x.... 0x....      BL       abs_f
   \   000000EE   0x....             LDR      R1,??DataTable0_13  ;; 0xbf800000
   \   000000F0   0x.... 0x....      BL       __aeabi_fmul
   \   000000F4   0x0005             MOVS     R5,R0
   \   000000F6   0xE004             B        ??Direction_Controler_5
    130          else//右转，角速度正
    131             jsd=abs_f(gyr_angle_speed);
   \                     ??Direction_Controler_4: (+1)
   \   000000F8   0x....             LDR      R0,??DataTable0_12
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0x.... 0x....      BL       abs_f
   \   00000100   0x0005             MOVS     R5,R0
    132          
    133          Direction_Control_Output_L = 
    134          //                             -Direction_P2_Temp*Chazhi-Direction_D2*(Chazhi_Last-Chazhi)+Speed_I_lntegral_L 
    135                                       -Direction_P2_Temp*Chazhi-Direction_D2*Chazhi_Rate 
    136          //                               +Angle_P_Temp*gyr_angle_speed-Angle_D_Temp*gyr_angle_speed ;//gyr_angle_speed:值左转负有转正
    137                                         +Angle_P_Temp*jsd-Angle_D_Temp*jsd ;//gyr_angle_speed:值左转负有转正
   \                     ??Direction_Controler_5: (+1)
   \   00000102   0x....             LDR      R0,??DataTable0_7
   \   00000104   0x6801             LDR      R1,[R0, #+0]
   \   00000106   0x2080             MOVS     R0,#+128
   \   00000108   0x0600             LSLS     R0,R0,#+24       ;; #-2147483648
   \   0000010A   0x4041             EORS     R1,R1,R0
   \   0000010C   0x....             LDR      R0,??DataTable0_5
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0x.... 0x....      BL       __aeabi_fmul
   \   00000114   0x0004             MOVS     R4,R0
   \   00000116   0x....             LDR      R0,??DataTable1
   \   00000118   0x6801             LDR      R1,[R0, #+0]
   \   0000011A   0x....             LDR      R0,??DataTable1_1
   \   0000011C   0x6800             LDR      R0,[R0, #+0]
   \   0000011E   0x.... 0x....      BL       __aeabi_fmul
   \   00000122   0x0001             MOVS     R1,R0
   \   00000124   0x0020             MOVS     R0,R4
   \   00000126   0x.... 0x....      BL       __aeabi_fsub
   \   0000012A   0x0001             MOVS     R1,R0
   \   0000012C   0x000C             MOVS     R4,R1
   \   0000012E   0x....             LDR      R0,??DataTable0_9
   \   00000130   0x6800             LDR      R0,[R0, #+0]
   \   00000132   0x0029             MOVS     R1,R5
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x0021             MOVS     R1,R4
   \   0000013A   0x.... 0x....      BL       __aeabi_fadd
   \   0000013E   0x0004             MOVS     R4,R0
   \   00000140   0x....             LDR      R0,??DataTable1_2
   \   00000142   0x6800             LDR      R0,[R0, #+0]
   \   00000144   0x0029             MOVS     R1,R5
   \   00000146   0x.... 0x....      BL       __aeabi_fmul
   \   0000014A   0x0001             MOVS     R1,R0
   \   0000014C   0x0020             MOVS     R0,R4
   \   0000014E   0x.... 0x....      BL       __aeabi_fsub
   \   00000152   0x....             LDR      R1,??DataTable1_3
   \   00000154   0x6008             STR      R0,[R1, #+0]
    138          
    139          Direction_Control_Output_R = 
    140          //                             Direction_P2_Temp*Chazhi+Direction_D2*(Chazhi_Last-Chazhi)+Speed_I_lntegral_R
    141                                       Direction_P2_Temp*Chazhi+Direction_D2*Chazhi_Rate
    142                                       -Angle_P_Temp*jsd+Angle_D_Temp*jsd;
   \   00000156   0x....             LDR      R0,??DataTable0_7
   \   00000158   0x6801             LDR      R1,[R0, #+0]
   \   0000015A   0x....             LDR      R0,??DataTable0_5
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x.... 0x....      BL       __aeabi_fmul
   \   00000162   0x0001             MOVS     R1,R0
   \   00000164   0x000C             MOVS     R4,R1
   \   00000166   0x....             LDR      R0,??DataTable1
   \   00000168   0x6801             LDR      R1,[R0, #+0]
   \   0000016A   0x....             LDR      R0,??DataTable1_1
   \   0000016C   0x6800             LDR      R0,[R0, #+0]
   \   0000016E   0x.... 0x....      BL       __aeabi_fmul
   \   00000172   0x0021             MOVS     R1,R4
   \   00000174   0x.... 0x....      BL       __aeabi_fadd
   \   00000178   0x0004             MOVS     R4,R0
   \   0000017A   0x....             LDR      R0,??DataTable0_9
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0x0029             MOVS     R1,R5
   \   00000180   0x.... 0x....      BL       __aeabi_fmul
   \   00000184   0x0001             MOVS     R1,R0
   \   00000186   0x0020             MOVS     R0,R4
   \   00000188   0x.... 0x....      BL       __aeabi_fsub
   \   0000018C   0x0001             MOVS     R1,R0
   \   0000018E   0x000C             MOVS     R4,R1
   \   00000190   0x....             LDR      R0,??DataTable1_2
   \   00000192   0x6800             LDR      R0,[R0, #+0]
   \   00000194   0x0029             MOVS     R1,R5
   \   00000196   0x.... 0x....      BL       __aeabi_fmul
   \   0000019A   0x0021             MOVS     R1,R4
   \   0000019C   0x.... 0x....      BL       __aeabi_fadd
   \   000001A0   0x....             LDR      R1,??DataTable1_4
   \   000001A2   0x6008             STR      R0,[R1, #+0]
    143          }
   \   000001A4   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    144          
    145          /*******************************************
    146          公式:V_left=V*(1+B*tanα/2L);V_right=V*(1-B*tanα/2L);
    147          左轮速度=前轮速度*（1+后轮间距*前轮偏转角度/2倍的前后轮间距）
    148          通过差值确定偏转角度，再利用本函数转弯
    149          速度控制输出保证车速(前轮速度)稳定在一个值，理论上。
    150          tan0度-45度-60度-70度--80度---81度--83度--85度--89度-90度-91度
    151            0     1  1.73   2.7  5.7   6.3   8.1  11.4   57    无  -57
    152          **********************************************/

   \                                 In section .text, align 2, keep-with-next
    153          void Direction_ChaSpeed_Control(void)//(short int angle)
    154          {   
   \                     Direction_ChaSpeed_Control: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB083             SUB      SP,SP,#+12
    155           int k1=1;
   \   00000004   0x2001             MOVS     R0,#+1
    156          //直道--80，弯道--100,2.1
    157           int speed_z=0,speed_w=20;//w20
   \   00000006   0x2400             MOVS     R4,#+0
   \   00000008   0x2514             MOVS     R5,#+20
    158           angle_limit=89;  //0,
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x....             LDR      R1,??DataTable1_5  ;; 0x40564000
   \   0000000E   0x....             LDR      R2,??DataTable1_6
   \   00000010   0xC203             STM      R2!,{R0,R1}
   \   00000012   0x3A08             SUBS     R2,R2,#+8
    159           angle=Chazhi*1;
   \   00000014   0x....             LDR      R0,??DataTable1_7
   \   00000016   0x6801             LDR      R1,[R0, #+0]
   \   00000018   0x20FE             MOVS     R0,#+254
   \   0000001A   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   0000001C   0x.... 0x....      BL       __aeabi_fmul
   \   00000020   0x....             LDR      R1,??DataTable1_8
   \   00000022   0x6008             STR      R0,[R1, #+0]
    160           
    161             if(StraightRoad_Flag==1)
   \   00000024   0x....             LDR      R0,??DataTable1_9
   \   00000026   0x6800             LDR      R0,[R0, #+0]
   \   00000028   0x2801             CMP      R0,#+1
   \   0000002A   0xD115             BNE      ??Direction_ChaSpeed_Control_0
    162              {
    163                 speed_set_temp_L=speed_set+speed_z;
   \   0000002C   0x0020             MOVS     R0,R4
   \   0000002E   0x.... 0x....      BL       __aeabi_i2f
   \   00000032   0x....             LDR      R1,??DataTable1_10
   \   00000034   0x6809             LDR      R1,[R1, #+0]
   \   00000036   0x.... 0x....      BL       __aeabi_fadd
   \   0000003A   0x....             LDR      R1,??DataTable1_11
   \   0000003C   0x6008             STR      R0,[R1, #+0]
    164                 speed_set_temp_R=speed_set+speed_z;
   \   0000003E   0x0020             MOVS     R0,R4
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x....             LDR      R1,??DataTable1_10
   \   00000046   0x6809             LDR      R1,[R1, #+0]
   \   00000048   0x.... 0x....      BL       __aeabi_fadd
   \   0000004C   0x....             LDR      R1,??DataTable1_12
   \   0000004E   0x6008             STR      R0,[R1, #+0]
    165                 Direction_P_Temp=Direction_P;
   \   00000050   0x....             LDR      R0,??DataTable1_13
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x....             LDR      R1,??DataTable1_14
   \   00000056   0x6008             STR      R0,[R1, #+0]
    166          //       BUZZER_OFF;
    167              } 
    168              if(WindingRoad_Flag==1)
   \                     ??Direction_ChaSpeed_Control_0: (+1)
   \   00000058   0x....             LDR      R0,??DataTable1_15
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0x2801             CMP      R0,#+1
   \   0000005E   0xD115             BNE      ??Direction_ChaSpeed_Control_1
    169              {
    170                 speed_set_temp_L=speed_set+speed_w;
   \   00000060   0x0028             MOVS     R0,R5
   \   00000062   0x.... 0x....      BL       __aeabi_i2f
   \   00000066   0x....             LDR      R1,??DataTable1_10
   \   00000068   0x6809             LDR      R1,[R1, #+0]
   \   0000006A   0x.... 0x....      BL       __aeabi_fadd
   \   0000006E   0x....             LDR      R1,??DataTable1_11
   \   00000070   0x6008             STR      R0,[R1, #+0]
    171                 speed_set_temp_R=speed_set+speed_w;
   \   00000072   0x0028             MOVS     R0,R5
   \   00000074   0x.... 0x....      BL       __aeabi_i2f
   \   00000078   0x....             LDR      R1,??DataTable1_10
   \   0000007A   0x6809             LDR      R1,[R1, #+0]
   \   0000007C   0x.... 0x....      BL       __aeabi_fadd
   \   00000080   0x....             LDR      R1,??DataTable1_12
   \   00000082   0x6008             STR      R0,[R1, #+0]
    172                        Direction_P_Temp=Direction_P-0;
   \   00000084   0x....             LDR      R0,??DataTable1_13
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x....             LDR      R1,??DataTable1_14
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    173          //BUZZER_ON;
    174              }
    175            
    176             
    177            if(angle>angle_limit)   angle=angle_limit;
   \                     ??Direction_ChaSpeed_Control_1: (+1)
   \   0000008C   0x....             LDR      R0,??DataTable1_8
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x.... 0x....      BL       __aeabi_f2d
   \   00000094   0x0002             MOVS     R2,R0
   \   00000096   0x000B             MOVS     R3,R1
   \   00000098   0x....             LDR      R0,??DataTable1_6
   \   0000009A   0xC803             LDM      R0,{R0,R1}
   \   0000009C   0x.... 0x....      BL       __aeabi_cdcmple
   \   000000A0   0xD205             BCS      ??Direction_ChaSpeed_Control_2
   \   000000A2   0x....             LDR      R0,??DataTable1_6
   \   000000A4   0xC803             LDM      R0,{R0,R1}
   \   000000A6   0x.... 0x....      BL       __aeabi_d2f
   \   000000AA   0x....             LDR      R1,??DataTable1_8
   \   000000AC   0x6008             STR      R0,[R1, #+0]
    178            if(angle<-angle_limit)   angle=-angle_limit;//0.5  1.5    k=1  1.5   2.5
   \                     ??Direction_ChaSpeed_Control_2: (+1)
   \   000000AE   0x....             LDR      R0,??DataTable1_8
   \   000000B0   0x6800             LDR      R0,[R0, #+0]
   \   000000B2   0x.... 0x....      BL       __aeabi_f2d
   \   000000B6   0x....             LDR      R2,??DataTable1_6
   \   000000B8   0xCA0C             LDM      R2,{R2,R3}
   \   000000BA   0x2480             MOVS     R4,#+128
   \   000000BC   0x0624             LSLS     R4,R4,#+24       ;; #-2147483648
   \   000000BE   0x4063             EORS     R3,R3,R4
   \   000000C0   0x.... 0x....      BL       __aeabi_cdcmple
   \   000000C4   0xD208             BCS      ??Direction_ChaSpeed_Control_3
   \   000000C6   0x....             LDR      R0,??DataTable1_6
   \   000000C8   0xC803             LDM      R0,{R0,R1}
   \   000000CA   0x2280             MOVS     R2,#+128
   \   000000CC   0x0612             LSLS     R2,R2,#+24       ;; #-2147483648
   \   000000CE   0x4051             EORS     R1,R1,R2
   \   000000D0   0x.... 0x....      BL       __aeabi_d2f
   \   000000D4   0x....             LDR      R1,??DataTable1_8
   \   000000D6   0x6008             STR      R0,[R1, #+0]
    179             
    180             speed_set_L=speed_set_temp_L*(1+k-Chasu_Bili*B*tan((double)(angle*0.01745))/(2*L));//tan((double)(angle*0.01745))
   \                     ??Direction_ChaSpeed_Control_3: (+1)
   \   000000D8   0x....             LDR      R0,??DataTable1_11
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x.... 0x....      BL       __aeabi_f2d
   \   000000E0   0x9000             STR      R0,[SP, #+0]
   \   000000E2   0x9101             STR      R1,[SP, #+4]
   \   000000E4   0x....             LDR      R0,??DataTable2_1
   \   000000E6   0x6801             LDR      R1,[R0, #+0]
   \   000000E8   0x20FE             MOVS     R0,#+254
   \   000000EA   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   000000EC   0x.... 0x....      BL       __aeabi_fadd
   \   000000F0   0x.... 0x....      BL       __aeabi_f2d
   \   000000F4   0x0006             MOVS     R6,R0
   \   000000F6   0x000F             MOVS     R7,R1
   \   000000F8   0x....             LDR      R0,??DataTable2_2
   \   000000FA   0x6801             LDR      R1,[R0, #+0]
   \   000000FC   0x....             LDR      R0,??DataTable2_3
   \   000000FE   0x6800             LDR      R0,[R0, #+0]
   \   00000100   0x.... 0x....      BL       __aeabi_fmul
   \   00000104   0x.... 0x....      BL       __aeabi_f2d
   \   00000108   0x0004             MOVS     R4,R0
   \   0000010A   0x000D             MOVS     R5,R1
   \   0000010C   0x....             LDR      R0,??DataTable1_8
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0x.... 0x....      BL       __aeabi_f2d
   \   00000114   0x....             ADR      R2,??DataTable2_4
   \   00000116   0xCA0C             LDM      R2,{R2,R3}
   \   00000118   0x.... 0x....      BL       __aeabi_dmul
   \   0000011C   0x.... 0x....      BL       tan
   \   00000120   0x0022             MOVS     R2,R4
   \   00000122   0x002B             MOVS     R3,R5
   \   00000124   0x.... 0x....      BL       __aeabi_dmul
   \   00000128   0x0004             MOVS     R4,R0
   \   0000012A   0x000D             MOVS     R5,R1
   \   0000012C   0x....             LDR      R0,??DataTable2_5
   \   0000012E   0x6801             LDR      R1,[R0, #+0]
   \   00000130   0x2080             MOVS     R0,#+128
   \   00000132   0x05C0             LSLS     R0,R0,#+23       ;; #+1073741824
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x.... 0x....      BL       __aeabi_f2d
   \   0000013C   0x0002             MOVS     R2,R0
   \   0000013E   0x000B             MOVS     R3,R1
   \   00000140   0x0020             MOVS     R0,R4
   \   00000142   0x0029             MOVS     R1,R5
   \   00000144   0x.... 0x....      BL       __aeabi_ddiv
   \   00000148   0x0002             MOVS     R2,R0
   \   0000014A   0x000B             MOVS     R3,R1
   \   0000014C   0x0030             MOVS     R0,R6
   \   0000014E   0x0039             MOVS     R1,R7
   \   00000150   0x.... 0x....      BL       __aeabi_dsub
   \   00000154   0x9A00             LDR      R2,[SP, #+0]
   \   00000156   0x9B01             LDR      R3,[SP, #+4]
   \   00000158   0x.... 0x....      BL       __aeabi_dmul
   \   0000015C   0x.... 0x....      BL       __aeabi_d2f
   \   00000160   0x....             LDR      R1,??DataTable2
   \   00000162   0x6008             STR      R0,[R1, #+0]
    181             speed_set_R=speed_set_temp_R*(1+k+Chasu_Bili*B*tan((double)(angle*0.01745))/(2*L)); //b/2L=0.517
   \   00000164   0x....             LDR      R0,??DataTable1_12
   \   00000166   0x6800             LDR      R0,[R0, #+0]
   \   00000168   0x.... 0x....      BL       __aeabi_f2d
   \   0000016C   0x9000             STR      R0,[SP, #+0]
   \   0000016E   0x9101             STR      R1,[SP, #+4]
   \   00000170   0x....             LDR      R0,??DataTable2_1
   \   00000172   0x6801             LDR      R1,[R0, #+0]
   \   00000174   0x20FE             MOVS     R0,#+254
   \   00000176   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000178   0x.... 0x....      BL       __aeabi_fadd
   \   0000017C   0x.... 0x....      BL       __aeabi_f2d
   \   00000180   0x0006             MOVS     R6,R0
   \   00000182   0x000F             MOVS     R7,R1
   \   00000184   0x....             LDR      R0,??DataTable2_2
   \   00000186   0x6801             LDR      R1,[R0, #+0]
   \   00000188   0x....             LDR      R0,??DataTable2_3
   \   0000018A   0x6800             LDR      R0,[R0, #+0]
   \   0000018C   0x.... 0x....      BL       __aeabi_fmul
   \   00000190   0x.... 0x....      BL       __aeabi_f2d
   \   00000194   0x0004             MOVS     R4,R0
   \   00000196   0x000D             MOVS     R5,R1
   \   00000198   0x....             LDR      R0,??DataTable1_8
   \   0000019A   0x6800             LDR      R0,[R0, #+0]
   \   0000019C   0x.... 0x....      BL       __aeabi_f2d
   \   000001A0   0x....             ADR      R2,??DataTable2_4
   \   000001A2   0xCA0C             LDM      R2,{R2,R3}
   \   000001A4   0x.... 0x....      BL       __aeabi_dmul
   \   000001A8   0x.... 0x....      BL       tan
   \   000001AC   0x0022             MOVS     R2,R4
   \   000001AE   0x002B             MOVS     R3,R5
   \   000001B0   0x.... 0x....      BL       __aeabi_dmul
   \   000001B4   0x0004             MOVS     R4,R0
   \   000001B6   0x000D             MOVS     R5,R1
   \   000001B8   0x....             LDR      R0,??DataTable2_5
   \   000001BA   0x6801             LDR      R1,[R0, #+0]
   \   000001BC   0x2080             MOVS     R0,#+128
   \   000001BE   0x05C0             LSLS     R0,R0,#+23       ;; #+1073741824
   \   000001C0   0x.... 0x....      BL       __aeabi_fmul
   \   000001C4   0x.... 0x....      BL       __aeabi_f2d
   \   000001C8   0x0002             MOVS     R2,R0
   \   000001CA   0x000B             MOVS     R3,R1
   \   000001CC   0x0020             MOVS     R0,R4
   \   000001CE   0x0029             MOVS     R1,R5
   \   000001D0   0x.... 0x....      BL       __aeabi_ddiv
   \   000001D4   0x0032             MOVS     R2,R6
   \   000001D6   0x003B             MOVS     R3,R7
   \   000001D8   0x.... 0x....      BL       __aeabi_dadd
   \   000001DC   0x9A00             LDR      R2,[SP, #+0]
   \   000001DE   0x9B01             LDR      R3,[SP, #+4]
   \   000001E0   0x.... 0x....      BL       __aeabi_dmul
   \   000001E4   0x.... 0x....      BL       __aeabi_d2f
   \   000001E8   0x....             LDR      R1,??DataTable3
   \   000001EA   0x6008             STR      R0,[R1, #+0]
    182            
    183          //速度设定小于0 
    184              
    185          //   if(speed_set_L<30)
    186          //   {
    187          //      if(speed_set_L>0)//0<speed_set_L<30
    188          //          speed_set_R+=2*abs_f(speed_set_L);
    189          //      else
    190          //          speed_set_R+=30+2*abs_f(speed_set_L);
    191          //
    192          //      speed_set_L=30;
    193          //   }  
    194          //   
    195          //   if(speed_set_R<30)
    196          //   {
    197          //      if(speed_set_R>0)//0<speed_set_L<30
    198          //          speed_set_L+=2*abs_f(speed_set_R);
    199          //      else
    200          //          speed_set_L+=30+2*abs_f(speed_set_R);
    201          //
    202          //      speed_set_R=30;
    203          //   }  
    204            
    205             
    206          //      if(speed_set_L<0)
    207          //   {
    208          //
    209          //    speed_set_R+=1*abs_f(speed_set_L);
    210          //    speed_set_L=0;
    211          //   }  
    212          //   if(speed_set_R<0)
    213          //   {
    214          //    speed_set_L+=1*abs_f(speed_set_R);
    215          //    speed_set_R=0;
    216          //   } 
    217            
    218          
    219          }
   \   000001EC   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return

   \                                 In section .bss, align 4
    220          float Speed_PWM=0;
   \                     Speed_PWM:
   \   00000000                      DS8 4

   \                                 In section .text, align 2, keep-with-next
    221          void BangBang(void)
    222          {
   \                     BangBang: (+1)
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    223          float speed_error=0,K4=0,Son_SP,KP=0,
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x2100             MOVS     R1,#+0
    224                Speed_Error=0,Speed_PWM_L=0,Speed_PWM_R=0,
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x2000             MOVS     R0,#+0
    225               Speed_PWM_Max=8000,Speed_PWM_Min=-8000,
   \   0000000E   0x....             LDR      R4,??DataTable3_1  ;; 0x45fa0000
   \   00000010   0x....             LDR      R5,??DataTable3_2  ;; 0xc5fa0000
    226                 Error_L=0,Error_R=0; 
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x2000             MOVS     R0,#+0
    227          /*棒棒是为了达到速度设定
    228          速度1：之前的，设定同一速度，
    229               实际直道比弯道快
    230          速度2：改变不同速度设定/速度环P/改变棒棒的强度                     
    231               实际直道弯道一样快
    232          速度3 :棒棒强硬，速度设定不一样；速度设定一样，弯道取消棒棒，甚至运用棒棒-PWM                       
    233              实际直道比弯道快
    234          ---------------------------------------------------------
    235          1稳定现在速度，直道弯道一样快，再85，
    236          2出弯加速，直道加速一段时间
    237          入弯减速，弯道中加速   
    238           */   
    239          /*-------------------棒棒1------------------------------------------*/  
    240          if(StraightRoad_Flag==1)
   \   00000016   0x....             LDR      R0,??DataTable3_3
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x2801             CMP      R0,#+1
   \   0000001C   0xD107             BNE      ??BangBang_0
    241          {
    242            speed_set_temp=speed_set+10;//10
   \   0000001E   0x....             LDR      R0,??DataTable3_4
   \   00000020   0x6801             LDR      R1,[R0, #+0]
   \   00000022   0x....             LDR      R0,??DataTable3_5  ;; 0x41200000
   \   00000024   0x.... 0x....      BL       __aeabi_fadd
   \   00000028   0x....             LDR      R1,??DataTable3_6
   \   0000002A   0x6008             STR      R0,[R1, #+0]
   \   0000002C   0xE7FF             B        ??BangBang_1
    243          }
    244          else
    245          if(Circle_Flag>1&&Circle_Flag<4)//处于检测圆环双线状态
    246                {
    247                
    248                }
    249          
    250          
    251          
    252            
    253          speed_set_temp=speed_set+10;//10
   \                     ??BangBang_0: (+1)
   \                     ??BangBang_1: (+1)
   \   0000002E   0x....             LDR      R0,??DataTable3_4
   \   00000030   0x6801             LDR      R1,[R0, #+0]
   \   00000032   0x....             LDR      R0,??DataTable3_5  ;; 0x41200000
   \   00000034   0x.... 0x....      BL       __aeabi_fadd
   \   00000038   0x....             LDR      R1,??DataTable3_6
   \   0000003A   0x6008             STR      R0,[R1, #+0]
    254          //车速小，偏差正，    
    255          Speed_Error=speed_set_temp-speed_car;
   \   0000003C   0x....             LDR      R0,??DataTable3_6
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x....             LDR      R1,??DataTable3_7
   \   00000042   0x6809             LDR      R1,[R1, #+0]
   \   00000044   0x.... 0x....      BL       __aeabi_fsub
    256          
    257             if(Speed_Error>50)//车速小,>50
   \   00000048   0x....             LDR      R1,??DataTable3_8  ;; 0x42480001
   \   0000004A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000004E   0xD803             BHI      ??BangBang_2
    258             {
    259               Speed_PWM =7000;
   \   00000050   0x....             LDR      R0,??DataTable3_9  ;; 0x45dac000
   \   00000052   0x....             LDR      R1,??DataTable3_10
   \   00000054   0x6008             STR      R0,[R1, #+0]
   \   00000056   0xE040             B        ??BangBang_3
    260               //P=200;
    261             }
    262             else if(Speed_Error>40)//车速小,40-50
   \                     ??BangBang_2: (+1)
   \   00000058   0x....             LDR      R1,??DataTable3_11  ;; 0x42200001
   \   0000005A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000005E   0xD803             BHI      ??BangBang_4
    263             {
    264               Speed_PWM =5000;
   \   00000060   0x....             LDR      R0,??DataTable3_12  ;; 0x459c4000
   \   00000062   0x....             LDR      R1,??DataTable3_10
   \   00000064   0x6008             STR      R0,[R1, #+0]
   \   00000066   0xE038             B        ??BangBang_3
    265             }
    266             else if(Speed_Error>30)//车速小,30-40
   \                     ??BangBang_4: (+1)
   \   00000068   0x....             LDR      R1,??DataTable3_13  ;; 0x41f00001
   \   0000006A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000006E   0xD803             BHI      ??BangBang_5
    267             {
    268               Speed_PWM =4000;
   \   00000070   0x....             LDR      R0,??DataTable3_14  ;; 0x457a0000
   \   00000072   0x....             LDR      R1,??DataTable3_10
   \   00000074   0x6008             STR      R0,[R1, #+0]
   \   00000076   0xE030             B        ??BangBang_3
    269             }
    270             else if(Speed_Error>20)//车速小,20-30
   \                     ??BangBang_5: (+1)
   \   00000078   0x....             LDR      R1,??DataTable3_15  ;; 0x41a00001
   \   0000007A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000007E   0xD803             BHI      ??BangBang_6
    271             {
    272               Speed_PWM =3000;
   \   00000080   0x....             LDR      R0,??DataTable3_16  ;; 0x453b8000
   \   00000082   0x....             LDR      R1,??DataTable3_10
   \   00000084   0x6008             STR      R0,[R1, #+0]
   \   00000086   0xE028             B        ??BangBang_3
    273             }
    274             else if(Speed_Error>0)//车速小0-20
   \                     ??BangBang_6: (+1)
   \   00000088   0x2100             MOVS     R1,#+0
   \   0000008A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000008E   0xD206             BCS      ??BangBang_7
    275             {
    276               KP=100;
   \   00000090   0x....             LDR      R1,??DataTable3_17  ;; 0x42c80000
    277              Speed_PWM = Speed_Error*P;
   \   00000092   0x....             LDR      R1,??DataTable3_18  ;; 0x42480000
   \   00000094   0x.... 0x....      BL       __aeabi_fmul
   \   00000098   0x....             LDR      R1,??DataTable3_10
   \   0000009A   0x6008             STR      R0,[R1, #+0]
   \   0000009C   0xE01D             B        ??BangBang_3
    278             }
    279             else if(Speed_Error>-20)//车速大0->-20
   \                     ??BangBang_7: (+1)
   \   0000009E   0x....             LDR      R1,??DataTable3_19  ;; 0xc19fffff
   \   000000A0   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000A4   0xD806             BHI      ??BangBang_8
    280             {
    281                  KP=200;
   \   000000A6   0x....             LDR      R1,??DataTable3_20  ;; 0x43480000
    282                  Speed_PWM = Speed_Error*P;
   \   000000A8   0x....             LDR      R1,??DataTable3_18  ;; 0x42480000
   \   000000AA   0x.... 0x....      BL       __aeabi_fmul
   \   000000AE   0x....             LDR      R1,??DataTable3_10
   \   000000B0   0x6008             STR      R0,[R1, #+0]
   \   000000B2   0xE012             B        ??BangBang_3
    283             }
    284             else if(Speed_Error>-30)//车速大-20>-30
   \                     ??BangBang_8: (+1)
   \   000000B4   0x....             LDR      R1,??DataTable3_21  ;; 0xc1efffff
   \   000000B6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000BA   0xD803             BHI      ??BangBang_9
    285             {
    286                 Speed_PWM =-6000;
   \   000000BC   0x....             LDR      R0,??DataTable3_22  ;; 0xc5bb8000
   \   000000BE   0x....             LDR      R1,??DataTable3_10
   \   000000C0   0x6008             STR      R0,[R1, #+0]
   \   000000C2   0xE00A             B        ??BangBang_3
    287             }
    288             else if(Speed_Error>-40)//车速大-30>-40
   \                     ??BangBang_9: (+1)
   \   000000C4   0x....             LDR      R1,??DataTable3_23  ;; 0xc21fffff
   \   000000C6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000CA   0xD803             BHI      ??BangBang_10
    289             {
    290                 Speed_PWM =-7000;
   \   000000CC   0x....             LDR      R0,??DataTable3_24  ;; 0xc5dac000
   \   000000CE   0x....             LDR      R1,??DataTable3_10
   \   000000D0   0x6008             STR      R0,[R1, #+0]
   \   000000D2   0xE002             B        ??BangBang_3
    291             }    
    292             else //车速大<-40
    293             {
    294                 Speed_PWM =-8000;
   \                     ??BangBang_10: (+1)
   \   000000D4   0x....             LDR      R0,??DataTable3_2  ;; 0xc5fa0000
   \   000000D6   0x....             LDR      R1,??DataTable3_10
   \   000000D8   0x6008             STR      R0,[R1, #+0]
    295             }
    296             
    297          
    298          
    299           
    300          
    301          
    302          
    303             if(Speed_PWM>Speed_PWM_Max)  Speed_PWM=Speed_PWM_Max;
   \                     ??BangBang_3: (+1)
   \   000000DA   0x0020             MOVS     R0,R4
   \   000000DC   0x....             LDR      R1,??DataTable3_10
   \   000000DE   0x6809             LDR      R1,[R1, #+0]
   \   000000E0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000E4   0xD201             BCS      ??BangBang_11
   \   000000E6   0x....             LDR      R0,??DataTable3_10
   \   000000E8   0x6004             STR      R4,[R0, #+0]
    304             if(Speed_PWM<Speed_PWM_Min)  Speed_PWM=Speed_PWM_Min;  
   \                     ??BangBang_11: (+1)
   \   000000EA   0x....             LDR      R0,??DataTable3_10
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x0029             MOVS     R1,R5
   \   000000F0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000F4   0xD201             BCS      ??BangBang_12
   \   000000F6   0x....             LDR      R0,??DataTable3_10
   \   000000F8   0x6005             STR      R5,[R0, #+0]
    305          
    306          }
   \                     ??BangBang_12: (+1)
   \   000000FA   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 2, keep-with-next
    307          void Controler()
    308          {
   \                     Controler: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    309          float Speed_Error_L_Old=0,Speed_Error_R_Old=0;
   \   00000002   0x2600             MOVS     R6,#+0
   \   00000004   0x2500             MOVS     R5,#+0
    310          
    311          // speed_error=speed_buzzer-speed_car;
    312          //  Speed_Error_L = speed_set - speed_car;//重复
    313          //  Speed_Error_R = speed_set - speed_car;//
    314             Speed_Error_L = speed_set_L - speed_L;//重复
   \   00000006   0x....             LDR      R0,??DataTable3_25
   \   00000008   0x6800             LDR      R0,[R0, #+0]
   \   0000000A   0x....             LDR      R1,??DataTable3_26
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fsub
   \   00000012   0x....             LDR      R1,??DataTable3_27
   \   00000014   0x6008             STR      R0,[R1, #+0]
    315             Speed_Error_R = speed_set_R - speed_R;     
   \   00000016   0x....             LDR      R0,??DataTable3
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x....             LDR      R1,??DataTable3_28
   \   0000001C   0x6809             LDR      R1,[R1, #+0]
   \   0000001E   0x.... 0x....      BL       __aeabi_fsub
   \   00000022   0x....             LDR      R1,??DataTable3_29
   \   00000024   0x6008             STR      R0,[R1, #+0]
    316          
    317          
    318          Control_Output_L=Direction_P_Temp*Speed_Error_L +Speed_I_lntegral_L+Direction_D*(Speed_Error_L-Speed_Error_L_Old)
    319                           ;
   \   00000026   0x....             LDR      R0,??DataTable3_30
   \   00000028   0x6801             LDR      R1,[R0, #+0]
   \   0000002A   0x....             LDR      R0,??DataTable3_27
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0x.... 0x....      BL       __aeabi_fmul
   \   00000032   0x....             LDR      R1,??DataTable3_31
   \   00000034   0x6809             LDR      R1,[R1, #+0]
   \   00000036   0x.... 0x....      BL       __aeabi_fadd
   \   0000003A   0x0001             MOVS     R1,R0
   \   0000003C   0x000C             MOVS     R4,R1
   \   0000003E   0x....             LDR      R0,??DataTable3_27
   \   00000040   0x6800             LDR      R0,[R0, #+0]
   \   00000042   0x0031             MOVS     R1,R6
   \   00000044   0x.... 0x....      BL       __aeabi_fsub
   \   00000048   0x....             LDR      R1,??DataTable3_32
   \   0000004A   0x6809             LDR      R1,[R1, #+0]
   \   0000004C   0x.... 0x....      BL       __aeabi_fmul
   \   00000050   0x0021             MOVS     R1,R4
   \   00000052   0x.... 0x....      BL       __aeabi_fadd
   \   00000056   0x....             LDR      R1,??DataTable3_33
   \   00000058   0x6008             STR      R0,[R1, #+0]
    320          //
    321          Control_Output_R=Direction_P_Temp*Speed_Error_R +Speed_I_lntegral_R+Direction_D*(Speed_Error_R-Speed_Error_R_Old)
    322                             ;
   \   0000005A   0x....             LDR      R0,??DataTable3_30
   \   0000005C   0x6801             LDR      R1,[R0, #+0]
   \   0000005E   0x....             LDR      R0,??DataTable3_29
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x.... 0x....      BL       __aeabi_fmul
   \   00000066   0x....             LDR      R1,??DataTable3_34
   \   00000068   0x6809             LDR      R1,[R1, #+0]
   \   0000006A   0x.... 0x....      BL       __aeabi_fadd
   \   0000006E   0x0001             MOVS     R1,R0
   \   00000070   0x000C             MOVS     R4,R1
   \   00000072   0x....             LDR      R0,??DataTable3_29
   \   00000074   0x6800             LDR      R0,[R0, #+0]
   \   00000076   0x0029             MOVS     R1,R5
   \   00000078   0x.... 0x....      BL       __aeabi_fsub
   \   0000007C   0x....             LDR      R1,??DataTable3_32
   \   0000007E   0x6809             LDR      R1,[R1, #+0]
   \   00000080   0x.... 0x....      BL       __aeabi_fmul
   \   00000084   0x0021             MOVS     R1,R4
   \   00000086   0x.... 0x....      BL       __aeabi_fadd
   \   0000008A   0x....             LDR      R1,??DataTable3_35
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    323          
    324          
    325          }
   \   0000008E   0xBD70             POP      {R4-R6,PC}       ;; return
    326          //                               Speed_Error_L_Old    -  Speed_Error_L：为P的作用
    327          //速度设定100 初始速度0 本次速度50       100-0=100     -  100-50=50    =50*D，加速
    328          //                    本次速度100             100     -   100-100=0    =100*D,加速
    329          
    330          //                                  Speed_Error_L -  Speed_Error_L_Old：为D的作用
    331          //速度设定100 初始速度0 本次速度50      100-50=50  -   100-0=100       =-50*D,减速
    332          //速度设定0 初始速度100 本次速度50      0-50=-50   -   0-100=-100       =50*D,加速
    333          //直道速度=速度设定-10   
    334          //一个弯道速度=速度设定-40   
    335          //大弯道速度=速度设定-60       速度设定-30
    336          //车速小， 正值；车速大，负值 
    337          //   speed_error=speed_buzzer-speed_car;
    338          //   K4=50;
    339          //   Son_SP=speed_error*K4;
    340          //      if(Son_SP>500)   Son_SP=500;
    341          //      if(Son_SP<300)   Son_SP=300;
    342          //   Son_SP=0;
    343          //Direction_P_Temp=Direction_P+Son_SP;
    344          //--------------bb-------------------------------
    345          //速度偏差方案2:Speed_Error_L,Speed_Error_R
    346          //棒棒PWM给值方案2,偏差方案2,错了，同速度环P
    347          //   Speed_PWM_L = Error_L*200;
    348          //   Speed_PWM_R = Error_R*200; 
    349          /*积分偏差累
    350             for(int i=0;i<N-1;i++)
    351             {
    352               Accum_Error_L[i]=Accum_Error_L[i+1]; //重复
    353               Sum_Error_L+=Accum_Error_L[i];
    354             }
    355               
    356             Accum_Error_L[N-1]=Speed_Error_L;
    357             Sum_Error_L+=Accum_Error_L[N-1]; 
    358           
    359             for( int i=0;i<N-1;i++)
    360             {
    361               Accum_Error_R[i]=Accum_Error_R[i+1]; //重复
    362               Sum_Error_R+=Accum_Error_R[i];
    363             }
    364                   
    365             Accum_Error_R[N-1]=Speed_Error_R;
    366             Sum_Error_R+=Accum_Error_R[N-1];
    367          
    368             Speed_I_lntegral_L = Direction_I*Sum_Error_L;
    369             Speed_I_lntegral_R = Direction_I*Sum_Error_R;
    370                    
    371             if (Speed_I_lntegral_L< -Speed_I_lntegral_Max)
    372                 Speed_I_lntegral_L= -Speed_I_lntegral_Max;
    373             if (Speed_I_lntegral_L>  Speed_I_lntegral_Max)
    374                 Speed_I_lntegral_L=  Speed_I_lntegral_Max;
    375             if (Speed_I_lntegral_R< -Speed_I_lntegral_Max)
    376                 Speed_I_lntegral_R= -Speed_I_lntegral_Max;
    377             if (Speed_I_lntegral_R>  Speed_I_lntegral_Max)
    378                 Speed_I_lntegral_R=  Speed_I_lntegral_Max;
    379             */
    380          
    381          
    382          
    383          
    384          
    385          
    386          /*差值P关于速度大小作指数函数
    387            速度低于速度设定，差值P下降，减小底数，增强差值P
    388            速度高于速度设定，差值P上升，减小底数，削弱差值P
    389          */  
    390          //  speed_point=speed_set-40;
    391            
    392          //  Speed_Bili_Temp=(speed_car-speed_point)/speed_point;
    393          //  
    394          //  if(speed_car<speed_point)//数学比值为负数，指数值0-1
    395          //  Speed_Bili=pow(2.7,Speed_Bili_Temp);//减小底数，指数比例变大，数值降得慢
    396          //  else//数学比值为正数，指数值>1
    397          //  Speed_Bili=pow(1.5,Speed_Bili_Temp);//减小底数，指数比例变小，数值升的慢
    398          //  
    399          //  Direction_P2_Speed=Speed_Bili*Direction_P2;//300 
    400           
    401          /*    
    402            陀螺仪D关于速度大小作指数函数           
    403            速度低于速度设定，陀螺仪D上升，减小底数，减小陀螺仪D
    404            速度高于速度设定，陀螺仪D下降，减小底数，增强陀螺仪D
    405          */ 
    406            
    407            
    408          //  Speed_Bili_Temp=(speed_point-speed_car)/speed_point;
    409          //  
    410          //   if(speed_car<speed_point)//数学比值为正数
    411          //  Speed_Bili=pow(1.5,Speed_Bili_Temp);//减小底数，指数比例变小，数值升的慢
    412          //  else//数学比值为负数
    413          //  Speed_Bili=pow(1.5,Speed_Bili_Temp);//减小底数，指数比例变大，数值降得慢
    414          //  
    415          //  Angle_D_Speed=Speed_Bili*Angle_D;//300 
    416             
    417          /*差值P关于差值大小作指数函数*/    
    418          //Chazhi_Bili_Temp=(abs_f(Chazhi)-Chazhi_point)/Chazhi_point;//-2/3
    419          //
    420          // if(abs_f(Chazhi)<Chazhi_point)//数学比值为负数
    421          //  Chazhi_Bili=pow(1.5,Chazhi_Bili_Temp);//减小底数，指数比例变大，数值降得慢
    422          //  else//数学比值为正数
    423          //  Chazhi_Bili=pow(2.7,Chazhi_Bili_Temp);//减小底数，指数比例变小，数值升的慢
    424          //
    425          // Direction_P2_Chazhi=Chazhi_Bili*Direction_P2;//300
    426          //// 
    427          ///*陀螺仪D关于差值大小作指数函数*/ 
    428          // if(abs_f(Chazhi)<80)  Chazhi_Temp=abs_f(Chazhi);
    429          // else                  Chazhi_Temp=80;
    430          // 
    431          // Chazhi_Bili_Temp=(Chazhi_Temp-Chazhi_point)/Chazhi_point;//-2/3
    432          //// 
    433          //if(Chazhi_Temp<Chazhi_point)//数学比值为负数
    434          //  Chazhi_Bili=pow(2.7,Chazhi_Bili_Temp);//减小底数，指数比例变大，数值降得慢
    435          //else//数学比值为正数
    436          //  Chazhi_Bili=pow(1.5,Chazhi_Bili_Temp);//减小底数，指数比例变小，数值升的慢
    437          // 
    438          // Angle_D_Chazhi     =Chazhi_Bili*Angle_D;//300        
    439          /*-----------------------------------------------*/
    440           
    441          //Angle_Weight=1.0;//陀螺仪D--速度权重
    442          //Direction_Weight=1;//方向环P--速度权重
    443          //Direction_P2_Temp=Direction_P2_Speed*Direction_Weight+Direction_P2_Chazhi*(1-Direction_Weight);     
    444          //Angle_D_Temp     =Angle_D_Speed*Angle_Weight+Angle_D_Chazhi*(1-Angle_Weight);
    445          
    446          //if(speed_car<speed_set-50)  
    447          //{
    448          //  if(abs_f(Chazhi)<40)
    449          //  Angle_D_Temp=Angle_D;//30*0.8=24 
    450          //  else  if(abs_f(Chazhi)<60)
    451          //  Angle_D_Temp=0;//30*0.8=24  
    452          //  else  
    453          //  Angle_D_Temp=0;//30*0.8=24 
    454          //}
    455          //else
    456          //    Angle_D_Temp=0;//30*0.8=24 
    457          //差值P关于速度作大小，速度上流畅，  
    458          //-10    弯道速度略大   弯道沿中线过弯
    459          //差值P关于差值作大小，弯道速度平缓，
    460          /*差值P关于速度大小作2次函数*/
    461          //  speed_point=speed_set-10;
    462          //  Speed_Bili=(speed_car*speed_car)/(speed_point*speed_point);
    463          // Direction_P2_Speed=Speed_Bili*Direction_P2;//300 
    464          /*陀螺仪D关于速度大小作2次函数*/  
    465          //  Angle_D_Speed=Speed_Bili*Angle_D;//300 
    466          //差值P关于差值大小作2次函数，
    467          //  Chazhi_Bili=(Chazhi*Chazhi)/(Chazhi_point*Chazhi_point);
    468          // Direction_P2_Temp=Chazhi_Bili*Direction_P2;//300
    469          /*陀螺仪*/
    470          //     if(abs_f(Chazhi<20))
    471          //     {
    472          //        Angle_P_Temp=0;
    473          //        Angle_D_Temp=Angle_D;//30
    474          //     }
    475          //     else if(abs_f(Chazhi<40))
    476          //     {
    477          //        Angle_P_Temp=0;
    478          //        Angle_D_Temp=Angle_D;//30*0.8=24 
    479          //        Angle_D_Temp=Angle_D*2;//30*0.8=24 
    480          //     }
    481          //     else if(abs_f(Chazhi<50))
    482          //     {
    483          //        Angle_P_Temp=0;//30*0.8=24
    484          //        Angle_D_Temp=Angle_D/2;//30*0.8=24
    485          //     }
    486          //     else if(abs_f(Chazhi<75))
    487          //     {
    488          //        Angle_P_Temp=Angle_P/2;//P
    489          //        Angle_D_Temp=0;//P
    490          //     }
    491          //     else
    492          //     {
    493          //        Angle_P_Temp=Angle_P;//P
    494          //        Angle_D_Temp=0;//P
    495          //     }
    496               
    497          //    if(speed_car<10)//速度
    498          //        Angle_D_Temp+=55;//P
    499          //    else  if(speed_car<20)//速度
    500          //        Angle_D_Temp+=35;//P
    501          //    else  if(speed_car<30)//速度
    502          //        Angle_D_Temp+=25;//P
    503          //    else  if(speed_car<40)//速度
    504          //        Angle_D_Temp+=15;//P
    505          //    else  if(speed_car<50)//速度
    506          //        Angle_D_Temp+=10;//P
    507          //    else  if(speed_car<60)//速度
    508          //        Angle_D_Temp+=5;//P
    509          //    else
    510          //        Angle_D_Temp+=0;//P
    511          
    512          /*差值P*/
    513          //     if(abs_f(Chazhi<30))
    514          //        Direction_P2_Temp=Direction_P2*0.8;//250*0.8=200
    515          //     
    516          //     else if(abs_f(Chazhi<40))
    517          //        Direction_P2_Temp=Direction_P2*0.9;//250
    518          //     
    519          //      else if(abs_f(Chazhi<50))
    520          //        Direction_P2_Temp=Direction_P2;//250
    521          //     
    522          //     else if(abs_f(Chazhi<75))
    523          //        Direction_P2_Temp=Direction_P2*1.1;//275
    524          //     else
    525          //        Direction_P2_Temp=Direction_P2*1.2;//300
    526          //     
    527             
    528          //            Direction_P2_Temp=Direction_P2;//300
    529          
    530          //        if(StraightRoad_Flag==1)
    531          //    {
    532          //       if(speed_car>speed_set-20)//速度>50
    533          //           Direction_P2_Temp=Direction_P2+30;
    534          //    }
    535              
    536          //   if(speed_car>speed_set)//速度：>70
    537          //        Direction_P2_Temp+=30;
    538          //   else if(speed_car>speed_set-10)//速度：60-70
    539          //     Direction_P2_Temp+=10;
    540          //   else if(speed_car>speed_set-20)//速度：50-60
    541          //        Direction_P2_Temp-=20;
    542          //   else if(speed_car>speed_set-30)//速度：40-50
    543          //        Direction_P2_Temp-=40;
    544          //   else if(speed_car>speed_set-40)//速度：30-40
    545          //        Direction_P2_Temp-=60; 
    546          //   else if(speed_car>speed_set-50)//速度：20-30
    547          //        Direction_P2_Temp-=90;
    548          
    549          //   else if(speed_car>speed_set-60)//速度：10-20
    550          //        Direction_P2_Temp-=130;
    551          //  else                          //速度<10
    552          //        Direction_P2_Temp-=170;
    553          
    554          
    555          
    556          
    557          
    558          
    559          
    560          
    561          
    562          
    563          
    564          
    565          
    566          
    567          
    568          
    569          
    570          
    571          
    572          
    573          
    574          
    575          
    576          
    577          
    578          
    579          
    580          
    581          
    582          
    583          
    584          
    585          
    586          
    587          //60度，
    588          //Chasu_Bili*0.89547
    589          //1.5*0.89547=1.3432
    590          //速度=速度*（1+Chasu_Bili*0.89547）  
    591          //速度=速度*（1-Chasu_Bili*0.89547）
    592             
    593          //Chasu_Bili=1.5  
    594          //速度=速度*（2.3432）  
    595          //速度=速度*（-0.3432） 
    596          //60度，Chasu_Bili=1.5.速度100最低-34
    597          //55度，Chasu_Bili=1.5.速度100最低-10
    598             
    599          
    600          
    601               //   Direction_Control_Output_L = Direction_P*Speed_Error_L + Speed_I_lntegral_L+Direction_D*(Speed_Error_L-Speed_Error_Last_L)
    602          //                            +Angle_P_choose*Angle_P*gyr_angle_speed-Angle_D*gyr_angle_speed
    603          //                             -Direction_P2*Chazhi-Direction_D2*(Chazhi-Chazhi_Last);   
    604          
    605          //Direction_Control_Output_R = Direction_P*Speed_Error_R + Speed_I_lntegral_R+Direction_D*(Speed_Error_R-Speed_Error_Last_R)
    606          //                             -Angle_P_choose*Angle_P*gyr_angle_speed+Angle_D*gyr_angle_speed
    607          //                             +Direction_P2*Chazhi+Direction_D2*(Chazhi-Chazhi_Last);  
    608          //Direction_Control_Output_L = Direction_P*Speed_Error_L +Speed_I_lntegral_L
    609          //                             -Angle_D_Temp*gyr_angle_speed
    610          //                             -Direction_P2*Chazhi-Direction_D2*(Chazhi_Last-Chazhi);   
    611          //
    612          //Direction_Control_Output_R = Direction_P*Speed_Error_R +Speed_I_lntegral_R
    613          //                              +Angle_D_Temp*gyr_angle_speed
    614          //                             +Direction_P2*Chazhi+Direction_D2*(Chazhi_Last-Chazhi); 
    615          /*
    616          void Steercontrol(void)                  //PD控制或者非线性控制
    617          {
    618          float pwm;
    619          uint steerpwm;
    620          float positionerror;
    621          if(positiony<20)
    622          xianzhiflag=0.5;
    623          else if(positiony<30)       //若上限为40，则转折点为100  若上限为30，则转折点为753
    624          无挖潜
    625          xianzhiflag=0.05*positiony-0.5;
    626          else
    627          xianzhiflag=1;
    628          if(psum<75)
    629          xianzhiflag=1;
    630          positionerror=position1[0]-position1[1]; 
    631          if(position1[0]<0)
    632          kpc=d*position1[0]*position1[0]-e*position1[0]+f;
    633          else
    634          kpc=d*position1[0]*position1[0]+e*position1[0]+f;
    635          pwm=(kpc*position1[0]+kdc*positionerror)*xianzhiflag;
    636          steerpwm=csteermid+(int)pwm;    
    637          if(steerpwm<csteerleft)
    638          PWMDTY67=csteerleft;
    639          else if(steerpwm>csteerright) 
    640          错误！未找到引用源。
    641          第  XVII  页
    642          {
    643          PWMDTY67=csteerright;
    644          } 
    645          else
    646          {
    647          PWMDTY67=steerpwm;
    648          }      
    649          }
    650          */
    651          
    652          /*
    653          tan0度-45度-60度-70度--80度---81度--83度--85度--89度-90度-91度
    654            0     1  1.73   2.7  5.7   6.3   8.1  11.4   57    无  -57
    655            综上所述，角度angle必须小于90度，一旦大于90度，就从向左往死里转弯变到往右往死里打弯，彻底旋转
    656          根本不行。由于角度越大，tan变得也越严重，不能大于80度。必须不能大于80度。
    657            所以依据舵机能转向貌似最大60度，先设定旋转角度为0度-60度。
    658          转向60度，PWM相差？因为按现在的速度设定和30的P,转向77度有5500的PWM差。
    659          */
    660          //输入：无
    661          //输出：无
    662          //功能:小车差速调节
    663          //原理：阿克曼角
    664          //公式:V_left=V*(k-B*tanα/2L);V_right=V*(k+B*tanα/2L);
    665          //α为舵机打角值，B为后轮间距，L为前后轮间距，V = Speed_Set
    666          //a为差速系数，增加p可以增大差速,s提前
    667          //   Direction_Control_Output_L= P_Direction * speed_set_L;  
    668          //   Direction_Control_Output_R= P_Direction * speed_set_R;
    669             
    670          // DIF_INTENSITY = 11; //差速强度    增大此数，差速越明显，当速度增大以后，此值应该减小  
    671          //  uint32 temp1 = Speed_Set_Temp * DIF_P/100;
    672          //  int32 temp2 = Speed_Set_Temp*angle*angle/DIF_INTENSITY;
    673          //  if(angle<0) temp2 = -temp2;  
    674          //  Speed_Set_L = temp1 +  temp2;
    675          //  Speed_Set_R = temp1 -  temp2;
    676          //  float temp=Speed_Set_Temp*DIF_INTENSITY*tan((double)(angle*0.01745))/10;
    677          //  float temp2 = Speed_Set_Temp*DIF_P;     //提前量，越大，越提前
    678          //  Speed_Set_L=(uint32)(temp2+temp);
    679          //  Speed_Set_R=(uint32)(temp2-temp);
    680          

   \                                 In section .bss, align 1
    681          uint8 Direction_Control_Period = 0;
   \                     Direction_Control_Period:
   \   00000000                      DS8 1
    682          #define DIRECTION_CONTROL_PERIOD 50
    683          

   \                                 In section .data, align 4
    684          float P_Direction1=40,D_Direction1=20.5;		//低速
   \                     P_Direction1:
   \   00000000   0x42200000         DC32 42200000H

   \                                 In section .data, align 4
   \                     D_Direction1:
   \   00000000   0x41A40000         DC32 41A40000H

   \                                 In section .data, align 4
    685          float P_Direction2=40,D_Direction2=20.5;		//中速
   \                     P_Direction2:
   \   00000000   0x42200000         DC32 42200000H

   \                                 In section .data, align 4
   \                     D_Direction2:
   \   00000000   0x41A40000         DC32 41A40000H

   \                                 In section .data, align 4
    686          float P_Direction3=173,D_Direction3=145.5;		//快速
   \                     P_Direction3:
   \   00000000   0x432D0000         DC32 432D0000H

   \                                 In section .data, align 4
   \                     D_Direction3:
   \   00000000   0x43118000         DC32 43118000H
    687          

   \                                 In section .data, align 4
    688          float P_Direction = 100,D_Direction = 0;              
   \                     P_Direction:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .bss, align 4
   \                     D_Direction:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    689          float turn_spd = 150;
   \                     turn_spd:
   \   00000000   0x43160000         DC32 43160000H

   \                                 In section .data, align 4
    690          float P_Direction_high = 80, P_Direction_low=80;//26
   \                     P_Direction_high:
   \   00000000   0x42A00000         DC32 42A00000H

   \                                 In section .data, align 4
   \                     P_Direction_low:
   \   00000000   0x42A00000         DC32 42A00000H
    691          //float   K =1;

   \                                 In section .bss, align 4
    692          float Direction_Control = 0.0, Direction_Control_Last = 0.0,Direction_Control_Err=0.0;
   \                     Direction_Control:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Direction_Control_Last:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Direction_Control_Err:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    693          float Direction_angle=0.0;
   \                     Direction_angle:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    694          float P_Dir_agl=20.0;
   \                     P_Dir_agl:
   \   00000000   0x41A00000         DC32 41A00000H

   \                                 In section .bss, align 4
    695          float Road_Err_D=0;		//偏差的微分
   \                     Road_Err_D:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x42480000         DC32     0x42480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     speed_buzzer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x........         DC32     speed_car

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_6:
   \   00000000   0x........         DC32     Direction_P2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_7:
   \   00000000   0x........         DC32     Direction_P2_Temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_8:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_9:
   \   00000000   0x........         DC32     Angle_P_Temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_10:
   \   00000000   0x42200000         DC32     0x42200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_11:
   \   00000000   0x........         DC32     Angle_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_12:
   \   00000000   0x........         DC32     gyr_angle_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_13:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Direction_D2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     Chazhi_Rate

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     Angle_D_Temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     Direction_Control_Output_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     Direction_Control_Output_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x40564000         DC32     0x40564000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     angle_limit

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     StraightRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     speed_set_temp_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     speed_set_temp_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     Direction_P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     Direction_P_Temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x........         DC32     WindingRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     speed_set_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     k

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Chasu_Bili

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     `B`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0xAD42C3CA         DC32     0xAD42C3CA,0x3F91DE69
   \              0x3F91DE69   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x........         DC32     L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x........         DC32     speed_set_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x45FA0000         DC32     0x45fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0xC5FA0000         DC32     0xc5fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     StraightRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     speed_set_temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     speed_car

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x42480001         DC32     0x42480001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x45DAC000         DC32     0x45dac000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     Speed_PWM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x42200001         DC32     0x42200001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x459C4000         DC32     0x459c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x41F00001         DC32     0x41f00001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x457A0000         DC32     0x457a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x41A00001         DC32     0x41a00001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x453B8000         DC32     0x453b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x42480000         DC32     0x42480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0xC19FFFFF         DC32     0xc19fffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0x43480000         DC32     0x43480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0xC1EFFFFF         DC32     0xc1efffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0xC5BB8000         DC32     0xc5bb8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0xC21FFFFF         DC32     0xc21fffff

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0xC5DAC000         DC32     0xc5dac000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x........         DC32     speed_set_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x........         DC32     Speed_Error_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x........         DC32     speed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x........         DC32     Speed_Error_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0x........         DC32     Direction_P_Temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x........         DC32     Speed_I_lntegral_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \   00000000   0x........         DC32     Direction_D

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_33:
   \   00000000   0x........         DC32     Control_Output_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_34:
   \   00000000   0x........         DC32     Speed_I_lntegral_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_35:
   \   00000000   0x........         DC32     Control_Output_R
    696          
    697          //void Direction_Controler(void)
    698          //{
    699          //  float road_err_D_Tmp;
    700          //  static float Chazhi_last;
    701          //  
    702          //  road_err_D_Tmp = Chazhi - Chazhi_last;
    703          //  Road_Err_D = (1-K)*Road_Err_D + K*road_err_D_Tmp;
    704          //  
    705          //  if( speed_car>turn_spd )     P_Direction = P_Direction_high;
    706          //  else                         P_Direction = P_Direction_low;
    707          //  
    708          //  Direction_Control_Output=( P_Direction * Chazhi)  + D_Direction*Road_Err_D;
    709          //  Chazhi_last = Chazhi;
    710          //
    711          //
    712          //}
    713          
    714          //void Direction_Controler(void)
    715          //{
    716          //    double road_err_D_Tmp = 0.0;	//偏差微分中间变量
    717          //
    718          //    //一阶滤波
    719          //    road_err_D_Tmp = Road_Err[9]- Road_Err[6];
    720          //    Road_Err_D = (1-K)*Road_Err_D + K*road_err_D_Tmp;
    721          //
    722          //    if( speed_car>turn_spd )     P_Direction = P_Direction_high;
    723          //    else                         P_Direction = P_Direction_low;
    724          //
    725          //    Direction_angle = (gyro_y - gyr_offset_y) * gyr_ratio;		//转角
    726          //    Direction_Control_Output = P_Direction * Road_Err[9] + D_Direction*Road_Err_D + Direction_angle*P_Dir_agl;
    727          //
    728          //#if 0
    729          //    //周期性控制方向
    730          //    Direction_Control_Period++;
    731          //    //---------------------------------------------------------------------------------------------------------------------
    732          //    if (Direction_Control_Period>=DIRECTION_CONTROL_PERIOD)
    733          //    {
    734          //        Direction_Control_Period = 0;
    735          //        Direction_Control_Last = Direction_Control;
    736          //        //一阶滤波
    737          //        road_err_D_Tmp = Road_Err[9]- Road_Err[0];
    738          //        Road_Err_D = (1-K)*Road_Err_D + K*road_err_D_Tmp;
    739          //
    740          //        Direction_angle = (gyro_y - gyr_offset_y) * gyr_ratio;		//转角
    741          //
    742          //        Direction_Control = P_Direction * Road_Err[9] + D_Direction*Road_Err_D + Direction_angle*P_Dir_agl;
    743          //        Direction_Control_Err = Direction_Control - Direction_Control_Last;
    744          //    }
    745          //    //---------------------------------------------------------------------------------------------------------------------
    746          //
    747          //    Direction_Control_Output = Direction_Control_Last + Direction_Control_Err*(Direction_Control_Period+1)/DIRECTION_CONTROL_PERIOD ;
    748          //#endif
    749          //}
    750          //
    751          //*/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   BangBang
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
        16 __aeabi_cfcmple
        16 __aeabi_cfrcmple
      16   Controler
        16   -> __aeabi_fadd
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
      32   Direction_ChaSpeed_Control
        32   -> __aeabi_d2f
        32   -> __aeabi_dadd
        32   -> __aeabi_ddiv
        32   -> __aeabi_dmul
        32   -> __aeabi_dsub
        32   -> __aeabi_f2d
        32   -> __aeabi_fadd
        32   -> __aeabi_fmul
        32   -> __aeabi_i2f
        32   -> tan
        32 __aeabi_cdcmple
      24   Direction_Controler
        24   -> __aeabi_fadd
        24   -> __aeabi_fdiv
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> abs_f
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_10
       4  ??DataTable0_11
       4  ??DataTable0_12
       4  ??DataTable0_13
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable0_6
       4  ??DataTable0_7
       4  ??DataTable0_8
       4  ??DataTable0_9
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       8  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_33
       4  ??DataTable3_34
       4  ??DataTable3_35
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      12  Accum_Error_L
      12  Accum_Error_R
       4  Angle_D
       4  Angle_D_Chazhi
       4  Angle_D_Speed
       4  Angle_D_Temp
       4  Angle_P
       4  Angle_P_Temp
       4  Angle_P_choose
       4  Angle_Weight
       4  B
     252  BangBang
       4  Chasu_Bili
       4  Chasu_Bili_Temp
       4  Chazhi_Bili
       4  Chazhi_Bili_Temp
      12  Chazhi_Error_L
      12  Chazhi_Error_R
       4  Chazhi_Temp
       4  Chazhi_limit
       4  Chazhi_point
       4  Control_Output_L
       4  Control_Output_R
     144  Controler
       4  D_Direction
       4  D_Direction1
       4  D_Direction2
       4  D_Direction3
     494  Direction_ChaSpeed_Control
       4  Direction_Control
       4  Direction_Control_Err
       4  Direction_Control_Last
       4  Direction_Control_Output_L
       4  Direction_Control_Output_R
       1  Direction_Control_Period
     422  Direction_Controler
       4  Direction_D
       4  Direction_D2
       4  Direction_I
       4  Direction_I2
       4  Direction_P
       4  Direction_P2
       4  Direction_P2_Chazhi
       4  Direction_P2_Speed
       4  Direction_P2_Temp
       4  Direction_P_Temp
       4  Direction_Weight
       4  Direction_angle
       4  L
       4  P_Dir_agl
       4  P_Direction
       4  P_Direction1
       4  P_Direction2
       4  P_Direction3
       4  P_Direction_high
       4  P_Direction_low
       1  Piaoyi_L
       1  Piaoyi_R
       4  Road_Err_D
       4  Speed_Bili
       4  Speed_Bili_Temp
       4  Speed_D
       4  Speed_I
       4  Speed_I_D_Temp
       4  Speed_I_lntegral_L
       4  Speed_I_lntegral_Max
       4  Speed_I_lntegral_R
       4  Speed_P
       4  Speed_PWM
       4  Sum_Error_L
       4  Sum_Error_R
       4  X
       4  angle
       4  angle_2
       4  angle_P
       8  angle_limit
       8  angle_limit_2
       4  change_bili_F
       4  change_bili_Z
       4  change_factor
       4  change_value
       4  change_variable
       4  k
       4  k3
       4  k4
       4  speed_dead_F
       4  speed_point
       4  speed_set
       4  speed_temp1
       4  speed_temp2
       4  t
       4  turn_spd

 
   227 bytes in section .bss
   156 bytes in section .data
 1 604 bytes in section .text
 
 1 604 bytes of CODE memory
   383 bytes of DATA memory

Errors: none
Warnings: 17
