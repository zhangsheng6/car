###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        17/Jul/2018  09:40:38
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\电磁三轮――ZS\7.17\lib\C\KEA128_irq.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\lib\C\KEA128_irq.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config H:\IAR7.3\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\coreSupport\ -Ol
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\KEA128_irq.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\KEA128_irq.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\7.17\lib\C\KEA128_irq.c
      1          /*********************************************************************************************************************
      2           * COPYRIGHT NOTICE
      3           * Copyright (c) 2017,逐飞科技
      4           * All rights reserved.
      5           * 技术讨论QQ群：179029047
      6           *
      7           * 以下所有内容版权均属逐飞科技所有，未经允许不得用于商业用途，
      8           * 欢迎各位使用并传播本程序，修改内容时必须保留逐飞科技的版权声明。
      9           *
     10           * @file       		KEA128_irq
     11           * @company	   		成都逐飞科技有限公司
     12           * @author     		逐飞科技(QQ3184284598)
     13           * @version    		v2.0
     14           * @Software 		IAR 7.7 or MDK 5.23
     15           * @Target core		S9KEA128AMLK
     16           * @Taobao   		https://seekfree.taobao.com/
     17           * @date       		2017-11-6
     18           ********************************************************************************************************************/
     19          
     20          
     21          
     22          #include "KEA128_irq.h"
     23          
     24          
     25          //-------------------------------------------------------------------------------------------------------------------
     26          //  @brief      外部中断
     27          //  @param      void            
     28          //  @return     void
     29          //  @since      v2.0
     30          //  Sample usage:               irq_init();
     31          //								set_irq_priority(IRQ_IRQn,1);					//设置优先级,根据自己的需求设置 可设置范围为 0 - 3
     32          //								enable_irq(IRQ_IRQn);							//打开pit0的中断开关
     33          //								EnableInterrupts;								//打开总的中断开关  
     34          //  @note                       在KEA128_port_cfg文件切换引脚，irq同一时刻只能对一个引脚进行检测
     35          //                              进入中断函数后务必使用CLEAR_IRQ_FLAG宏定义清除中断标志位
     36          //-------------------------------------------------------------------------------------------------------------------
     37          

   \                                 In section .text, align 4, keep-with-next
     38          void irq_init(void)
     39          {
     40              uint8 ptn;
     41              uint32 temp;
     42          
     43              if(A5 == IRQ_PIN)
     44              {
     45                  temp = SIM->PINSEL;
     46                  temp &= ~((uint32)SIM_PINSEL_IRQPS_MASK);
     47                  SIM->PINSEL = temp | SIM_PINSEL_IRQPS(0);
     48              }
     49              else
     50              {
     51                  ptn = PTn(IRQ_PIN);//获取引脚号
   \                     irq_init: (+1)
   \   00000000   0x2005             MOVS     R0,#+5
     52                  
     53                  temp = SIM->PINSEL;
   \   00000002   0x490B             LDR      R1,??irq_init_0  ;; 0x4004800c
   \   00000004   0x6809             LDR      R1,[R1, #+0]
     54                   temp &= ~((uint32)SIM_PINSEL_IRQPS_MASK);
   \   00000006   0x2207             MOVS     R2,#+7
   \   00000008   0x4391             BICS     R1,R1,R2
     55                   SIM->PINSEL = temp | SIM_PINSEL_IRQPS(ptn+1);
   \   0000000A   0xB2C0             UXTB     R0,R0
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
   \   0000000E   0x0740             LSLS     R0,R0,#+29       ;; ZeroExtS R0,R0,#+29,#+29
   \   00000010   0x0F40             LSRS     R0,R0,#+29
   \   00000012   0x4308             ORRS     R0,R0,R1
   \   00000014   0x4906             LDR      R1,??irq_init_0  ;; 0x4004800c
   \   00000016   0x6008             STR      R0,[R1, #+0]
     56              }
     57              
     58              SIM->SCGC |= SIM_SCGC_IRQ_MASK;     //开启IRQ时钟
   \   00000018   0x4806             LDR      R0,??irq_init_0+0x4  ;; 0x40048014
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x2180             MOVS     R1,#+128
   \   0000001E   0x0509             LSLS     R1,R1,#+20       ;; #+134217728
   \   00000020   0x4301             ORRS     R1,R1,R0
   \   00000022   0x4804             LDR      R0,??irq_init_0+0x4  ;; 0x40048014
   \   00000024   0x6001             STR      R1,[R0, #+0]
     59              temp = (0
     60                      //| IRQ_SC_IRQPDD_MASK      //1：禁用上拉电阻 0：使能上拉电阻  注释代表0
     61                      | IRQ_SC_IRQEDG_MASK        //1：上升沿或者高电平触发 0：下降沿或者低电平触发   注释代表0
     62                      | IRQ_SC_IRQPE_MASK         //使能IRQ
     63                      | IRQ_SC_IRQIE_MASK         //开启中断
     64                      //| IRQ_SC_IRQMOD_MASK      //1：检测边沿与电平触发  0：只检测边沿触发  注释代表0
     65                      );
   \   00000026   0x2132             MOVS     R1,#+50
     66              IRQ->SC = temp;
   \   00000028   0x4803             LDR      R0,??irq_init_0+0x8  ;; 0x40031000
   \   0000002A   0x7001             STRB     R1,[R0, #+0]
     67              
     68          }
   \   0000002C   0x4770             BX       LR               ;; return
   \   0000002E   0xBF00             Nop      
   \                     ??irq_init_0:
   \   00000030   0x4004800C         DC32     0x4004800c
   \   00000034   0x40048014         DC32     0x40048014
   \   00000038   0x40031000         DC32     0x40031000
     69          
     70          
     71          
     72          
     73          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   irq_init


   Section sizes:

   Bytes  Function/Label
   -----  --------------
      60  irq_init

 
 60 bytes in section .text
 
 60 bytes of CODE memory

Errors: none
Warnings: none
