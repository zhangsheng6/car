###############################################################################
#
# IAR ANSI C/C++ Compiler V7.30.3.8024/W32 for ARM        17/Jul/2018  09:40:45
# Copyright 1999-2014 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\SDSB_ZS.c
#    Command line =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\SDSB_ZS.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -lB
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\ -o
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config H:\IAR7.3\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\device\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\user\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\lib\H\ -I
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\..\system\coreSupport\ -Ol
#    List file    =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\List\SDSB_ZS.lst
#    Object file  =  
#        H:\智能车程序2018\电磁三轮――ZS\7.17\iar\KEA_128_RAM\Obj\SDSB_ZS.o
#
###############################################################################

H:\智能车程序2018\电磁三轮――ZS\7.17\user\C\SDSB_ZS.c
      1          #include "Variable.h"
      2          #include "common.h"
      3          #include "allHead.h"
      4          #include "SDSB_ZS.h"
      5          /******************电感分析变量******************************************************************************/

   \                                 In section .data, align 4
      6          float  max_v[5] = {2000,2000,2000,2000,2000};
   \                     max_v:
   \   00000000   0x44FA0000         DC32 44FA0000H, 44FA0000H, 44FA0000H, 44FA0000H, 44FA0000H
   \              0x44FA0000   
   \              0x44FA0000   
   \              0x44FA0000   
   \              0x44FA0000   

   \                                 In section .data, align 4
      7          float  min_v[5] = {47,47,47,47,47};  //电感标定 采集值      ？？？？待测？？？？
   \                     min_v:
   \   00000000   0x423C0000         DC32 423C0000H, 423C0000H, 423C0000H, 423C0000H, 423C0000H
   \              0x423C0000   
   \              0x423C0000   
   \              0x423C0000   
   \              0x423C0000   

   \                                 In section .data, align 4
      8          int   Position_transit[4] = {30,30} ;  //记录过渡点归一化的值  ???待测？？？？32,38
   \                     Position_transit:
   \   00000000   0x0000001E         DC32 30, 30, 0, 0
   \              0x0000001E   
   \              0x00000000   
   \              0x00000000   
      9          //速度设定30:过渡点：0，,0；之前是36.因为按照现在的k1=1.5，差值是50的时候就达
     10          //到最大偏转角度，还没到标准过渡点就已最大偏转角度
     11          

   \                                 In section .bss, align 4
     12          float Chazhi_Chucun[20]={0},Chazhi_Old=0,Rate_Count=0,Rate_Flag=0;
   \                     Chazhi_Chucun:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     Chazhi_Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Rate_Count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Rate_Flag:
   \   00000000                      DS8 4
     13          
     14          
     15          /******************电感分析变量2******************************************************************************/

   \                                 In section .bss, align 4
     16          int16 ad_valu[5][5];
   \                     ad_valu:
   \   00000000                      DS8 52

   \                                 In section .data, align 1
     17          char position=1;
   \                     position:
   \   00000000   0x01               DC8 1
     18          #define NM   3

   \                                 In section .bss, align 4
     19          int AD_valu[5],AD_V[5][NM],chazhi_old,RefAd=20, Add_AD_value = 20;
   \                     AD_valu:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \                     AD_V:
   \   00000000                      DS8 60

   \                                 In section .bss, align 4
   \                     chazhi_old:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     RefAd:
   \   00000000   0x00000014         DC32 20

   \                                 In section .data, align 4
   \                     Add_AD_value:
   \   00000000   0x00000014         DC32 20

   \                                 In section .bss, align 4
     20          float  Chazhi,Chazhi_Last,Chazhi_Max=60,Chazhi_Min=-60,Chazhi_Max_New=100;//此为1,2位置的最大差值
   \                     Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Chazhi_Last:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     Chazhi_Max:
   \   00000000   0x42700000         DC32 42700000H

   \                                 In section .data, align 4
   \                     Chazhi_Min:
   \   00000000   0xC2700000         DC32 0C2700000H

   \                                 In section .data, align 4
   \                     Chazhi_Max_New:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .bss, align 4
     21          float  AD_inductor_Last[5]={0};
   \                     AD_inductor_Last:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     22          float  AD_inductor[5],sensor_to_one[5],AD_inductor_Huan,sensor_to_one_Huan;
   \                     AD_inductor:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \                     sensor_to_one:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \                     AD_inductor_Huan:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     sensor_to_one_Huan:
   \   00000000                      DS8 4
     23          

   \                                 In section .bss, align 4
     24          float  Slope_AD_1;  // 用于坡道检测
   \                     Slope_AD_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     25          int  AD_sum[5];
   \                     AD_sum:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     26          int  AD_MAX_NUM;   
   \                     AD_MAX_NUM:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     27          int  position_back = 1;
   \                     position_back:
   \   00000000   0x00000001         DC32 1

   \                                 In section .bss, align 4
     28          float  max_value,AD_0_max,AD_1_max,AD_2_max,AD_3_max;
   \                     max_value:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_0_max:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_1_max:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_2_max:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_3_max:
   \   00000000                      DS8 4
     29          /*------------------------------------------------------------------------------------------*/
     30          /**************判断道路信息变量1****************************************************************/

   \                                 In section .bss, align 4
     31          int StraightRoad=0,StraightRoad2=0,StraightRoad_Old=0;//小车直走次数
   \                     StraightRoad:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     StraightRoad2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     StraightRoad_Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     32          int WindingRoad_Left = 0,WindingRoad_Right = 0,WindingRoad=0;//小车左转,右转次数
   \                     WindingRoad_Left:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad_Right:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad:
   \   00000000                      DS8 4
     33          
     34          

   \                                 In section .bss, align 4
     35          float Road_Remember[P]={0};//差值储存，用于判断道路信息
   \                     Road_Remember:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
     36          int StraightRoad_Flag = 0;//直道标志
   \                     StraightRoad_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     37          int WindingRoad_Left_Flag = 0,WindingRoad_Right_Flag = 0,WindingRoad_Flag=0;//左转,右转标志 
   \                     WindingRoad_Left_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad_Right_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad_Flag:
   \   00000000                      DS8 4
     38          /*             判断道路信息变量2                   */
     39          //Road_Remember2[M]:[]里面的数越大，值的状态越新

   \                                 In section .bss, align 4
     40          float Road_Remember2[M]={0},//差值储存，用于判断道路信息
   \                     Road_Remember2:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
     41                Abs_sum_Chazhi=0,//50个差值的绝对值总和
   \                     Abs_sum_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     42                Alg_sum_Chazhi=0,//50个差值的代数总和
   \                     Alg_sum_Chazhi:
   \   00000000                      DS8 4
     43                

   \                                 In section .bss, align 4
     44                Abs_new_Chazhi=0,//最新20个差值的绝对值和，用于检测进弯
   \                     Abs_new_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     45                Alg_new_Chazhi=0,//最新20个差值的代数和
   \                     Alg_new_Chazhi:
   \   00000000                      DS8 4
     46                

   \                                 In section .bss, align 4
     47                Abs_old_Chazhi=0,
   \                     Abs_old_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     48                Alg_old_Chazhi=0; 
   \                     Alg_old_Chazhi:
   \   00000000                      DS8 4
     49          /*******************END*************************************************************************************/
     50          
     51          /*              左电感       中电感     右电感  
     52          平时直道         35           90          35
     53          初环岛切线       45           100         62  
     54                           49          100          75
     55          两条电磁线       80           100         92
     56          电感到达进环岛   74           100         98    
     57          前轮到达进环岛   48           100          
     58          */
     59          
     60          /******************环岛变量*************************************************/
     61          
     62          
     63          /******************环岛变量2*************************************************/
     64          //  100,0.5s  
     65          
     66          int 
     67          

   \                                 In section .bss, align 4
     68              Circle_Flag=0,//  圆环进入标志，=1圆环双线识别结束，=2识别到转弯时刻
   \                     Circle_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     69              Circle_L_Flag,Circle_R_Flag,//圆环左/右转标志
   \                     Circle_L_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Circle_R_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     70              Circle_Turn_Old_Flag=0,
   \                     Circle_Turn_Old_Flag:
   \   00000000                      DS8 4
     71          

   \                                 In section .bss, align 4
     72              Circle_Count=0,//  进入圆环双线计数
   \                     Circle_Count:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     73              Circle_Count_Max=20,//30,0.25s， 圆环双线计数最大值  
   \                     Circle_Count_Max:
   \   00000000   0x00000014         DC32 20

   \                                 In section .bss, align 4
     74              Circle_Count2=0,// 出圆环双线转弯前计数
   \                     Circle_Count2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     75              Circle_Count2_Max=2,//30,0.25s， 圆环双线计数最大值
   \                     Circle_Count2_Max:
   \   00000000   0x00000002         DC32 2

   \                                 In section .bss, align 4
     76              Circle_Count3=0,//圆环转弯时刻计数
   \                     Circle_Count3:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     77              Circle_Count3_Max=2,//圆环转弯时刻计数最大值
   \                     Circle_Count3_Max:
   \   00000000   0x00000002         DC32 2

   \                                 In section .bss, align 4
     78              Circle_Count4=0,//圆环转弯时刻计数
   \                     Circle_Count4:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     79              Circle_Count4_Max=20,//圆环转弯时刻计数最大值 
   \                     Circle_Count4_Max:
   \   00000000   0x00000014         DC32 20

   \                                 In section .bss, align 4
     80              Circle_Count5=0,//出环双线计数
   \                     Circle_Count5:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     81              Circle_Count5_Max=2,//出环双线计数最大值
   \                     Circle_Count5_Max:
   \   00000000   0x00000002         DC32 2

   \                                 In section .bss, align 4
     82              Circle_Count6=0,//出环后直道计数
   \                     Circle_Count6:
   \   00000000                      DS8 4
     83              
     84              

   \                                 In section .bss, align 4
     85              Circle_Count_Out_Flag=0,
   \                     Circle_Count_Out_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     86              Circle_Count_Out=0,//避免进环迟后,圆环强制转弯结束后保护时间，避免出赛道
   \                     Circle_Count_Out:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     87              Circle_Count_Out_Max=400,//800，2s
   \                     Circle_Count_Out_Max:
   \   00000000   0x00000190         DC32 400
     88          

   \                                 In section .bss, align 4
     89              Circle_L_Count=0,Circle_R_Count=0,//圆环左/右转计数 
   \                     Circle_L_Count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Circle_R_Count:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     90              Circle_Turn_Count=20,//圆环左/右转计数最大值20
   \                     Circle_Turn_Count:
   \   00000000   0x00000014         DC32 20

   \                                 In section .data, align 4
     91              Circle_Turn_Count2=5,//圆环左/右转计数最大值20
   \                     Circle_Turn_Count2:
   \   00000000   0x00000005         DC32 5

   \                                 In section .bss, align 4
     92              Circle_Error_Count=0,
   \                     Circle_Error_Count:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     93              Circle_Error_Count_Max=10000,
   \                     Circle_Error_Count_Max:
   \   00000000   0x00002710         DC32 10000

   \                                 In section .bss, align 4
     94              Circle_Error_Flag=0,
   \                     Circle_Error_Flag:
   \   00000000                      DS8 4
     95              

   \                                 In section .bss, align 4
     96              Circle_L_Finish_Count=0,Circle_R_Finish_Count=0,// 圆环左/右转结束计数
   \                     Circle_L_Finish_Count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Circle_R_Finish_Count:
   \   00000000                      DS8 4
     97          //速度100   结束计数100
     98          //速度110   结束计数300   差值79
     99          //速度120   结束计数500   差值100

   \                                 In section .data, align 4
    100              Circle_Finish_Count_Max=300;//400:1s,// 圆环左/右转结束计数最大值
   \                     Circle_Finish_Count_Max:
   \   00000000   0x0000012C         DC32 300
    101          
    102          //        进入圆环双线中电感值   转弯时刻中电感值      转弯计数累加左右电感值：进双线      出双线
    103          float  

   \                                 In section .data, align 4
    104                  Circle_Inductor_value2=172,//圆环开始转弯计数值 3550，3500
   \                     Circle_Inductor_value2:
   \   00000000   0x432C0000         DC32 432C0000H

   \                                 In section .data, align 4
    105                  Circle_Inductor_value3=150,//不用了,圆环强制转弯值
   \                     Circle_Inductor_value3:
   \   00000000   0x43160000         DC32 43160000H

   \                                 In section .data, align 4
    106                  Circle_Inductor_value4=100,//圆环行驶值
   \                     Circle_Inductor_value4:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .data, align 4
    107                  Circle_Inductor_value5=160,//出圆环双线值
   \                     Circle_Inductor_value5:
   \   00000000   0x43200000         DC32 43200000H

   \                                 In section .data, align 4
    108                  Circle_Inductor_value6=100,//出圆环进入单线值，解除本次圆环，进入下次圆环状态
   \                     Circle_Inductor_value6:
   \   00000000   0x42C80000         DC32 42C80000H
    109                 

   \                                 In section .bss, align 4
    110                  Circle_Turn_Again_Counter=0,//防止再次进弯计数
   \                     Circle_Turn_Again_Counter:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    111                  Circle_Turn_Again_Counter_Max=400,//1s防止再次进弯计数最大值
   \                     Circle_Turn_Again_Counter_Max:
   \   00000000   0x43C80000         DC32 43C80000H

   \                                 In section .data, align 4
    112                  Circle_Turn_Again_Prevent_Flag=1,//防止再次进弯标志
   \                     Circle_Turn_Again_Prevent_Flag:
   \   00000000   0x3F800000         DC32 3F800000H
    113                  
    114                  

   \                                 In section .data, align 4
    115                  AD_inductor_Shuzhi_Max=40,AD_inductor_Shuzhi_Min=1,
   \                     AD_inductor_Shuzhi_Max:
   \   00000000   0x42200000         DC32 42200000H

   \                                 In section .data, align 4
   \                     AD_inductor_Shuzhi_Min:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .data, align 4
    116                 Circle_inductor_Max=165,Circle_inductor_Max2=175,//190
   \                     Circle_inductor_Max:
   \   00000000   0x43250000         DC32 43250000H

   \                                 In section .data, align 4
   \                     Circle_inductor_Max2:
   \   00000000   0x432F0000         DC32 432F0000H

   \                                 In section .data, align 4
    117                  Circle_inductor_Mid=150, Circle_inductor_Mid2=170,
   \                     Circle_inductor_Mid:
   \   00000000   0x43160000         DC32 43160000H

   \                                 In section .data, align 4
   \                     Circle_inductor_Mid2:
   \   00000000   0x432A0000         DC32 432A0000H

   \                                 In section .data, align 4
    118                  Circle_inductor_Min=105,Circle_inductor_Min2=120;
   \                     Circle_inductor_Min:
   \   00000000   0x42D20000         DC32 42D20000H

   \                                 In section .data, align 4
   \                     Circle_inductor_Min2:
   \   00000000   0x42F00000         DC32 42F00000H
    119          

   \                                 In section .bss, align 4
    120            float AD_hall,Stop_Plan_Flag=0,Stop_OK=0,Stop_Flag=0;
   \                     AD_hall:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Stop_Plan_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Stop_OK:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Stop_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    121            int Stop_ms=0;
   \                     Stop_ms:
   \   00000000                      DS8 4
    122            

   \                                 In section .text, align 2, keep-with-next
    123          void Hall(void)
    124          {
   \                     Hall: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    125              AD_hall = ADC_Once(ADC_6,adc12bit);  //中2 通道
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x202E             MOVS     R0,#+46
   \   00000006   0x.... 0x....      BL       ADC_Once
   \   0000000A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000000E   0x....             LDR      R1,??DataTable0
   \   00000010   0x6008             STR      R0,[R1, #+0]
    126              if(Stop_Plan_Flag==0)
   \   00000012   0x....             LDR      R0,??DataTable0_1
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000001C   0xD109             BNE      ??Hall_0
    127              {
    128                 if(AD_hall<2500) 
   \   0000001E   0x....             LDR      R0,??DataTable0
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x....             LDR      R1,??DataTable0_2  ;; 0x451c4000
   \   00000024   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000028   0xD203             BCS      ??Hall_0
    129                 {
    130                     Stop_Plan_Flag=1;
   \   0000002A   0x20FE             MOVS     R0,#+254
   \   0000002C   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   0000002E   0x....             LDR      R1,??DataTable0_1
   \   00000030   0x6008             STR      R0,[R1, #+0]
    131                 }
    132              }
    133              if(Stop_Plan_Flag==1)
   \                     ??Hall_0: (+1)
   \   00000032   0x....             LDR      R0,??DataTable0_1
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x21FE             MOVS     R1,#+254
   \   00000038   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   0000003A   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000003E   0xD10D             BNE      ??Hall_1
    134              {
    135                 Stop_ms++;
   \   00000040   0x....             LDR      R0,??DataTable0_3
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x1C40             ADDS     R0,R0,#+1
   \   00000046   0x....             LDR      R1,??DataTable0_3
   \   00000048   0x6008             STR      R0,[R1, #+0]
    136                 if(Stop_ms>10000)
   \   0000004A   0x....             LDR      R0,??DataTable0_3
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x....             LDR      R1,??DataTable0_4  ;; 0x2711
   \   00000050   0x4288             CMP      R0,R1
   \   00000052   0xDB03             BLT      ??Hall_1
    137                   Stop_OK=1;       
   \   00000054   0x20FE             MOVS     R0,#+254
   \   00000056   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000058   0x....             LDR      R1,??DataTable0_5
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    138              }
    139              
    140              if(Stop_OK==1)
   \                     ??Hall_1: (+1)
   \   0000005C   0x....             LDR      R0,??DataTable0_5
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x21FE             MOVS     R1,#+254
   \   00000062   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   00000064   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000068   0xD109             BNE      ??Hall_2
    141              {
    142                 if(AD_hall<2500) 
   \   0000006A   0x....             LDR      R0,??DataTable0
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x....             LDR      R1,??DataTable0_2  ;; 0x451c4000
   \   00000070   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000074   0xD203             BCS      ??Hall_2
    143                 {
    144                     Stop_Flag=1;
   \   00000076   0x20FE             MOVS     R0,#+254
   \   00000078   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   0000007A   0x....             LDR      R1,??DataTable1
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    145                 }  
    146              }
    147          
    148                     
    149          
    150          }
   \                     ??Hall_2: (+1)
   \   0000007E   0xBD01             POP      {R0,PC}          ;; return
    151          /******************环岛变量END*************************************************/
    152          /*
    153            快接近环岛，中电感大于130小于165，右电感为左电感2倍次数判断为转弯处方向
    154            一过切点，竖直电感便可以立即判断转弯方向可设置大于20，
    155              也可以不设置，此时有一个左右电感大于100，或接近，中电感180
    156          一过切点，左右竖直均可判断，左右差2倍，且一个大于100，竖直一个0.1一个上52
    157          */

   \                                 In section .data, align 4
    158          int     Circle_Count6_Max=5000;//强制打角结束后，下个环岛识别间隔时间
   \                     Circle_Count6_Max:
   \   00000000   0x00001388         DC32 5000

   \                                 In section .data, align 4
    159          float   Circle_Inductor_value1=178;//进圆环双线值
   \                     Circle_Inductor_value1:
   \   00000000   0x43320000         DC32 43320000H

   \                                 In section .text, align 2, keep-with-next
    160          void Test_Huandao()
    161          {
   \                     Test_Huandao: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    162          
    163          if(Circle_Flag==0)//处于检测圆环双线状态
   \   00000002   0x....             LDR      R0,??DataTable1_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD123             BNE      ??Test_Huandao_0
    164          { 
    165                if(AD_inductor[1]>Circle_Inductor_value1&&(AD_inductor[0]>50||AD_inductor[2]>50))//&&(AD_inductor[3]>30||AD_inductor[4]>30)
   \   0000000A   0x....             LDR      R0,??DataTable1_2
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x....             LDR      R1,??DataTable1_3
   \   00000010   0x6849             LDR      R1,[R1, #+4]
   \   00000012   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000016   0xD21C             BCS      ??Test_Huandao_0
   \   00000018   0x....             LDR      R0,??DataTable1_3
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x....             LDR      R1,??DataTable1_4  ;; 0x42480001
   \   0000001E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000022   0xD905             BLS      ??Test_Huandao_1
   \   00000024   0x....             LDR      R0,??DataTable1_3
   \   00000026   0x6880             LDR      R0,[R0, #+8]
   \   00000028   0x....             LDR      R1,??DataTable1_4  ;; 0x42480001
   \   0000002A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000002E   0xD810             BHI      ??Test_Huandao_0
    166                {
    167                    Circle_Count++;//环岛双线计数   
   \                     ??Test_Huandao_1: (+1)
   \   00000030   0x....             LDR      R0,??DataTable1_5
   \   00000032   0x6800             LDR      R0,[R0, #+0]
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \   00000036   0x....             LDR      R1,??DataTable1_5
   \   00000038   0x6008             STR      R0,[R1, #+0]
    168                    if(Circle_Count>Circle_Count_Max)
   \   0000003A   0x....             LDR      R0,??DataTable1_6
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x....             LDR      R1,??DataTable1_5
   \   00000040   0x6809             LDR      R1,[R1, #+0]
   \   00000042   0x4288             CMP      R0,R1
   \   00000044   0xDA05             BGE      ??Test_Huandao_0
    169                    {
    170                         Circle_Flag=2; //进入环岛双线
   \   00000046   0x2002             MOVS     R0,#+2
   \   00000048   0x....             LDR      R1,??DataTable1_1
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    171                         Circle_Count=0;
   \   0000004C   0x2000             MOVS     R0,#+0
   \   0000004E   0x....             LDR      R1,??DataTable1_5
   \   00000050   0x6008             STR      R0,[R1, #+0]
    172                    }
    173                }
    174          }
    175          
    176          
    177          if(Circle_Flag==2)//已经检测到离开圆环双线，开始转弯计数
   \                     ??Test_Huandao_0: (+1)
   \   00000052   0x....             LDR      R0,??DataTable1_1
   \   00000054   0x6800             LDR      R0,[R0, #+0]
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD158             BNE      ??Test_Huandao_2
    178          {
    179               if(AD_inductor[1]<175)
   \   0000005A   0x....             LDR      R0,??DataTable1_3
   \   0000005C   0x6840             LDR      R0,[R0, #+4]
   \   0000005E   0x....             LDR      R1,??DataTable1_7  ;; 0x432f0000
   \   00000060   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000064   0xD249             BCS      ??Test_Huandao_3
    180               {
    181                   
    182                 if(AD_inductor[3]>AD_inductor_Shuzhi_Max&&AD_inductor[4]<AD_inductor_Shuzhi_Min) //100       
   \   00000066   0x....             LDR      R0,??DataTable1_8
   \   00000068   0x6800             LDR      R0,[R0, #+0]
   \   0000006A   0x....             LDR      R1,??DataTable1_3
   \   0000006C   0x68C9             LDR      R1,[R1, #+12]
   \   0000006E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000072   0xD20B             BCS      ??Test_Huandao_4
   \   00000074   0x....             LDR      R0,??DataTable1_3
   \   00000076   0x6900             LDR      R0,[R0, #+16]
   \   00000078   0x....             LDR      R1,??DataTable1_9
   \   0000007A   0x6809             LDR      R1,[R1, #+0]
   \   0000007C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000080   0xD204             BCS      ??Test_Huandao_4
    183                   Circle_R_Count++; 
   \   00000082   0x....             LDR      R0,??DataTable1_10
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0x1C40             ADDS     R0,R0,#+1
   \   00000088   0x....             LDR      R1,??DataTable1_10
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    184               if(AD_inductor[4]>AD_inductor_Shuzhi_Max&&AD_inductor[3]<AD_inductor_Shuzhi_Min) //100       
   \                     ??Test_Huandao_4: (+1)
   \   0000008C   0x....             LDR      R0,??DataTable1_8
   \   0000008E   0x6800             LDR      R0,[R0, #+0]
   \   00000090   0x....             LDR      R1,??DataTable1_3
   \   00000092   0x6909             LDR      R1,[R1, #+16]
   \   00000094   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000098   0xD20B             BCS      ??Test_Huandao_5
   \   0000009A   0x....             LDR      R0,??DataTable1_3
   \   0000009C   0x68C0             LDR      R0,[R0, #+12]
   \   0000009E   0x....             LDR      R1,??DataTable1_9
   \   000000A0   0x6809             LDR      R1,[R1, #+0]
   \   000000A2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000A6   0xD204             BCS      ??Test_Huandao_5
    185                   Circle_L_Count++; 
   \   000000A8   0x....             LDR      R0,??DataTable1_11
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x1C40             ADDS     R0,R0,#+1
   \   000000AE   0x....             LDR      R1,??DataTable1_11
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    186                   
    187                 if(AD_inductor[3]>AD_inductor[4]&&AD_inductor[4]<20) //100       
   \                     ??Test_Huandao_5: (+1)
   \   000000B2   0x....             LDR      R0,??DataTable1_3
   \   000000B4   0x6900             LDR      R0,[R0, #+16]
   \   000000B6   0x....             LDR      R1,??DataTable1_3
   \   000000B8   0x68C9             LDR      R1,[R1, #+12]
   \   000000BA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BE   0xD20A             BCS      ??Test_Huandao_6
   \   000000C0   0x....             LDR      R0,??DataTable1_3
   \   000000C2   0x6900             LDR      R0,[R0, #+16]
   \   000000C4   0x....             LDR      R1,??DataTable1_12  ;; 0x41a00000
   \   000000C6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000CA   0xD204             BCS      ??Test_Huandao_6
    188                    Circle_R_Count++; 
   \   000000CC   0x....             LDR      R0,??DataTable1_10
   \   000000CE   0x6800             LDR      R0,[R0, #+0]
   \   000000D0   0x1C40             ADDS     R0,R0,#+1
   \   000000D2   0x....             LDR      R1,??DataTable1_10
   \   000000D4   0x6008             STR      R0,[R1, #+0]
    189                 if(AD_inductor[4]>AD_inductor[3]&&AD_inductor[3]<20) //100       
   \                     ??Test_Huandao_6: (+1)
   \   000000D6   0x....             LDR      R0,??DataTable1_3
   \   000000D8   0x68C0             LDR      R0,[R0, #+12]
   \   000000DA   0x....             LDR      R1,??DataTable1_3
   \   000000DC   0x6909             LDR      R1,[R1, #+16]
   \   000000DE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000E2   0xD20A             BCS      ??Test_Huandao_3
   \   000000E4   0x....             LDR      R0,??DataTable1_3
   \   000000E6   0x68C0             LDR      R0,[R0, #+12]
   \   000000E8   0x....             LDR      R1,??DataTable1_12  ;; 0x41a00000
   \   000000EA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000EE   0xD204             BCS      ??Test_Huandao_3
    190                    Circle_L_Count++;   
   \   000000F0   0x....             LDR      R0,??DataTable1_11
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x1C40             ADDS     R0,R0,#+1
   \   000000F6   0x....             LDR      R1,??DataTable1_11
   \   000000F8   0x6008             STR      R0,[R1, #+0]
    191               }      
    192          //同上解释，可通过计算速度时间路程来使用
    193                  if(AD_inductor[1]<160)//150转弯
   \                     ??Test_Huandao_3: (+1)
   \   000000FA   0x....             LDR      R0,??DataTable1_3
   \   000000FC   0x6840             LDR      R0,[R0, #+4]
   \   000000FE   0x....             LDR      R1,??DataTable1_13  ;; 0x43200000
   \   00000100   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000104   0xD202             BCS      ??Test_Huandao_2
    194                  {
    195          
    196                      Circle_Flag=3;//转弯识别结束该转弯了
   \   00000106   0x2003             MOVS     R0,#+3
   \   00000108   0x....             LDR      R1,??DataTable1_1
   \   0000010A   0x6008             STR      R0,[R1, #+0]
    197                   }
    198          }
    199            
    200            
    201          if(Circle_Flag==3)//开始转弯
   \                     ??Test_Huandao_2: (+1)
   \   0000010C   0x....             LDR      R0,??DataTable1_1
   \   0000010E   0x6800             LDR      R0,[R0, #+0]
   \   00000110   0x2803             CMP      R0,#+3
   \   00000112   0xD128             BNE      ??Test_Huandao_7
    202          {      
    203                if(Circle_Error_Flag==0)//防止左/右转后因为电感值变反而引发右/左转，
   \   00000114   0x....             LDR      R0,??DataTable1_14
   \   00000116   0x6800             LDR      R0,[R0, #+0]
   \   00000118   0x2800             CMP      R0,#+0
   \   0000011A   0xD124             BNE      ??Test_Huandao_7
    204                {
    205                   if(Circle_L_Count>Circle_R_Count)
   \   0000011C   0x....             LDR      R0,??DataTable1_10
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0x....             LDR      R1,??DataTable1_11
   \   00000122   0x6809             LDR      R1,[R1, #+0]
   \   00000124   0x4288             CMP      R0,R1
   \   00000126   0xDA0F             BGE      ??Test_Huandao_8
    206                   {
    207                    Circle_L_Count=0;
   \   00000128   0x2000             MOVS     R0,#+0
   \   0000012A   0x....             LDR      R1,??DataTable1_11
   \   0000012C   0x6008             STR      R0,[R1, #+0]
    208                    Circle_R_Count=0;
   \   0000012E   0x2000             MOVS     R0,#+0
   \   00000130   0x....             LDR      R1,??DataTable1_10
   \   00000132   0x6008             STR      R0,[R1, #+0]
    209                    
    210                     Circle_L_Flag=1;
   \   00000134   0x2001             MOVS     R0,#+1
   \   00000136   0x....             LDR      R1,??DataTable1_15
   \   00000138   0x6008             STR      R0,[R1, #+0]
    211                     
    212                     Circle_Turn_Old_Flag=2;
   \   0000013A   0x2002             MOVS     R0,#+2
   \   0000013C   0x....             LDR      R1,??DataTable1_16
   \   0000013E   0x6008             STR      R0,[R1, #+0]
    213                     
    214                     Circle_Error_Flag=2;
   \   00000140   0x2002             MOVS     R0,#+2
   \   00000142   0x....             LDR      R1,??DataTable1_14
   \   00000144   0x6008             STR      R0,[R1, #+0]
   \   00000146   0xE00E             B        ??Test_Huandao_7
    215                   }
    216                   else
    217                   {
    218                      Circle_L_Count=0;
   \                     ??Test_Huandao_8: (+1)
   \   00000148   0x2000             MOVS     R0,#+0
   \   0000014A   0x....             LDR      R1,??DataTable1_11
   \   0000014C   0x6008             STR      R0,[R1, #+0]
    219                      Circle_R_Count=0;
   \   0000014E   0x2000             MOVS     R0,#+0
   \   00000150   0x....             LDR      R1,??DataTable1_10
   \   00000152   0x6008             STR      R0,[R1, #+0]
    220                    
    221                      Circle_R_Flag=1;
   \   00000154   0x2001             MOVS     R0,#+1
   \   00000156   0x....             LDR      R1,??DataTable1_17
   \   00000158   0x6008             STR      R0,[R1, #+0]
    222                      
    223                       Circle_Turn_Old_Flag=1;
   \   0000015A   0x2001             MOVS     R0,#+1
   \   0000015C   0x....             LDR      R1,??DataTable1_16
   \   0000015E   0x6008             STR      R0,[R1, #+0]
    224                      
    225                      Circle_Error_Flag=1;
   \   00000160   0x2001             MOVS     R0,#+1
   \   00000162   0x....             LDR      R1,??DataTable1_14
   \   00000164   0x6008             STR      R0,[R1, #+0]
    226                   }           
    227                }
    228             }
    229                if(Circle_L_Flag==1)
   \                     ??Test_Huandao_7: (+1)
   \   00000166   0x....             LDR      R0,??DataTable1_15
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x2801             CMP      R0,#+1
   \   0000016C   0xD10B             BNE      ??Test_Huandao_9
    230                {
    231                    Chazhi = 100;
   \   0000016E   0x....             LDR      R0,??DataTable1_18  ;; 0x42c80000
   \   00000170   0x....             LDR      R1,??DataTable1_19
   \   00000172   0x6008             STR      R0,[R1, #+0]
    232                    
    233                    Circle_L_Finish_Count++;
   \   00000174   0x....             LDR      R0,??DataTable1_20
   \   00000176   0x6800             LDR      R0,[R0, #+0]
   \   00000178   0x1C40             ADDS     R0,R0,#+1
   \   0000017A   0x....             LDR      R1,??DataTable1_20
   \   0000017C   0x6008             STR      R0,[R1, #+0]
    234          //          LED_2_ON;
    235                    BUZZER_ON;
   \   0000017E   0x2101             MOVS     R1,#+1
   \   00000180   0x2018             MOVS     R0,#+24
   \   00000182   0x.... 0x....      BL       GpioSet
    236                }
    237                if(Circle_R_Flag==1)
   \                     ??Test_Huandao_9: (+1)
   \   00000186   0x....             LDR      R0,??DataTable1_17
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0x2801             CMP      R0,#+1
   \   0000018C   0xD10B             BNE      ??Test_Huandao_10
    238                {
    239                     Chazhi =-100;//47=70度,43.5=65
   \   0000018E   0x....             LDR      R0,??DataTable1_21  ;; 0xc2c80000
   \   00000190   0x....             LDR      R1,??DataTable1_19
   \   00000192   0x6008             STR      R0,[R1, #+0]
    240                     Circle_R_Finish_Count++;      
   \   00000194   0x....             LDR      R0,??DataTable1_22
   \   00000196   0x6800             LDR      R0,[R0, #+0]
   \   00000198   0x1C40             ADDS     R0,R0,#+1
   \   0000019A   0x....             LDR      R1,??DataTable1_22
   \   0000019C   0x6008             STR      R0,[R1, #+0]
    241          //           LED_1_ON;
    242                               BUZZER_ON;
   \   0000019E   0x2101             MOVS     R1,#+1
   \   000001A0   0x2018             MOVS     R0,#+24
   \   000001A2   0x.... 0x....      BL       GpioSet
    243          
    244          }
    245              
    246          
    247              if(Circle_L_Finish_Count>Circle_Finish_Count_Max||Circle_R_Finish_Count>Circle_Finish_Count_Max)//圆环转弯结束
   \                     ??Test_Huandao_10: (+1)
   \   000001A6   0x....             LDR      R0,??DataTable1_23
   \   000001A8   0x6800             LDR      R0,[R0, #+0]
   \   000001AA   0x....             LDR      R1,??DataTable1_20
   \   000001AC   0x6809             LDR      R1,[R1, #+0]
   \   000001AE   0x4288             CMP      R0,R1
   \   000001B0   0xDB05             BLT      ??Test_Huandao_11
   \   000001B2   0x....             LDR      R0,??DataTable1_23
   \   000001B4   0x6800             LDR      R0,[R0, #+0]
   \   000001B6   0x....             LDR      R1,??DataTable1_22
   \   000001B8   0x6809             LDR      R1,[R1, #+0]
   \   000001BA   0x4288             CMP      R0,R1
   \   000001BC   0xDA21             BGE      ??Test_Huandao_12
    248              {
    249                Circle_Count=0;
   \                     ??Test_Huandao_11: (+1)
   \   000001BE   0x2000             MOVS     R0,#+0
   \   000001C0   0x....             LDR      R1,??DataTable1_5
   \   000001C2   0x6008             STR      R0,[R1, #+0]
    250                Circle_Count2=0;
   \   000001C4   0x2000             MOVS     R0,#+0
   \   000001C6   0x....             LDR      R1,??DataTable1_24
   \   000001C8   0x6008             STR      R0,[R1, #+0]
    251                Circle_L_Finish_Count=0;
   \   000001CA   0x2000             MOVS     R0,#+0
   \   000001CC   0x....             LDR      R1,??DataTable1_20
   \   000001CE   0x6008             STR      R0,[R1, #+0]
    252                Circle_R_Finish_Count=0;
   \   000001D0   0x2000             MOVS     R0,#+0
   \   000001D2   0x....             LDR      R1,??DataTable1_22
   \   000001D4   0x6008             STR      R0,[R1, #+0]
    253                Circle_L_Count=0;
   \   000001D6   0x2000             MOVS     R0,#+0
   \   000001D8   0x....             LDR      R1,??DataTable1_11
   \   000001DA   0x6008             STR      R0,[R1, #+0]
    254                Circle_R_Count=0;
   \   000001DC   0x2000             MOVS     R0,#+0
   \   000001DE   0x....             LDR      R1,??DataTable1_10
   \   000001E0   0x6008             STR      R0,[R1, #+0]
    255                
    256                Circle_L_Flag=0;
   \   000001E2   0x2000             MOVS     R0,#+0
   \   000001E4   0x....             LDR      R1,??DataTable1_15
   \   000001E6   0x6008             STR      R0,[R1, #+0]
    257                Circle_R_Flag=0;
   \   000001E8   0x2000             MOVS     R0,#+0
   \   000001EA   0x....             LDR      R1,??DataTable1_17
   \   000001EC   0x6008             STR      R0,[R1, #+0]
    258               Circle_Flag=6;
   \   000001EE   0x2006             MOVS     R0,#+6
   \   000001F0   0x....             LDR      R1,??DataTable1_1
   \   000001F2   0x6008             STR      R0,[R1, #+0]
    259                                    BUZZER_OFF;
   \   000001F4   0x2100             MOVS     R1,#+0
   \   000001F6   0x2018             MOVS     R0,#+24
   \   000001F8   0x.... 0x....      BL       GpioSet
    260               Circle_Count_Out_Flag=1;//避免强制转弯迟,造成进环后反方向出赛道
   \   000001FC   0x2001             MOVS     R0,#+1
   \   000001FE   0x....             LDR      R1,??DataTable1_25
   \   00000200   0x6008             STR      R0,[R1, #+0]
    261          
    262              }
    263            
    264          
    265          if(Circle_Flag==6)
   \                     ??Test_Huandao_12: (+1)
   \   00000202   0x....             LDR      R0,??DataTable1_1
   \   00000204   0x6800             LDR      R0,[R0, #+0]
   \   00000206   0x2806             CMP      R0,#+6
   \   00000208   0xD116             BNE      ??Test_Huandao_13
    266            {
    267                if(AD_inductor[1]<100)
   \   0000020A   0x....             LDR      R0,??DataTable1_3
   \   0000020C   0x6840             LDR      R0,[R0, #+4]
   \   0000020E   0x....             LDR      R1,??DataTable1_18  ;; 0x42c80000
   \   00000210   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000214   0xD210             BCS      ??Test_Huandao_13
    268                {
    269                  Circle_Count6++;
   \   00000216   0x....             LDR      R0,??DataTable1_26
   \   00000218   0x6800             LDR      R0,[R0, #+0]
   \   0000021A   0x1C40             ADDS     R0,R0,#+1
   \   0000021C   0x....             LDR      R1,??DataTable1_26
   \   0000021E   0x6008             STR      R0,[R1, #+0]
    270                  if(Circle_Count6>Circle_Count6_Max)
   \   00000220   0x....             LDR      R0,??DataTable1_27
   \   00000222   0x6800             LDR      R0,[R0, #+0]
   \   00000224   0x....             LDR      R1,??DataTable1_26
   \   00000226   0x6809             LDR      R1,[R1, #+0]
   \   00000228   0x4288             CMP      R0,R1
   \   0000022A   0xDA05             BGE      ??Test_Huandao_13
    271                  {
    272                  Circle_Flag=0;
   \   0000022C   0x2000             MOVS     R0,#+0
   \   0000022E   0x....             LDR      R1,??DataTable1_1
   \   00000230   0x6008             STR      R0,[R1, #+0]
    273                  Circle_Error_Flag=0;//转弯误判解除
   \   00000232   0x2000             MOVS     R0,#+0
   \   00000234   0x....             LDR      R1,??DataTable1_14
   \   00000236   0x6008             STR      R0,[R1, #+0]
    274                  }
    275                }
    276            }
    277          
    278          //      if(Circle_Flag>1&&Circle_Flag<4)//处于检测圆环双线状态
    279          //      WindingRoad_Flag=1;
    280            
    281            // if(Circle_Flag==1)//检测到圆环双线，进入到检测离开圆环双线
    282          // {
    283          ////                        BUZZER_ON;
    284          //
    285          //     if(AD_inductor[1]<Circle_Inductor_value2)      
    286          //         Circle_Count2++;//离开环岛双线计数
    287          //
    288          //
    289          // //会出现提前转弯，与滞后转弯后强制出环转冲突，导致提前转弯一直旋转//计数强制转弯使用        
    290          ////      if(Circle_L_Count>Circle_Turn_Count||Circle_R_Count>Circle_Turn_Count)//转弯计数达到上限，进入转弯时刻
    291          ////         Circle_Flag=3;//转弯识别结束该转弯了              
    292          //    if(Circle_Count2>Circle_Count2_Max)
    293          //   {
    294          //        Circle_Flag=2; //离开环岛双线标志
    295          //        Circle_Count2=0;
    296          //    }
    297            
    298            // 
    299          //    if(Circle_Flag==4)//圆环强制转弯结束,进入圆环行驶检测
    300          //   {
    301          //        if(AD_inductor_Huan<100)
    302          //      {
    303          //            Circle_Count4++;//环岛双线计数   
    304          //            if(Circle_Count4>Circle_Count4_Max)
    305          //            {
    306          //                Circle_Flag=5; //出环岛双线标志
    307          //                Circle_Count4=0;
    308          //            }
    309          //      }
    310          //   }
    311          //     
    312          //   if(Circle_Flag==5)//圆环正规行驶结束束,进入检测出圆环双线
    313          //   {
    314          //      if(AD_inductor_Huan>Circle_Inductor_value5)
    315          //      {
    316          //           Circle_Count5++;//环岛双线计数   
    317          //           if(Circle_Count5>Circle_Count5_Max)
    318          //           {
    319          //                Circle_Flag=6; //出环岛双线标志
    320          //                Circle_Count5=0;
    321          //           }
    322          //      }
    323          //   }
    324                
    325          
    326            
    327            
    328          //   if(Circle_Error_Flag==1||Circle_Error_Flag==2)//防止误判计数
    329          //      {
    330          //         Circle_Error_Count++;
    331          //         if(Circle_Error_Count>Circle_Error_Count_Max)
    332          //         {
    333          //            Circle_Error_Flag=0;//转弯误判解除
    334          //            Circle_Error_Count=0;
    335          ////                 Circle_Flag=0;
    336          //         }      
    337          //      }   
    338          
    339            //   if(Circle_Flag==6)//标志6暂定时间3s
    340          //   {
    341          //     
    342          ////     if(AD_inductor[1]>?)
    343          //     if(AD_inductor[1]>100)
    344          //     {
    345          ////     if(AD_inductor[2]>?)
    346          //     
    347          //     Circle_Turn_Again_Counter++;
    348          //     if(Circle_Turn_Again_Counter>Circle_Turn_Again_Counter_Max)
    349          //     {
    350          //        Circle_Turn_Again_Prevent_Flag=0;
    351          //     }
    352          //     else
    353          //     {
    354          //       Circle_Turn_Again_Prevent_Flag=1;
    355          //     }
    356          //     
    357          //     if(Circle_Turn_Again_Prevent_Flag==1)
    358          //     {
    359          //         if(Circle_Turn_Old_Flag==2)//左转进弯预防差值60
    360          //         {
    361          //           if(Chazhi>30)
    362          //            Chazhi=-Chazhi/2;     
    363          //         }
    364          //      
    365          //        if(Circle_Turn_Old_Flag==1)//右转进弯预防差值-60
    366          //        {
    367          //            if(Chazhi<-30)
    368          //            Chazhi=-Chazhi/2;     
    369          //        }
    370          //     }
    371          //   }
    372          //   }
    373            
    374          }
   \                     ??Test_Huandao_13: (+1)
   \   00000238   0xBD01             POP      {R0,PC}          ;; return
    375          /*************************************************************************
    376          电感数据分析
    377          *************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    378          void Inductor_analyse()
    379          {
   \                     Inductor_analyse: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    380               int16  i,max_front=0;//max_back
   \   00000002   0x2400             MOVS     R4,#+0
    381               static int16 max_old = 1,max_crosstalk = 1;
    382               static int16 position_last = 1;
    383               float  sensor_1;
    384          
    385               Read_ADC();
   \   00000004   0x.... 0x....      BL       Read_ADC
    386          
    387               Inductor_Check();//电感最大最小值校验 
   \   00000008   0x.... 0x....      BL       Inductor_Check
    388               
    389          /*********************归一化处理********************/
    390               for(i=0;i<5;i++)
   \   0000000C   0x2500             MOVS     R5,#+0
   \   0000000E   0xE033             B        ??Inductor_analyse_0
    391               {
    392                  sensor_to_one[i] = (float)(AD_valu[i] - min_v[i])/(float)(max_v[i]- min_v[i]);
   \                     ??Inductor_analyse_1: (+1)
   \   00000010   0x48A5             LDR      R0,??Inductor_analyse_2
   \   00000012   0xB22D             SXTH     R5,R5
   \   00000014   0x2104             MOVS     R1,#+4
   \   00000016   0x4369             MULS     R1,R5,R1
   \   00000018   0x5840             LDR      R0,[R0, R1]
   \   0000001A   0x.... 0x....      BL       __aeabi_i2f
   \   0000001E   0x49A3             LDR      R1,??Inductor_analyse_2+0x4
   \   00000020   0xB22D             SXTH     R5,R5
   \   00000022   0x2204             MOVS     R2,#+4
   \   00000024   0x436A             MULS     R2,R5,R2
   \   00000026   0x5889             LDR      R1,[R1, R2]
   \   00000028   0x.... 0x....      BL       __aeabi_fsub
   \   0000002C   0x0006             MOVS     R6,R0
   \   0000002E   0x48A0             LDR      R0,??Inductor_analyse_2+0x8
   \   00000030   0xB22D             SXTH     R5,R5
   \   00000032   0x2104             MOVS     R1,#+4
   \   00000034   0x4369             MULS     R1,R5,R1
   \   00000036   0x5840             LDR      R0,[R0, R1]
   \   00000038   0x499C             LDR      R1,??Inductor_analyse_2+0x4
   \   0000003A   0xB22D             SXTH     R5,R5
   \   0000003C   0x2204             MOVS     R2,#+4
   \   0000003E   0x436A             MULS     R2,R5,R2
   \   00000040   0x5889             LDR      R1,[R1, R2]
   \   00000042   0x.... 0x....      BL       __aeabi_fsub
   \   00000046   0x0001             MOVS     R1,R0
   \   00000048   0x0030             MOVS     R0,R6
   \   0000004A   0x.... 0x....      BL       __aeabi_fdiv
   \   0000004E   0x4999             LDR      R1,??Inductor_analyse_2+0xC
   \   00000050   0xB22D             SXTH     R5,R5
   \   00000052   0x2204             MOVS     R2,#+4
   \   00000054   0x436A             MULS     R2,R5,R2
   \   00000056   0x5088             STR      R0,[R1, R2]
    393                  if(sensor_to_one[i]<=0.0)  sensor_to_one[i]=0.001;
   \   00000058   0x4896             LDR      R0,??Inductor_analyse_2+0xC
   \   0000005A   0xB22D             SXTH     R5,R5
   \   0000005C   0x2104             MOVS     R1,#+4
   \   0000005E   0x4369             MULS     R1,R5,R1
   \   00000060   0x5840             LDR      R0,[R0, R1]
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000068   0xD805             BHI      ??Inductor_analyse_3
   \   0000006A   0x4893             LDR      R0,??Inductor_analyse_2+0x10  ;; 0x3a83126f
   \   0000006C   0x4991             LDR      R1,??Inductor_analyse_2+0xC
   \   0000006E   0xB22D             SXTH     R5,R5
   \   00000070   0x2204             MOVS     R2,#+4
   \   00000072   0x436A             MULS     R2,R5,R2
   \   00000074   0x5088             STR      R0,[R1, R2]
    394               }   
   \                     ??Inductor_analyse_3: (+1)
   \   00000076   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Inductor_analyse_0: (+1)
   \   00000078   0xB22D             SXTH     R5,R5
   \   0000007A   0x2D05             CMP      R5,#+5
   \   0000007C   0xDBC8             BLT      ??Inductor_analyse_1
    395                    sensor_to_one_Huan=sensor_to_one[1];
   \   0000007E   0x488D             LDR      R0,??Inductor_analyse_2+0xC
   \   00000080   0x6840             LDR      R0,[R0, #+4]
   \   00000082   0x498E             LDR      R1,??Inductor_analyse_2+0x14
   \   00000084   0x6008             STR      R0,[R1, #+0]
    396          
    397          //       if(sensor_to_one[0]>1.0)  sensor_to_one[0]=1.0;
    398          //       if(sensor_to_one[1]>1.0)  sensor_to_one[1]=1.0;
    399          //       if(sensor_to_one[2]>1.0)  sensor_to_one[2]=1.0;
    400          //       if(sensor_to_one[3]>1.0)  sensor_to_one[3]=1.0;
    401          //       if(sensor_to_one[4]>1.0)  sensor_to_one[4]=1.0;
    402          
    403                 for(i=0;i<5;i++)
   \   00000086   0x2500             MOVS     R5,#+0
   \   00000088   0xE00D             B        ??Inductor_analyse_4
    404               {
    405                
    406                  AD_inductor[i] = 100 * sensor_to_one[i];     //AD[i]为归一化后的值  范围为0-100
   \                     ??Inductor_analyse_5: (+1)
   \   0000008A   0x488A             LDR      R0,??Inductor_analyse_2+0xC
   \   0000008C   0xB22D             SXTH     R5,R5
   \   0000008E   0x2104             MOVS     R1,#+4
   \   00000090   0x4369             MULS     R1,R5,R1
   \   00000092   0x5840             LDR      R0,[R0, R1]
   \   00000094   0x498A             LDR      R1,??Inductor_analyse_2+0x18  ;; 0x42c80000
   \   00000096   0x.... 0x....      BL       __aeabi_fmul
   \   0000009A   0x498A             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000009C   0xB22D             SXTH     R5,R5
   \   0000009E   0x2204             MOVS     R2,#+4
   \   000000A0   0x436A             MULS     R2,R5,R2
   \   000000A2   0x5088             STR      R0,[R1, R2]
    407               }
   \   000000A4   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Inductor_analyse_4: (+1)
   \   000000A6   0xB22D             SXTH     R5,R5
   \   000000A8   0x2D05             CMP      R5,#+5
   \   000000AA   0xDBEE             BLT      ??Inductor_analyse_5
    408               AD_inductor_Huan=100*sensor_to_one_Huan;
   \   000000AC   0x4883             LDR      R0,??Inductor_analyse_2+0x14
   \   000000AE   0x6801             LDR      R1,[R0, #+0]
   \   000000B0   0x4883             LDR      R0,??Inductor_analyse_2+0x18  ;; 0x42c80000
   \   000000B2   0x.... 0x....      BL       __aeabi_fmul
   \   000000B6   0x4984             LDR      R1,??Inductor_analyse_2+0x20
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    409          /*******1号电感特殊归一化，用于坡道检测********/
    410                sensor_1 = (float)(AD_valu[1] - min_v[1])/(float)(ad_valu[1][0] - min_v[1]);
   \   000000BA   0x487B             LDR      R0,??Inductor_analyse_2
   \   000000BC   0x6840             LDR      R0,[R0, #+4]
   \   000000BE   0x.... 0x....      BL       __aeabi_i2f
   \   000000C2   0x497A             LDR      R1,??Inductor_analyse_2+0x4
   \   000000C4   0x6849             LDR      R1,[R1, #+4]
   \   000000C6   0x.... 0x....      BL       __aeabi_fsub
   \   000000CA   0x0005             MOVS     R5,R0
   \   000000CC   0x487F             LDR      R0,??Inductor_analyse_2+0x24
   \   000000CE   0x210A             MOVS     R1,#+10
   \   000000D0   0x5E40             LDRSH    R0,[R0, R1]
   \   000000D2   0x.... 0x....      BL       __aeabi_i2f
   \   000000D6   0x4975             LDR      R1,??Inductor_analyse_2+0x4
   \   000000D8   0x6849             LDR      R1,[R1, #+4]
   \   000000DA   0x.... 0x....      BL       __aeabi_fsub
   \   000000DE   0x0001             MOVS     R1,R0
   \   000000E0   0x0028             MOVS     R0,R5
   \   000000E2   0x.... 0x....      BL       __aeabi_fdiv
    411                if(sensor_1 <= 0.0)  sensor_1 = 0.001;
   \   000000E6   0x2100             MOVS     R1,#+0
   \   000000E8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000EC   0xD800             BHI      ??Inductor_analyse_6
   \   000000EE   0x4872             LDR      R0,??Inductor_analyse_2+0x10  ;; 0x3a83126f
    412                Slope_AD_1 = 100 * sensor_1;
   \                     ??Inductor_analyse_6: (+1)
   \   000000F0   0x4973             LDR      R1,??Inductor_analyse_2+0x18  ;; 0x42c80000
   \   000000F2   0x.... 0x....      BL       __aeabi_fmul
   \   000000F6   0x4976             LDR      R1,??Inductor_analyse_2+0x28
   \   000000F8   0x6008             STR      R0,[R1, #+0]
    413          /***********找出最强的传感器**********************/
    414                 for(i=0;i<3;i++)                 
   \   000000FA   0x2500             MOVS     R5,#+0
   \   000000FC   0xE00E             B        ??Inductor_analyse_7
    415                 {
    416                   if(AD_inductor[max_front]<AD_inductor[i])
   \                     ??Inductor_analyse_8: (+1)
   \   000000FE   0x4871             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000100   0xB224             SXTH     R4,R4
   \   00000102   0x2104             MOVS     R1,#+4
   \   00000104   0x4361             MULS     R1,R4,R1
   \   00000106   0x5840             LDR      R0,[R0, R1]
   \   00000108   0x496E             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000010A   0xB22D             SXTH     R5,R5
   \   0000010C   0x2204             MOVS     R2,#+4
   \   0000010E   0x436A             MULS     R2,R5,R2
   \   00000110   0x5889             LDR      R1,[R1, R2]
   \   00000112   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000116   0xD200             BCS      ??Inductor_analyse_9
    417                     max_front=i;
   \   00000118   0x002C             MOVS     R4,R5
    418                 }
   \                     ??Inductor_analyse_9: (+1)
   \   0000011A   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Inductor_analyse_7: (+1)
   \   0000011C   0xB22D             SXTH     R5,R5
   \   0000011E   0x2D03             CMP      R5,#+3
   \   00000120   0xDBED             BLT      ??Inductor_analyse_8
    419                 max_value=AD_inductor[max_front];  //最大电感值
   \   00000122   0x4868             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000124   0xB224             SXTH     R4,R4
   \   00000126   0x2104             MOVS     R1,#+4
   \   00000128   0x4361             MULS     R1,R4,R1
   \   0000012A   0x5840             LDR      R0,[R0, R1]
   \   0000012C   0x4969             LDR      R1,??Inductor_analyse_2+0x2C
   \   0000012E   0x6008             STR      R0,[R1, #+0]
    420          /**************丢线时最大值取旧值***************/
    421                 if(max_value < 5)//?           
   \   00000130   0x4868             LDR      R0,??Inductor_analyse_2+0x2C
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x49CB             LDR      R1,??Inductor_analyse_10  ;; 0x40a00000
   \   00000136   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000013A   0xD20A             BCS      ??Inductor_analyse_11
    422                 {
    423                   max_front=max_old;
   \   0000013C   0x48CA             LDR      R0,??Inductor_analyse_10+0x4
   \   0000013E   0x2100             MOVS     R1,#+0
   \   00000140   0x5E44             LDRSH    R4,[R0, R1]
    424                   max_value=AD_inductor[max_front];
   \   00000142   0x4860             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000144   0xB224             SXTH     R4,R4
   \   00000146   0x2104             MOVS     R1,#+4
   \   00000148   0x4361             MULS     R1,R4,R1
   \   0000014A   0x5840             LDR      R0,[R0, R1]
   \   0000014C   0x4961             LDR      R1,??Inductor_analyse_2+0x2C
   \   0000014E   0x6008             STR      R0,[R1, #+0]
   \   00000150   0xE001             B        ??Inductor_analyse_12
    425                 }
    426                 else
    427                   max_old=max_front;
   \                     ??Inductor_analyse_11: (+1)
   \   00000152   0x48C5             LDR      R0,??Inductor_analyse_10+0x4
   \   00000154   0x8004             STRH     R4,[R0, #+0]
    428          /********防串道***************/
    429          //       if(abs_inductor(max_front - max_crosstalk) < 2)  
    430          //       {
    431          //            max_crosstalk = max_front;
    432          //       }
    433          //       else
    434          //            max_front = max_crosstalk;
    435          /****************位置解算，解算过程的值用归一化放大后的值************************/
    436                 position_last = position;
   \                     ??Inductor_analyse_12: (+1)
   \   00000156   0x48C5             LDR      R0,??Inductor_analyse_10+0x8
   \   00000158   0x7800             LDRB     R0,[R0, #+0]
   \   0000015A   0x49C5             LDR      R1,??Inductor_analyse_10+0xC
   \   0000015C   0x8008             STRH     R0,[R1, #+0]
    437                 
    438                  if(max_front==0 && (AD_inductor[1] <= Position_transit[0]&&AD_inductor[1]>AD_inductor[2]&&AD_inductor[0]>1)&&AD_valu[1]>AD_valu[2])  //已经偏离0号传感器
   \   0000015E   0xB224             SXTH     R4,R4
   \   00000160   0x2C00             CMP      R4,#+0
   \   00000162   0xD11F             BNE      ??Inductor_analyse_13
   \   00000164   0x48C3             LDR      R0,??Inductor_analyse_10+0x10
   \   00000166   0x6800             LDR      R0,[R0, #+0]
   \   00000168   0x.... 0x....      BL       __aeabi_i2f
   \   0000016C   0x4955             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000016E   0x6849             LDR      R1,[R1, #+4]
   \   00000170   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000174   0xD816             BHI      ??Inductor_analyse_13
   \   00000176   0x4853             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000178   0x6880             LDR      R0,[R0, #+8]
   \   0000017A   0x4952             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000017C   0x6849             LDR      R1,[R1, #+4]
   \   0000017E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000182   0xD20F             BCS      ??Inductor_analyse_13
   \   00000184   0x484F             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000186   0x6800             LDR      R0,[R0, #+0]
   \   00000188   0x49BB             LDR      R1,??Inductor_analyse_10+0x14  ;; 0x3f800001
   \   0000018A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000018E   0xD809             BHI      ??Inductor_analyse_13
   \   00000190   0x4845             LDR      R0,??Inductor_analyse_2
   \   00000192   0x6880             LDR      R0,[R0, #+8]
   \   00000194   0x4944             LDR      R1,??Inductor_analyse_2
   \   00000196   0x6849             LDR      R1,[R1, #+4]
   \   00000198   0x4288             CMP      R0,R1
   \   0000019A   0xDA03             BGE      ??Inductor_analyse_13
    439                 {//右电感最大且此时的中电感值<=过渡点0时中电感的值
    440                         position=0;//右电感在电磁线左方，整个小车都在电磁线左方
   \   0000019C   0x2000             MOVS     R0,#+0
   \   0000019E   0x49B3             LDR      R1,??Inductor_analyse_10+0x8
   \   000001A0   0x7008             STRB     R0,[R1, #+0]
   \   000001A2   0xE062             B        ??Inductor_analyse_14
    441          //              LED_1_ON;
    442           //          AD_0_max = AD_inductor[0];//zs加
    443                 }
    444                 else if((max_front==0 && (AD_inductor[1] > Position_transit[0] )) || (max_front==1 && (AD_inductor[0] >AD_inductor[2]) ))  //左侧位置  0-1号传感器之间
   \                     ??Inductor_analyse_13: (+1)
   \   000001A4   0xB224             SXTH     R4,R4
   \   000001A6   0x2C00             CMP      R4,#+0
   \   000001A8   0xD108             BNE      ??Inductor_analyse_15
   \   000001AA   0x48B2             LDR      R0,??Inductor_analyse_10+0x10
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0x.... 0x....      BL       __aeabi_i2f
   \   000001B2   0x4944             LDR      R1,??Inductor_analyse_2+0x1C
   \   000001B4   0x6849             LDR      R1,[R1, #+4]
   \   000001B6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001BA   0xD309             BCC      ??Inductor_analyse_16
   \                     ??Inductor_analyse_15: (+1)
   \   000001BC   0xB224             SXTH     R4,R4
   \   000001BE   0x2C01             CMP      R4,#+1
   \   000001C0   0xD10E             BNE      ??Inductor_analyse_17
   \   000001C2   0x4840             LDR      R0,??Inductor_analyse_2+0x1C
   \   000001C4   0x6880             LDR      R0,[R0, #+8]
   \   000001C6   0x493F             LDR      R1,??Inductor_analyse_2+0x1C
   \   000001C8   0x6809             LDR      R1,[R1, #+0]
   \   000001CA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001CE   0xD207             BCS      ??Inductor_analyse_17
    445                 {//右电感最大且此时中电感的值>过渡点0时中电感的值||中电感最大且右电感的值>左电感的值
    446                     //      中电感在电磁线左边                            中电感在电磁线左边
    447                     
    448                       position=1;//中电感在电磁线左边,小车偏左(半个小车以上部分在电磁线左边但不是全部)
   \                     ??Inductor_analyse_16: (+1)
   \   000001D0   0x2001             MOVS     R0,#+1
   \   000001D2   0x49A6             LDR      R1,??Inductor_analyse_10+0x8
   \   000001D4   0x7008             STRB     R0,[R1, #+0]
    449                       AD_0_max = AD_inductor[0]; //记录下此时的0号传感器的归一放大后的值
   \   000001D6   0x483B             LDR      R0,??Inductor_analyse_2+0x1C
   \   000001D8   0x6800             LDR      R0,[R0, #+0]
   \   000001DA   0x49C8             LDR      R1,??Inductor_analyse_18
   \   000001DC   0x6008             STR      R0,[R1, #+0]
   \   000001DE   0xE044             B        ??Inductor_analyse_14
    450                      
    451                 }
    452                 else if((max_front==1 && (AD_inductor[2] >AD_inductor[0]) ) || (max_front==2 && (AD_inductor[1] > Position_transit[1] )))  //右侧位置  1-2号传感器之间
   \                     ??Inductor_analyse_17: (+1)
   \   000001E0   0xB224             SXTH     R4,R4
   \   000001E2   0x2C01             CMP      R4,#+1
   \   000001E4   0xD106             BNE      ??Inductor_analyse_19
   \   000001E6   0x4837             LDR      R0,??Inductor_analyse_2+0x1C
   \   000001E8   0x6800             LDR      R0,[R0, #+0]
   \   000001EA   0x4936             LDR      R1,??Inductor_analyse_2+0x1C
   \   000001EC   0x6889             LDR      R1,[R1, #+8]
   \   000001EE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001F2   0xD30B             BCC      ??Inductor_analyse_20
   \                     ??Inductor_analyse_19: (+1)
   \   000001F4   0xB224             SXTH     R4,R4
   \   000001F6   0x2C02             CMP      R4,#+2
   \   000001F8   0xD110             BNE      ??Inductor_analyse_21
   \   000001FA   0x489E             LDR      R0,??Inductor_analyse_10+0x10
   \   000001FC   0x6840             LDR      R0,[R0, #+4]
   \   000001FE   0x.... 0x....      BL       __aeabi_i2f
   \   00000202   0x4930             LDR      R1,??Inductor_analyse_2+0x1C
   \   00000204   0x6849             LDR      R1,[R1, #+4]
   \   00000206   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000020A   0xD207             BCS      ??Inductor_analyse_21
    453                 {//中电感最大且左电感的值大于右电感的值||左电感最大且此时中电感的值>过渡点1时中电感的值
    454                  //    中电感在电磁线右边                         中电感在电磁线右边          
    455                       position=2;//中电感在电磁线右边,小车偏右(半个小车以上部分在电磁线右边但不是全部)
   \                     ??Inductor_analyse_20: (+1)
   \   0000020C   0x2002             MOVS     R0,#+2
   \   0000020E   0x4997             LDR      R1,??Inductor_analyse_10+0x8
   \   00000210   0x7008             STRB     R0,[R1, #+0]
    456                       AD_2_max = AD_inductor[2]; //记录下此时的3号传感器归一放大后的值
   \   00000212   0x482C             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000214   0x6880             LDR      R0,[R0, #+8]
   \   00000216   0x....             LDR      R1,??DataTable2
   \   00000218   0x6008             STR      R0,[R1, #+0]
   \   0000021A   0xE026             B        ??Inductor_analyse_14
    457                 }
    458                 else if(max_front==2 && (AD_inductor[1] <= Position_transit[1] &&AD_inductor[1]>AD_inductor[0]&&AD_inductor[2]>1)&&AD_valu[1]>AD_valu[0]) //已经偏离3号传感器
   \                     ??Inductor_analyse_21: (+1)
   \   0000021C   0xB224             SXTH     R4,R4
   \   0000021E   0x2C02             CMP      R4,#+2
   \   00000220   0xD11F             BNE      ??Inductor_analyse_22
   \   00000222   0x4894             LDR      R0,??Inductor_analyse_10+0x10
   \   00000224   0x6840             LDR      R0,[R0, #+4]
   \   00000226   0x.... 0x....      BL       __aeabi_i2f
   \   0000022A   0x4926             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000022C   0x6849             LDR      R1,[R1, #+4]
   \   0000022E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000232   0xD816             BHI      ??Inductor_analyse_22
   \   00000234   0x4823             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000236   0x6800             LDR      R0,[R0, #+0]
   \   00000238   0x4922             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000023A   0x6849             LDR      R1,[R1, #+4]
   \   0000023C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000240   0xD20F             BCS      ??Inductor_analyse_22
   \   00000242   0x4820             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000244   0x6880             LDR      R0,[R0, #+8]
   \   00000246   0x498C             LDR      R1,??Inductor_analyse_10+0x14  ;; 0x3f800001
   \   00000248   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000024C   0xD809             BHI      ??Inductor_analyse_22
   \   0000024E   0x4816             LDR      R0,??Inductor_analyse_2
   \   00000250   0x6800             LDR      R0,[R0, #+0]
   \   00000252   0x4915             LDR      R1,??Inductor_analyse_2
   \   00000254   0x6849             LDR      R1,[R1, #+4]
   \   00000256   0x4288             CMP      R0,R1
   \   00000258   0xDA03             BGE      ??Inductor_analyse_22
    459                 {//左电感最大且此时的中电感值<=过渡点1时中电感的值
    460                      
    461                         position = 3;//左电感在电磁线右方，整个小车都在电磁线右方
   \   0000025A   0x2003             MOVS     R0,#+3
   \   0000025C   0x4983             LDR      R1,??Inductor_analyse_10+0x8
   \   0000025E   0x7008             STRB     R0,[R1, #+0]
   \   00000260   0xE003             B        ??Inductor_analyse_14
    462                      
    463                         //                          LED_2_ON;
    464                  // AD_2_max = AD_inductor[2];//zs加
    465                 }   
    466                 else 
    467                 {
    468                   position=position_last;
   \                     ??Inductor_analyse_22: (+1)
   \   00000262   0x4883             LDR      R0,??Inductor_analyse_10+0xC
   \   00000264   0x8800             LDRH     R0,[R0, #+0]
   \   00000266   0x4981             LDR      R1,??Inductor_analyse_10+0x8
   \   00000268   0x7008             STRB     R0,[R1, #+0]
    469                 }
    470          /*位置防跳变过大，比如前1ms小车都在电磁线左边，后1ms小车偏右*/  
    471                 if(abs_inductor(position - position_last) > 1)  //位置跳变过大时进入 
   \                     ??Inductor_analyse_14: (+1)
   \   0000026A   0x4880             LDR      R0,??Inductor_analyse_10+0x8
   \   0000026C   0x7800             LDRB     R0,[R0, #+0]
   \   0000026E   0x4980             LDR      R1,??Inductor_analyse_10+0xC
   \   00000270   0x2200             MOVS     R2,#+0
   \   00000272   0x5E89             LDRSH    R1,[R1, R2]
   \   00000274   0x1A40             SUBS     R0,R0,R1
   \   00000276   0x.... 0x....      BL       abs_inductor
   \   0000027A   0x2802             CMP      R0,#+2
   \   0000027C   0xDB04             BLT      ??Inductor_analyse_23
    472                 {
    473                      position = position_last;//此刻小车位置转变为上一次小车位置
   \   0000027E   0x487C             LDR      R0,??Inductor_analyse_10+0xC
   \   00000280   0x8800             LDRH     R0,[R0, #+0]
   \   00000282   0x497A             LDR      R1,??Inductor_analyse_10+0x8
   \   00000284   0x7008             STRB     R0,[R1, #+0]
   \   00000286   0xE003             B        ??Inductor_analyse_24
    474                 }
    475                 else
    476                 {
    477                 position_last = position;//正常记录，接下来的上次小车位置=此刻小车位置
   \                     ??Inductor_analyse_23: (+1)
   \   00000288   0x4878             LDR      R0,??Inductor_analyse_10+0x8
   \   0000028A   0x7800             LDRB     R0,[R0, #+0]
   \   0000028C   0x4978             LDR      R1,??Inductor_analyse_10+0xC
   \   0000028E   0x8008             STRH     R0,[R1, #+0]
    478                 }   
    479          /*************计算偏移量/差值*************/
    480               
    481          //       Chazhi_Last=Chazhi;
    482          //  
    483          //       if(position == 0)   //左侧丢线
    484          //       {
    485          //           Chazhi =Chazhi_Min-abs_f(Chazhi_Min+AD_inductor[0]);//目前用不到差值50,60以上的
    486          //       }
    487          //       else if(position == 1 || position == 2) //处于中间位置        
    488          //       {
    489          //         Chazhi = (int16)(AD_inductor[2] - AD_inductor[0]); 
    490          //       }
    491          //       else if(position == 3)  //右侧丢线
    492          //       {
    493          //           Chazhi =Chazhi_Max+abs_f(Chazhi_Max-AD_inductor[2]);//目前用不到差值50,60以上的
    494          //       }    
    495           /*************计算偏移量/差值*************/
    496          //因为在0,3区拿右，左电感算差值，在该区，还会出现电感从60变到72在变小，
    497           //虽优化但不稳定，故改为拿中电感算差值
    498           //65度/1.5=差值43.333
    499          //差值60*0.75=45
    500          //
    501          // if(AD_inductor[0]>5&&AD_inductor[2]>5) 
    502          // {
    503          //     Chazhi = (int16)(AD_inductor[2] - AD_inductor[0]); 
    504          //     Chazhi*=0.75;
    505          //
    506          // }
    507          //                 
    508          // else if(AD_inductor[0]>AD_inductor[2]&&AD_inductor[0]>10)
    509          // {
    510          ////     if(AD_inductor[0]>Chazhi_Max)
    511          //     if(AD_inductor[1]>Chazhi_Max)
    512          //       Chazhi =-AD_inductor[1];
    513          //     else
    514          //     Chazhi =-Chazhi_Max-abs_f(-Chazhi_Max+AD_inductor[1]);//目前用不到差值50,60以上的
    515          //     
    516          //     Chazhi*=0.75;
    517          // }
    518          //else if(AD_inductor[2]>AD_inductor[0]&&AD_inductor[2]>10)
    519          //{
    520          //   if(AD_inductor[1]>Chazhi_Max)
    521          //       Chazhi =AD_inductor[1];
    522          //   else
    523          //     Chazhi =Chazhi_Max+abs_f(Chazhi_Max-AD_inductor[1]);//目前用不到差值50,60以上的
    524          //   
    525          //    Chazhi*=0.75;
    526          //}
    527          //else 
    528          //     Chazhi=Chazhi_Last;
    529          
    530                 Chazhi_Last=Chazhi;
   \                     ??Inductor_analyse_24: (+1)
   \   00000290   0x....             LDR      R0,??DataTable2_1
   \   00000292   0x6800             LDR      R0,[R0, #+0]
   \   00000294   0x....             LDR      R1,??DataTable2_2
   \   00000296   0x6008             STR      R0,[R1, #+0]
    531          
    532           switch (max_front)  //最大电感序列号
   \   00000298   0xB224             SXTH     R4,R4
   \   0000029A   0x2C00             CMP      R4,#+0
   \   0000029C   0xD01C             BEQ      ??Inductor_analyse_25
   \   0000029E   0x2C02             CMP      R4,#+2
   \   000002A0   0xD100             BNE      .+4
   \   000002A2   0xE0AF             B        ??Inductor_analyse_26
   \   000002A4   0xD369             BCC      ??Inductor_analyse_27
   \   000002A6   0xE10A             B        ??Inductor_analyse_28
   \                     ??Inductor_analyse_2:
   \   000002A8   0x........         DC32     AD_valu
   \   000002AC   0x........         DC32     min_v
   \   000002B0   0x........         DC32     max_v
   \   000002B4   0x........         DC32     sensor_to_one
   \   000002B8   0x3A83126F         DC32     0x3a83126f
   \   000002BC   0x........         DC32     sensor_to_one_Huan
   \   000002C0   0x42C80000         DC32     0x42c80000
   \   000002C4   0x........         DC32     AD_inductor
   \   000002C8   0x........         DC32     AD_inductor_Huan
   \   000002CC   0x........         DC32     ad_valu
   \   000002D0   0x........         DC32     Slope_AD_1
   \   000002D4   0x........         DC32     max_value
    533            {
    534            /*********** 车离开导线偏左，分3种情况************/
    535            case 0:   // 右侧电感最大
    536              {
    537                if(AD_inductor[0] > RefAd)     //右侧电感> RefAd=20 【RefAd参考值视情况改动】
   \                     ??Inductor_analyse_25: (+1)
   \   000002D8   0x....             LDR      R0,??DataTable2_3
   \   000002DA   0x6800             LDR      R0,[R0, #+0]
   \   000002DC   0x.... 0x....      BL       __aeabi_i2f
   \   000002E0   0x....             LDR      R1,??DataTable2_4
   \   000002E2   0x6809             LDR      R1,[R1, #+0]
   \   000002E4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002E8   0xD243             BCS      ??Inductor_analyse_29
    538                {
    539                                    
    540                  if(AD_inductor[1] > RefAd)  //中间电感> RefAd=20   16
   \   000002EA   0x....             LDR      R0,??DataTable2_3
   \   000002EC   0x6800             LDR      R0,[R0, #+0]
   \   000002EE   0x.... 0x....      BL       __aeabi_i2f
   \   000002F2   0x....             LDR      R1,??DataTable2_4
   \   000002F4   0x6849             LDR      R1,[R1, #+4]
   \   000002F6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002FA   0xD21D             BCS      ??Inductor_analyse_30
    541                  {
    542                   Chazhi = -30 - 30*(AD_inductor[0]-AD_inductor[1])/(AD_inductor[0]-RefAd); 
   \   000002FC   0x....             LDR      R0,??DataTable2_4
   \   000002FE   0x6800             LDR      R0,[R0, #+0]
   \   00000300   0x....             LDR      R1,??DataTable2_4
   \   00000302   0x6849             LDR      R1,[R1, #+4]
   \   00000304   0x.... 0x....      BL       __aeabi_fsub
   \   00000308   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   0000030A   0x.... 0x....      BL       __aeabi_fmul
   \   0000030E   0x0004             MOVS     R4,R0
   \   00000310   0x....             LDR      R0,??DataTable2_3
   \   00000312   0x6800             LDR      R0,[R0, #+0]
   \   00000314   0x.... 0x....      BL       __aeabi_i2f
   \   00000318   0x0001             MOVS     R1,R0
   \   0000031A   0x....             LDR      R0,??DataTable2_4
   \   0000031C   0x6800             LDR      R0,[R0, #+0]
   \   0000031E   0x.... 0x....      BL       __aeabi_fsub
   \   00000322   0x0001             MOVS     R1,R0
   \   00000324   0x0020             MOVS     R0,R4
   \   00000326   0x.... 0x....      BL       __aeabi_fdiv
   \   0000032A   0x0001             MOVS     R1,R0
   \   0000032C   0x....             LDR      R0,??DataTable2_6  ;; 0xc1f00000
   \   0000032E   0x.... 0x....      BL       __aeabi_fsub
   \   00000332   0x....             LDR      R1,??DataTable2_1
   \   00000334   0x6008             STR      R0,[R1, #+0]
   \   00000336   0xE01F             B        ??Inductor_analyse_31
    543                  }
    544                  else 
    545                  {
    546                    Chazhi=-100 +40*(AD_inductor[0]-RefAd)/(AD_inductor[0]-AD_inductor[1]);   
   \                     ??Inductor_analyse_30: (+1)
   \   00000338   0x....             LDR      R0,??DataTable2_3
   \   0000033A   0x6800             LDR      R0,[R0, #+0]
   \   0000033C   0x.... 0x....      BL       __aeabi_i2f
   \   00000340   0x0001             MOVS     R1,R0
   \   00000342   0x....             LDR      R0,??DataTable2_4
   \   00000344   0x6800             LDR      R0,[R0, #+0]
   \   00000346   0x.... 0x....      BL       __aeabi_fsub
   \   0000034A   0x....             LDR      R1,??DataTable2_7  ;; 0x42200000
   \   0000034C   0x.... 0x....      BL       __aeabi_fmul
   \   00000350   0x0004             MOVS     R4,R0
   \   00000352   0x....             LDR      R0,??DataTable2_4
   \   00000354   0x6800             LDR      R0,[R0, #+0]
   \   00000356   0x....             LDR      R1,??DataTable2_4
   \   00000358   0x6849             LDR      R1,[R1, #+4]
   \   0000035A   0x.... 0x....      BL       __aeabi_fsub
   \   0000035E   0x0001             MOVS     R1,R0
   \   00000360   0x0020             MOVS     R0,R4
   \   00000362   0x.... 0x....      BL       __aeabi_fdiv
   \   00000366   0x....             LDR      R1,??DataTable2_8  ;; 0xc2c80000
   \   00000368   0x.... 0x....      BL       __aeabi_fadd
   \   0000036C   0x....             LDR      R1,??DataTable2_1
   \   0000036E   0x6008             STR      R0,[R1, #+0]
   \   00000370   0xE002             B        ??Inductor_analyse_31
    547                  }
    548                }
    549               else  
    550                 	Chazhi = -100;      //丢信号
   \                     ??Inductor_analyse_29: (+1)
   \   00000372   0x....             LDR      R0,??DataTable2_8  ;; 0xc2c80000
   \   00000374   0x....             LDR      R1,??DataTable2_1
   \   00000376   0x6008             STR      R0,[R1, #+0]
    551              } break;
   \                     ??Inductor_analyse_31: (+1)
   \   00000378   0xE0A1             B        ??Inductor_analyse_28
    552          /*********** 车在左右之间晃荡 ，分2种情况 ************/	
    553          /*                       左中差值  左电感   中电感   右电感   右中差值
    554                    
    555          车在最中间:               75        25       100      24    75
    556          差值=33-34*（100-25）/（100-24）=33-34*1.01=0
    557                    
    558          中电感最大,左电感>右电感: 31         57      88        5     83     
    559          差值=33-34*（88-57）/（88-5）=33-34*（31/83）=*0.373   
    560                                                51/103=*0.495
    561          临界电感值             69            3      72        70     2
    562          当达到临界电感值时，为中电感是最大电感时的最大差值，此时分数最小
    563              差值常数待定
    564          */
    565          //          Chazhi =  33 - 34*(Add_AD_value+AD_inductor[1]-AD_inductor[2])/(Add_AD_value+AD_inductor[1]-AD_inductor[0]);
    566          //电感值较大的与中电感相减值小，作分子，
    567          //电感值较小的与中电感相减值大，作分母，
    568          //中电感保持最大时，车偏，中电感变小，
    569          //    较大电感值变大，分子变小，
    570          //    较小电感值变小，分母变大，
    571          //分数变小，抑制差值作用变小，差值变大
    572          //总结：车跑偏时，分数变小，削减差值常数值作用变小， 差值变大 
    573          //总结：以最大电感为中电感为界 
    574            case 1://中间电感最大
    575               {
    576                  if(AD_inductor[1] > RefAd)   //已5修改  中间电感
   \                     ??Inductor_analyse_27: (+1)
   \   0000037A   0x....             LDR      R0,??DataTable2_3
   \   0000037C   0x6800             LDR      R0,[R0, #+0]
   \   0000037E   0x.... 0x....      BL       __aeabi_i2f
   \   00000382   0x....             LDR      R1,??DataTable2_4
   \   00000384   0x6849             LDR      R1,[R1, #+4]
   \   00000386   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000038A   0xD23A             BCS      ??Inductor_analyse_32
    577                  {  
    578                    if(AD_inductor[2] > AD_inductor[0])       //  左边大于右边偏右            
   \   0000038C   0x....             LDR      R0,??DataTable2_4
   \   0000038E   0x6800             LDR      R0,[R0, #+0]
   \   00000390   0x....             LDR      R1,??DataTable2_4
   \   00000392   0x6889             LDR      R1,[R1, #+8]
   \   00000394   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000398   0xD21A             BCS      ??Inductor_analyse_33
    579                     
    580          Chazhi =  30 - 30*(AD_inductor[1]-AD_inductor[2])/(AD_inductor[1]-AD_inductor[0]);
   \   0000039A   0x....             LDR      R0,??DataTable2_4
   \   0000039C   0x6840             LDR      R0,[R0, #+4]
   \   0000039E   0x....             LDR      R1,??DataTable2_4
   \   000003A0   0x6889             LDR      R1,[R1, #+8]
   \   000003A2   0x.... 0x....      BL       __aeabi_fsub
   \   000003A6   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   000003A8   0x.... 0x....      BL       __aeabi_fmul
   \   000003AC   0x0004             MOVS     R4,R0
   \   000003AE   0x....             LDR      R0,??DataTable2_4
   \   000003B0   0x6840             LDR      R0,[R0, #+4]
   \   000003B2   0x....             LDR      R1,??DataTable2_4
   \   000003B4   0x6809             LDR      R1,[R1, #+0]
   \   000003B6   0x.... 0x....      BL       __aeabi_fsub
   \   000003BA   0x0001             MOVS     R1,R0
   \   000003BC   0x0020             MOVS     R0,R4
   \   000003BE   0x.... 0x....      BL       __aeabi_fdiv
   \   000003C2   0x0001             MOVS     R1,R0
   \   000003C4   0x....             LDR      R0,??DataTable2_5  ;; 0x41f00000
   \   000003C6   0x.... 0x....      BL       __aeabi_fsub
   \   000003CA   0x....             LDR      R1,??DataTable2_1
   \   000003CC   0x6008             STR      R0,[R1, #+0]
   \   000003CE   0xE018             B        ??Inductor_analyse_32
    581                    else	                          //  右边大于左边偏左                    
    582          //          Chazhi = -34 + 34*(Add_AD_value+AD_inductor[1]-AD_inductor[0])/(Add_AD_value+AD_inductor[1]-AD_inductor[2]);
    583          Chazhi = -30 + 30*(AD_inductor[1]-AD_inductor[0])/(AD_inductor[1]-AD_inductor[2]);
   \                     ??Inductor_analyse_33: (+1)
   \   000003D0   0x....             LDR      R0,??DataTable2_4
   \   000003D2   0x6840             LDR      R0,[R0, #+4]
   \   000003D4   0x....             LDR      R1,??DataTable2_4
   \   000003D6   0x6809             LDR      R1,[R1, #+0]
   \   000003D8   0x.... 0x....      BL       __aeabi_fsub
   \   000003DC   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   000003DE   0x.... 0x....      BL       __aeabi_fmul
   \   000003E2   0x0004             MOVS     R4,R0
   \   000003E4   0x....             LDR      R0,??DataTable2_4
   \   000003E6   0x6840             LDR      R0,[R0, #+4]
   \   000003E8   0x....             LDR      R1,??DataTable2_4
   \   000003EA   0x6889             LDR      R1,[R1, #+8]
   \   000003EC   0x.... 0x....      BL       __aeabi_fsub
   \   000003F0   0x0001             MOVS     R1,R0
   \   000003F2   0x0020             MOVS     R0,R4
   \   000003F4   0x.... 0x....      BL       __aeabi_fdiv
   \   000003F8   0x....             LDR      R1,??DataTable2_6  ;; 0xc1f00000
   \   000003FA   0x.... 0x....      BL       __aeabi_fadd
   \   000003FE   0x....             LDR      R1,??DataTable2_1
   \   00000400   0x6008             STR      R0,[R1, #+0]
    584                  }                                                                          
    585               }  break;
   \                     ??Inductor_analyse_32: (+1)
   \   00000402   0xE05C             B        ??Inductor_analyse_28
    586          
    587          /***************车离开导线偏右，分3种情况 **************************/
    588          /*                       左中差值  左电感   中电感   右电感  左参差值 
    589          2电感最大,考虑2电感和中电感         
    590          车在最中间:               75        25       100      24   
    591               
    592          中电感>参考电感          18         83        65      0.1    83-20=63      
    593          中电感>参考电感          72         97        25      0.1    97-20=77
    594          差值=25+25*（18/63）
    595          差值=25+25*（72/77）
    596               
    597          中电感<参考电感          24         43        19      0.1    43-20=23      
    598          中电感<参考电感          28         38        10      0.1    38-20=18
    599          差值=100-34*(23/24)
    600          差值=100-34*(18/28)
    601           */         
    602           //2电感最大
    603            case 2:
    604              {
    605          //2电感>参考电感
    606                if(AD_inductor[2] > RefAd)
   \                     ??Inductor_analyse_26: (+1)
   \   00000404   0x....             LDR      R0,??DataTable2_3
   \   00000406   0x6800             LDR      R0,[R0, #+0]
   \   00000408   0x.... 0x....      BL       __aeabi_i2f
   \   0000040C   0x....             LDR      R1,??DataTable2_4
   \   0000040E   0x6889             LDR      R1,[R1, #+8]
   \   00000410   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000414   0xD250             BCS      ??Inductor_analyse_34
    607          	{
    608          //1电感>参考电感：车越偏,分数越小，差值越大，
    609          //最大差值50
    610                    if(AD_inductor[1] > RefAd)
   \   00000416   0x....             LDR      R0,??DataTable2_3
   \   00000418   0x6800             LDR      R0,[R0, #+0]
   \   0000041A   0x.... 0x....      BL       __aeabi_i2f
   \   0000041E   0x....             LDR      R1,??DataTable2_4
   \   00000420   0x6849             LDR      R1,[R1, #+4]
   \   00000422   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000426   0xD229             BCS      ??Inductor_analyse_35
    611          //        Chazhi = 25 + 25*(AD_inductor[2]-AD_inductor[1])/(AD_inductor[2]-RefAd);  
    612                    Chazhi = 30 + 30*(AD_inductor[2]-AD_inductor[1])/(AD_inductor[2]-RefAd);  
   \   00000428   0x....             LDR      R0,??DataTable2_4
   \   0000042A   0x6880             LDR      R0,[R0, #+8]
   \   0000042C   0x....             LDR      R1,??DataTable2_4
   \   0000042E   0x6849             LDR      R1,[R1, #+4]
   \   00000430   0x.... 0x....      BL       __aeabi_fsub
   \   00000434   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   00000436   0x.... 0x....      BL       __aeabi_fmul
   \   0000043A   0x0004             MOVS     R4,R0
   \   0000043C   0x....             LDR      R0,??DataTable2_3
   \   0000043E   0x6800             LDR      R0,[R0, #+0]
   \   00000440   0x.... 0x....      BL       __aeabi_i2f
   \   00000444   0x0001             MOVS     R1,R0
   \   00000446   0x....             LDR      R0,??DataTable2_4
   \   00000448   0x6880             LDR      R0,[R0, #+8]
   \   0000044A   0x.... 0x....      BL       __aeabi_fsub
   \   0000044E   0x0001             MOVS     R1,R0
   \   00000450   0x0020             MOVS     R0,R4
   \   00000452   0x.... 0x....      BL       __aeabi_fdiv
   \   00000456   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   00000458   0x.... 0x....      BL       __aeabi_fadd
   \   0000045C   0x....             LDR      R1,??DataTable2_1
   \   0000045E   0x6008             STR      R0,[R1, #+0]
   \   00000460   0xE02D             B        ??Inductor_analyse_36
   \   00000462   0xBF00             Nop      
   \                     ??Inductor_analyse_10:
   \   00000464   0x40A00000         DC32     0x40a00000
   \   00000468   0x........         DC32     ??max_old
   \   0000046C   0x........         DC32     position
   \   00000470   0x........         DC32     ??position_last
   \   00000474   0x........         DC32     Position_transit
   \   00000478   0x3F800001         DC32     0x3f800001
    613                    else 
    614          //参考电感>1电感:车越偏,分数越小，差值越大，
    615          //        Chazhi = 100 - 34*(AD_inductor[2]-RefAd)/(AD_inductor[2]-AD_inductor[1]); 
    616                    Chazhi = 100 - 40*(AD_inductor[2]-RefAd)/(AD_inductor[2]-AD_inductor[1]); 
   \                     ??Inductor_analyse_35: (+1)
   \   0000047C   0x....             LDR      R0,??DataTable2_3
   \   0000047E   0x6800             LDR      R0,[R0, #+0]
   \   00000480   0x.... 0x....      BL       __aeabi_i2f
   \   00000484   0x0001             MOVS     R1,R0
   \   00000486   0x....             LDR      R0,??DataTable2_4
   \   00000488   0x6880             LDR      R0,[R0, #+8]
   \   0000048A   0x.... 0x....      BL       __aeabi_fsub
   \   0000048E   0x....             LDR      R1,??DataTable2_7  ;; 0x42200000
   \   00000490   0x.... 0x....      BL       __aeabi_fmul
   \   00000494   0x0004             MOVS     R4,R0
   \   00000496   0x....             LDR      R0,??DataTable2_4
   \   00000498   0x6880             LDR      R0,[R0, #+8]
   \   0000049A   0x....             LDR      R1,??DataTable2_4
   \   0000049C   0x6849             LDR      R1,[R1, #+4]
   \   0000049E   0x.... 0x....      BL       __aeabi_fsub
   \   000004A2   0x0001             MOVS     R1,R0
   \   000004A4   0x0020             MOVS     R0,R4
   \   000004A6   0x.... 0x....      BL       __aeabi_fdiv
   \   000004AA   0x0001             MOVS     R1,R0
   \   000004AC   0x....             LDR      R0,??DataTable3  ;; 0x42c80000
   \   000004AE   0x.... 0x....      BL       __aeabi_fsub
   \   000004B2   0x....             LDR      R1,??DataTable2_1
   \   000004B4   0x6008             STR      R0,[R1, #+0]
   \   000004B6   0xE002             B        ??Inductor_analyse_36
    617                  }                                                                        
    618                 else
    619                	  Chazhi = 100;	                 //丢信号3
   \                     ??Inductor_analyse_34: (+1)
   \   000004B8   0x....             LDR      R0,??DataTable3  ;; 0x42c80000
   \   000004BA   0x....             LDR      R1,??DataTable2_1
   \   000004BC   0x6008             STR      R0,[R1, #+0]
    620              }  break;
    621             }
    622          //     
    623          // if(AD_inductor[3]>40&&AD_inductor[4]>40)
    624          //   Chazhi=Chazhi/3;
    625                 
    626               if(Chazhi>Chazhi_Max_New)
   \                     ??Inductor_analyse_36: (+1)
   \                     ??Inductor_analyse_28: (+1)
   \   000004BE   0x....             LDR      R0,??DataTable3_1
   \   000004C0   0x6800             LDR      R0,[R0, #+0]
   \   000004C2   0x....             LDR      R1,??DataTable2_1
   \   000004C4   0x6809             LDR      R1,[R1, #+0]
   \   000004C6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000004CA   0xD203             BCS      ??Inductor_analyse_37
    627                 Chazhi=Chazhi_Max_New;
   \   000004CC   0x....             LDR      R0,??DataTable3_1
   \   000004CE   0x6800             LDR      R0,[R0, #+0]
   \   000004D0   0x....             LDR      R1,??DataTable2_1
   \   000004D2   0x6008             STR      R0,[R1, #+0]
    628               if(Chazhi<-Chazhi_Max_New)
   \                     ??Inductor_analyse_37: (+1)
   \   000004D4   0x....             LDR      R0,??DataTable2_1
   \   000004D6   0x6800             LDR      R0,[R0, #+0]
   \   000004D8   0x....             LDR      R1,??DataTable3_1
   \   000004DA   0x6809             LDR      R1,[R1, #+0]
   \   000004DC   0x2280             MOVS     R2,#+128
   \   000004DE   0x0612             LSLS     R2,R2,#+24       ;; #-2147483648
   \   000004E0   0x4051             EORS     R1,R1,R2
   \   000004E2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000004E6   0xD206             BCS      ??Inductor_analyse_38
    629                 Chazhi=-Chazhi_Max_New;
   \   000004E8   0x....             LDR      R0,??DataTable3_1
   \   000004EA   0x6800             LDR      R0,[R0, #+0]
   \   000004EC   0x2180             MOVS     R1,#+128
   \   000004EE   0x0609             LSLS     R1,R1,#+24       ;; #-2147483648
   \   000004F0   0x4048             EORS     R0,R0,R1
   \   000004F2   0x....             LDR      R1,??DataTable2_1
   \   000004F4   0x6008             STR      R0,[R1, #+0]
    630             
    631               
    632            for(uint8 i=0;i<19;i++)
   \                     ??Inductor_analyse_38: (+1)
   \   000004F6   0x2000             MOVS     R0,#+0
   \   000004F8   0xE00E             B        ??Inductor_analyse_39
   \   000004FA   0xBF00             Nop      
   \                     ??Inductor_analyse_18:
   \   000004FC   0x........         DC32     AD_0_max
    633              {
    634                  Chazhi_Chucun[i]=Chazhi_Chucun[i+1];
   \                     ??Inductor_analyse_40: (+1)
   \   00000500   0x....             LDR      R1,??DataTable4
   \   00000502   0xB2C0             UXTB     R0,R0
   \   00000504   0x2204             MOVS     R2,#+4
   \   00000506   0x4342             MULS     R2,R0,R2
   \   00000508   0x1889             ADDS     R1,R1,R2
   \   0000050A   0x6849             LDR      R1,[R1, #+4]
   \   0000050C   0x....             LDR      R2,??DataTable4
   \   0000050E   0xB2C0             UXTB     R0,R0
   \   00000510   0x2304             MOVS     R3,#+4
   \   00000512   0x4343             MULS     R3,R0,R3
   \   00000514   0x50D1             STR      R1,[R2, R3]
    635                   
    636              }
   \   00000516   0x1C40             ADDS     R0,R0,#+1
   \                     ??Inductor_analyse_39: (+1)
   \   00000518   0xB2C0             UXTB     R0,R0
   \   0000051A   0x2813             CMP      R0,#+19
   \   0000051C   0xDBF0             BLT      ??Inductor_analyse_40
    637                  Chazhi_Chucun[19]=Chazhi;
   \   0000051E   0x....             LDR      R0,??DataTable2_1
   \   00000520   0x6800             LDR      R0,[R0, #+0]
   \   00000522   0x....             LDR      R1,??DataTable4
   \   00000524   0x64C8             STR      R0,[R1, #+76]
    638          
    639              Chazhi_Old=Chazhi_Chucun[0];
   \   00000526   0x....             LDR      R0,??DataTable4
   \   00000528   0x6800             LDR      R0,[R0, #+0]
   \   0000052A   0x....             LDR      R1,??DataTable4_1
   \   0000052C   0x6008             STR      R0,[R1, #+0]
    640               Chazhi_Rate=Chazhi_Old-Chazhi;//D
   \   0000052E   0x....             LDR      R0,??DataTable4_1
   \   00000530   0x6800             LDR      R0,[R0, #+0]
   \   00000532   0x....             LDR      R1,??DataTable2_1
   \   00000534   0x6809             LDR      R1,[R1, #+0]
   \   00000536   0x.... 0x....      BL       __aeabi_fsub
   \   0000053A   0x....             LDR      R1,??DataTable4_2
   \   0000053C   0x6008             STR      R0,[R1, #+0]
    641          
    642          //     if(Rate_Count++>19)
    643          //     {
    644          //        Rate_Count=0;
    645          //        Chazhi_Old=Chazhi;
    646          //     }
    647          //      Chazhi_Rate=Chazhi_Old-Chazhi;//D
    648          
    649               
    650          //     Chazhi_Rate=Chazhi-Chazhi_Old;//P
    651               
    652          }
   \   0000053E   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .data, align 2
   \                     ??max_old:
   \   00000000   0x0001             DC16 1

   \                                 In section .data, align 2
   \                     ??position_last:
   \   00000000   0x0001             DC16 1
    653          /*   差值 竖直电感   差值 竖直电感
    654          直道      15,20
    655          
    656          弯道   1     20      0       10
    657                15     35      10      22
    658                30     51      20      29
    659                49     49      30      31
    660                60     34      40      28
    661                68     23      50      18
    662                78     11      59      0.1
    663                94     2
    664          右竖直电感，差值负
    665          
    666          
    667          */

   \                                 In section .text, align 2, keep-with-next
    668          void Small_S(void)
    669          {
   \                     Small_S: (+1)
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0xB0E5             SUB      SP,SP,#+404
    670          float Road_Remember_SZ[100]={0}; 
   \   00000004   0x4668             MOV      R0,SP
   \   00000006   0x21C8             MOVS     R1,#+200
   \   00000008   0x0049             LSLS     R1,R1,#+1        ;; #+400
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    671          int XS=0,XS_NO=0,XS_Flag=0,
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2400             MOVS     R4,#+0
   \   00000012   0x2500             MOVS     R5,#+0
    672          //  StraightRoad=0,//小车直走次数
    673            WindingRoad = 0,
   \   00000014   0x2200             MOVS     R2,#+0
    674              WindingRoad_Flag;//小车左转,右转次数
    675            
    676          
    677             
    678            for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \   00000016   0x2000             MOVS     R0,#+0
   \   00000018   0xE00B             B        ??Small_S_0
    679            {
    680                Road_Remember[i] = Road_Remember[i+1];
   \                     ??Small_S_1: (+1)
   \   0000001A   0x....             LDR      R1,??DataTable4_3
   \   0000001C   0xB240             SXTB     R0,R0
   \   0000001E   0x2204             MOVS     R2,#+4
   \   00000020   0x4342             MULS     R2,R0,R2
   \   00000022   0x1889             ADDS     R1,R1,R2
   \   00000024   0x6849             LDR      R1,[R1, #+4]
   \   00000026   0x....             LDR      R2,??DataTable4_3
   \   00000028   0xB240             SXTB     R0,R0
   \   0000002A   0x2304             MOVS     R3,#+4
   \   0000002C   0x4343             MULS     R3,R0,R3
   \   0000002E   0x50D1             STR      R1,[R2, R3]
    681            }
   \   00000030   0x1C40             ADDS     R0,R0,#+1
   \                     ??Small_S_0: (+1)
   \   00000032   0xB240             SXTB     R0,R0
   \   00000034   0x2831             CMP      R0,#+49
   \   00000036   0xDBF0             BLT      ??Small_S_1
    682            Road_Remember[P-1] = abs_f(Chazhi);	//该值为电感检测值-100~100
   \   00000038   0x....             LDR      R0,??DataTable4_4
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x.... 0x....      BL       abs_f
   \   00000040   0x....             LDR      R1,??DataTable4_5
   \   00000042   0x6008             STR      R0,[R1, #+0]
    683            
    684            StraightRoad=0;//小车直走次数
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x....             LDR      R1,??DataTable4_6
   \   00000048   0x6008             STR      R0,[R1, #+0]
    685            WindingRoad = 0;//小车左转,右转次数
   \   0000004A   0x2200             MOVS     R2,#+0
    686            
    687            for(int8_t i = 0;i < P; i++)
   \   0000004C   0x2300             MOVS     R3,#+0
   \   0000004E   0xE001             B        ??Small_S_2
    688            {        
    689              if(Road_Remember[i] < 20)	//在-35~35范围内，保证差值与位置的线性关系
    690              {
    691                 StraightRoad++;		//判断直道稳定性，分别列出一百组信号
    692              }		
    693              else 
    694                WindingRoad++;		//判断弯道稳定性---右转累   
   \                     ??Small_S_3: (+1)
   \   00000050   0x1C52             ADDS     R2,R2,#+1
   \                     ??Small_S_4: (+1)
   \   00000052   0x1C5B             ADDS     R3,R3,#+1
   \                     ??Small_S_2: (+1)
   \   00000054   0xB25B             SXTB     R3,R3
   \   00000056   0x2B32             CMP      R3,#+50
   \   00000058   0xDA0E             BGE      ??Small_S_5
   \   0000005A   0x....             LDR      R0,??DataTable4_3
   \   0000005C   0xB25B             SXTB     R3,R3
   \   0000005E   0x2104             MOVS     R1,#+4
   \   00000060   0x4359             MULS     R1,R3,R1
   \   00000062   0x5840             LDR      R0,[R0, R1]
   \   00000064   0x....             LDR      R1,??DataTable4_7  ;; 0x41a00000
   \   00000066   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000006A   0xD2F1             BCS      ??Small_S_3
   \   0000006C   0x....             LDR      R0,??DataTable4_6
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
   \   00000070   0x1C40             ADDS     R0,R0,#+1
   \   00000072   0x....             LDR      R1,??DataTable4_6
   \   00000074   0x6008             STR      R0,[R1, #+0]
   \   00000076   0xE7EC             B        ??Small_S_4
    695            }
    696            StraightRoad_Flag = 0;//直道标志
   \                     ??Small_S_5: (+1)
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x....             LDR      R1,??DataTable4_8
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    697            WindingRoad_Flag = 0;//左转,右转标志                 
   \   0000007E   0x2200             MOVS     R2,#+0
    698            if(StraightRoad >= 90)
   \   00000080   0x....             LDR      R0,??DataTable4_6
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x285A             CMP      R0,#+90
   \   00000086   0xDB02             BLT      ??Small_S_6
    699            {
    700            StraightRoad_Flag = 1;
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x....             LDR      R1,??DataTable4_8
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    701            }
    702            if(WindingRoad_Left >= 30)
   \                     ??Small_S_6: (+1)
   \   0000008E   0x....             LDR      R0,??DataTable4_9
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0x281E             CMP      R0,#+30
   \   00000094   0xDB00             BLT      ??Small_S_7
    703            {
    704              WindingRoad_Flag = 1;
   \   00000096   0x2201             MOVS     R2,#+1
    705            }
    706           
    707            
    708          
    709            for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \                     ??Small_S_7: (+1)
   \   00000098   0x2000             MOVS     R0,#+0
   \   0000009A   0xE00B             B        ??Small_S_8
    710            {
    711                Road_Remember_SZ[i] = Road_Remember_SZ[i+1];
   \                     ??Small_S_9: (+1)
   \   0000009C   0x4669             MOV      R1,SP
   \   0000009E   0xB240             SXTB     R0,R0
   \   000000A0   0x2304             MOVS     R3,#+4
   \   000000A2   0x4343             MULS     R3,R0,R3
   \   000000A4   0x18C9             ADDS     R1,R1,R3
   \   000000A6   0x6849             LDR      R1,[R1, #+4]
   \   000000A8   0x466B             MOV      R3,SP
   \   000000AA   0xB240             SXTB     R0,R0
   \   000000AC   0x2404             MOVS     R4,#+4
   \   000000AE   0x4344             MULS     R4,R0,R4
   \   000000B0   0x5119             STR      R1,[R3, R4]
    712            }
   \   000000B2   0x1C40             ADDS     R0,R0,#+1
   \                     ??Small_S_8: (+1)
   \   000000B4   0xB240             SXTB     R0,R0
   \   000000B6   0x2831             CMP      R0,#+49
   \   000000B8   0xDBF0             BLT      ??Small_S_9
    713            
    714            if(AD_inductor[3]>AD_inductor[4])
   \   000000BA   0x....             LDR      R0,??DataTable4_10
   \   000000BC   0x6900             LDR      R0,[R0, #+16]
   \   000000BE   0x....             LDR      R1,??DataTable4_10
   \   000000C0   0x68C9             LDR      R1,[R1, #+12]
   \   000000C2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000C6   0xD204             BCS      ??Small_S_10
    715               Road_Remember[P-1] = AD_inductor[3];	
   \   000000C8   0x....             LDR      R0,??DataTable4_10
   \   000000CA   0x68C0             LDR      R0,[R0, #+12]
   \   000000CC   0x....             LDR      R1,??DataTable4_5
   \   000000CE   0x6008             STR      R0,[R1, #+0]
   \   000000D0   0xE003             B        ??Small_S_11
    716            else
    717               Road_Remember[P-1] = AD_inductor[4];	
   \                     ??Small_S_10: (+1)
   \   000000D2   0x....             LDR      R0,??DataTable4_10
   \   000000D4   0x6900             LDR      R0,[R0, #+16]
   \   000000D6   0x....             LDR      R1,??DataTable4_5
   \   000000D8   0x6008             STR      R0,[R1, #+0]
    718            
    719            XS=0; 
   \                     ??Small_S_11: (+1)
   \   000000DA   0x2300             MOVS     R3,#+0
    720                XS_NO=0;
   \   000000DC   0x2400             MOVS     R4,#+0
    721                  XS_Flag=0;
   \   000000DE   0x2500             MOVS     R5,#+0
    722          
    723            if(WindingRoad_Flag==1&&AD_inductor[1]<110)
   \   000000E0   0x2A01             CMP      R2,#+1
   \   000000E2   0xD125             BNE      ??Small_S_12
   \   000000E4   0x....             LDR      R0,??DataTable4_10
   \   000000E6   0x6840             LDR      R0,[R0, #+4]
   \   000000E8   0x....             LDR      R1,??DataTable4_11  ;; 0x42dc0000
   \   000000EA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000EE   0xD21F             BCS      ??Small_S_12
    724            { 
    725                 for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \   000000F0   0x2200             MOVS     R2,#+0
   \   000000F2   0xE014             B        ??Small_S_13
    726                {
    727                   if(Road_Remember_SZ[i]<35)
   \                     ??Small_S_14: (+1)
   \   000000F4   0x4668             MOV      R0,SP
   \   000000F6   0xB252             SXTB     R2,R2
   \   000000F8   0x2104             MOVS     R1,#+4
   \   000000FA   0x4351             MULS     R1,R2,R1
   \   000000FC   0x5840             LDR      R0,[R0, R1]
   \   000000FE   0x....             LDR      R1,??DataTable5  ;; 0x420c0000
   \   00000100   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000104   0xD200             BCS      ??Small_S_15
    728                      XS++; 
   \   00000106   0x1C5B             ADDS     R3,R3,#+1
    729                   if(Road_Remember_SZ[i]>40)
   \                     ??Small_S_15: (+1)
   \   00000108   0x4668             MOV      R0,SP
   \   0000010A   0xB252             SXTB     R2,R2
   \   0000010C   0x2104             MOVS     R1,#+4
   \   0000010E   0x4351             MULS     R1,R2,R1
   \   00000110   0x5840             LDR      R0,[R0, R1]
   \   00000112   0x....             LDR      R1,??DataTable5_1  ;; 0x42200001
   \   00000114   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000118   0xD800             BHI      ??Small_S_16
    730                      XS_NO++;
   \   0000011A   0x1C64             ADDS     R4,R4,#+1
    731                }
   \                     ??Small_S_16: (+1)
   \   0000011C   0x1C52             ADDS     R2,R2,#+1
   \                     ??Small_S_13: (+1)
   \   0000011E   0xB252             SXTB     R2,R2
   \   00000120   0x2A31             CMP      R2,#+49
   \   00000122   0xDBE7             BLT      ??Small_S_14
    732                if(XS>95)
   \   00000124   0x2B60             CMP      R3,#+96
   \   00000126   0xDB00             BLT      ??Small_S_17
    733                  XS_Flag=1;
   \   00000128   0x2501             MOVS     R5,#+1
    734                if(XS_NO>1)
   \                     ??Small_S_17: (+1)
   \   0000012A   0x2C02             CMP      R4,#+2
   \   0000012C   0xDB00             BLT      ??Small_S_12
    735                  XS_Flag=0;
   \   0000012E   0x2500             MOVS     R5,#+0
    736            }
    737            if(XS_Flag==1)  
   \                     ??Small_S_12: (+1)
   \   00000130   0x2D01             CMP      R5,#+1
   \   00000132   0xD103             BNE      ??Small_S_18
    738            {
    739          //     Chazhi=Chazhi/3;
    740               BUZZER_ON;
   \   00000134   0x2101             MOVS     R1,#+1
   \   00000136   0x2018             MOVS     R0,#+24
   \   00000138   0x.... 0x....      BL       GpioSet
    741            }
    742                   
    743                
    744                
    745            }
   \                     ??Small_S_18: (+1)
   \   0000013C   0xB065             ADD      SP,SP,#+404
   \   0000013E   0xBD30             POP      {R4,R5,PC}       ;; return

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000104   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000114   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000124   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000134   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000144   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000154   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000174   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000184   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    746          
    747          
    748          /*************************************************************************************************************
    749          检测弯道还是直道
    750          ******************************************************/

   \                                 In section .text, align 2, keep-with-next
    751          void Test_RoadInfo(void) 
    752          {
   \                     Test_RoadInfo: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    753            StraightRoad_Old = StraightRoad;
   \   00000002   0x....             LDR      R0,??DataTable4_6
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR      R1,??DataTable5_2
   \   00000008   0x6008             STR      R0,[R1, #+0]
    754             
    755            for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE00B             B        ??Test_RoadInfo_0
    756            {
    757                Road_Remember[i] = Road_Remember[i+1];
   \                     ??Test_RoadInfo_1: (+1)
   \   0000000E   0x....             LDR      R1,??DataTable4_3
   \   00000010   0xB240             SXTB     R0,R0
   \   00000012   0x2204             MOVS     R2,#+4
   \   00000014   0x4342             MULS     R2,R0,R2
   \   00000016   0x1889             ADDS     R1,R1,R2
   \   00000018   0x6849             LDR      R1,[R1, #+4]
   \   0000001A   0x....             LDR      R2,??DataTable4_3
   \   0000001C   0xB240             SXTB     R0,R0
   \   0000001E   0x2304             MOVS     R3,#+4
   \   00000020   0x4343             MULS     R3,R0,R3
   \   00000022   0x50D1             STR      R1,[R2, R3]
    758            }
   \   00000024   0x1C40             ADDS     R0,R0,#+1
   \                     ??Test_RoadInfo_0: (+1)
   \   00000026   0xB240             SXTB     R0,R0
   \   00000028   0x2831             CMP      R0,#+49
   \   0000002A   0xDBF0             BLT      ??Test_RoadInfo_1
    759            Road_Remember[P-1] = Chazhi;	//该值为电感检测值-100~100
   \   0000002C   0x....             LDR      R0,??DataTable4_4
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x....             LDR      R1,??DataTable4_5
   \   00000032   0x6008             STR      R0,[R1, #+0]
    760            
    761            StraightRoad=0;;//小车直走次数
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x....             LDR      R1,??DataTable4_6
   \   00000038   0x6008             STR      R0,[R1, #+0]
    762            WindingRoad=0;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x....             LDR      R1,??DataTable5_3
   \   0000003E   0x6008             STR      R0,[R1, #+0]
    763            WindingRoad_Left = 0;WindingRoad_Right = 0;//小车左转,右转次数
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR      R1,??DataTable4_9
   \   00000044   0x6008             STR      R0,[R1, #+0]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x....             LDR      R1,??DataTable5_4
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    764            
    765          //  for(int8_t i = 0;i < P; i++)
    766          //  {        
    767          //    if(Road_Remember[i] > -20 && Road_Remember[i] < 20)	//在-35~35范围内，保证差值与位置的线性关系
    768          //    {
    769          //      StraightRoad++;		//判断直道稳定性，分别列出一百组信号
    770          //    }
    771          //		
    772          //    else if(Road_Remember[i] >= -300 && Road_Remember[i] <= -20)//100,38
    773          //   {
    774          //     WindingRoad_Right++;		//判断弯道稳定性---右转累加
    775          //   }
    776          //   else if(Road_Remember[i] >= 20 && Road_Remember[i] <= 300)
    777          //   {
    778          //      WindingRoad_Left++;		//判断弯道稳定性---左转累加
    779          //   }
    780              
    781          //  }
    782            
    783            for(int8_t i = 0;i < P; i++)
   \   0000004C   0x2400             MOVS     R4,#+0
   \   0000004E   0xE006             B        ??Test_RoadInfo_2
    784            {        
    785              if(abs_f(Road_Remember[i])< 15)	//在-35~35范围内，保证差值与位置的线性关系
    786              {
    787                WindingRoad--;		//判断直道稳定性，分别列出一百组信号
    788              }		
    789              else 
    790              {
    791                WindingRoad++;		//判断弯道稳定性---左转累加
    792              }
    793             
    794            StraightRoad_Flag = 0;//直道标志
    795            WindingRoad_Flag=0;
    796            WindingRoad_Left_Flag = 0,WindingRoad_Right_Flag = 0;//左转,右转标志                 
    797            if(WindingRoad <10)
    798            {
    799            StraightRoad_Flag = 1;
    800                 WindingRoad_Flag=0;
    801          
    802            }
    803          else
    804          {
    805               WindingRoad_Flag=1;
   \                     ??Test_RoadInfo_3: (+1)
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x....             LDR      R1,??DataTable5_5
   \   00000054   0x6008             STR      R0,[R1, #+0]
    806                 StraightRoad_Flag = 0;
   \   00000056   0x2000             MOVS     R0,#+0
   \   00000058   0x....             LDR      R1,??DataTable4_8
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    807          
    808            }  
   \                     ??Test_RoadInfo_4: (+1)
   \   0000005C   0x1C64             ADDS     R4,R4,#+1
   \                     ??Test_RoadInfo_2: (+1)
   \   0000005E   0xB264             SXTB     R4,R4
   \   00000060   0x2C32             CMP      R4,#+50
   \   00000062   0xDA2C             BGE      ??Test_RoadInfo_5
   \   00000064   0x....             LDR      R0,??DataTable4_3
   \   00000066   0xB264             SXTB     R4,R4
   \   00000068   0x2104             MOVS     R1,#+4
   \   0000006A   0x4361             MULS     R1,R4,R1
   \   0000006C   0x5840             LDR      R0,[R0, R1]
   \   0000006E   0x.... 0x....      BL       abs_f
   \   00000072   0x....             LDR      R1,??DataTable5_6  ;; 0x41700000
   \   00000074   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000078   0xD205             BCS      ??Test_RoadInfo_6
   \   0000007A   0x....             LDR      R0,??DataTable5_3
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0x1E40             SUBS     R0,R0,#+1
   \   00000080   0x....             LDR      R1,??DataTable5_3
   \   00000082   0x6008             STR      R0,[R1, #+0]
   \   00000084   0xE004             B        ??Test_RoadInfo_7
   \                     ??Test_RoadInfo_6: (+1)
   \   00000086   0x....             LDR      R0,??DataTable5_3
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \   0000008C   0x....             LDR      R1,??DataTable5_3
   \   0000008E   0x6008             STR      R0,[R1, #+0]
   \                     ??Test_RoadInfo_7: (+1)
   \   00000090   0x2000             MOVS     R0,#+0
   \   00000092   0x....             LDR      R1,??DataTable4_8
   \   00000094   0x6008             STR      R0,[R1, #+0]
   \   00000096   0x2000             MOVS     R0,#+0
   \   00000098   0x....             LDR      R1,??DataTable5_5
   \   0000009A   0x6008             STR      R0,[R1, #+0]
   \   0000009C   0x2000             MOVS     R0,#+0
   \   0000009E   0x....             LDR      R1,??DataTable5_7
   \   000000A0   0x6008             STR      R0,[R1, #+0]
   \   000000A2   0x2000             MOVS     R0,#+0
   \   000000A4   0x....             LDR      R1,??DataTable5_8
   \   000000A6   0x6008             STR      R0,[R1, #+0]
   \   000000A8   0x....             LDR      R0,??DataTable5_3
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x280A             CMP      R0,#+10
   \   000000AE   0xDACF             BGE      ??Test_RoadInfo_3
   \   000000B0   0x2001             MOVS     R0,#+1
   \   000000B2   0x....             LDR      R1,??DataTable4_8
   \   000000B4   0x6008             STR      R0,[R1, #+0]
   \   000000B6   0x2000             MOVS     R0,#+0
   \   000000B8   0x....             LDR      R1,??DataTable5_5
   \   000000BA   0x6008             STR      R0,[R1, #+0]
   \   000000BC   0xE7CE             B        ??Test_RoadInfo_4
    809          }
    810          
    811          }
   \                     ??Test_RoadInfo_5: (+1)
   \   000000BE   0xBD10             POP      {R4,PC}          ;; return
    812          /*************************************************************************************************************
    813          检测弯道还是直道:利用两个竖直电感
    814          ******************************************************/

   \                                 In section .text, align 2, keep-with-next
    815          void Test_RoadInfo_Shuzhi(void) 
    816          {
   \                     Test_RoadInfo_Shuzhi: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0E5             SUB      SP,SP,#+404
    817            StraightRoad_Old = StraightRoad;
   \   00000004   0x....             LDR      R0,??DataTable5_9
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x....             LDR      R1,??DataTable5_2
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    818          #define SZ 50
    819          float Road_Remember_RI[SZ]={0},Road_Remember_LI[SZ]={0}; 
   \   0000000C   0xA832             ADD      R0,SP,#+200
   \   0000000E   0x21C8             MOVS     R1,#+200
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0x21C8             MOVS     R1,#+200
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
    820          
    821            for(int8_t i = 0;i < SZ-1; i++)   //将所有更新的数据往前移1位
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE00B             B        ??Test_RoadInfo_Shuzhi_0
    822            {
    823                Road_Remember_RI[i] = Road_Remember_RI[i+1];
   \                     ??Test_RoadInfo_Shuzhi_1: (+1)
   \   00000020   0xA932             ADD      R1,SP,#+200
   \   00000022   0xB240             SXTB     R0,R0
   \   00000024   0x2204             MOVS     R2,#+4
   \   00000026   0x4342             MULS     R2,R0,R2
   \   00000028   0x1889             ADDS     R1,R1,R2
   \   0000002A   0x6849             LDR      R1,[R1, #+4]
   \   0000002C   0xAA32             ADD      R2,SP,#+200
   \   0000002E   0xB240             SXTB     R0,R0
   \   00000030   0x2304             MOVS     R3,#+4
   \   00000032   0x4343             MULS     R3,R0,R3
   \   00000034   0x50D1             STR      R1,[R2, R3]
    824            }
   \   00000036   0x1C40             ADDS     R0,R0,#+1
   \                     ??Test_RoadInfo_Shuzhi_0: (+1)
   \   00000038   0xB240             SXTB     R0,R0
   \   0000003A   0x2831             CMP      R0,#+49
   \   0000003C   0xDBF0             BLT      ??Test_RoadInfo_Shuzhi_1
    825            Road_Remember[SZ-1] = AD_inductor[3];	
   \   0000003E   0x....             LDR      R0,??DataTable5_10
   \   00000040   0x68C0             LDR      R0,[R0, #+12]
   \   00000042   0x....             LDR      R1,??DataTable5_11
   \   00000044   0x6008             STR      R0,[R1, #+0]
    826            
    827             for(int8_t i = 0;i < SZ-1; i++)   //将所有更新的数据往前移1位
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0xE00B             B        ??Test_RoadInfo_Shuzhi_2
    828            {
    829                Road_Remember_LI[i] = Road_Remember_LI[i+1];
   \                     ??Test_RoadInfo_Shuzhi_3: (+1)
   \   0000004A   0x4669             MOV      R1,SP
   \   0000004C   0xB240             SXTB     R0,R0
   \   0000004E   0x2204             MOVS     R2,#+4
   \   00000050   0x4342             MULS     R2,R0,R2
   \   00000052   0x1889             ADDS     R1,R1,R2
   \   00000054   0x6849             LDR      R1,[R1, #+4]
   \   00000056   0x466A             MOV      R2,SP
   \   00000058   0xB240             SXTB     R0,R0
   \   0000005A   0x2304             MOVS     R3,#+4
   \   0000005C   0x4343             MULS     R3,R0,R3
   \   0000005E   0x50D1             STR      R1,[R2, R3]
    830            }
   \   00000060   0x1C40             ADDS     R0,R0,#+1
   \                     ??Test_RoadInfo_Shuzhi_2: (+1)
   \   00000062   0xB240             SXTB     R0,R0
   \   00000064   0x2831             CMP      R0,#+49
   \   00000066   0xDBF0             BLT      ??Test_RoadInfo_Shuzhi_3
    831            Road_Remember[SZ-1] = AD_inductor[4];	
   \   00000068   0x....             LDR      R0,??DataTable5_10
   \   0000006A   0x6900             LDR      R0,[R0, #+16]
   \   0000006C   0x....             LDR      R1,??DataTable5_11
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    832            
    833            StraightRoad=0;;//小车直走次数
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x....             LDR      R1,??DataTable5_9
   \   00000074   0x6008             STR      R0,[R1, #+0]
    834            WindingRoad_Left = 0;WindingRoad_Right = 0;//小车左转,右转次数
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x....             LDR      R1,??DataTable5_12
   \   0000007A   0x6008             STR      R0,[R1, #+0]
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x....             LDR      R1,??DataTable5_4
   \   00000080   0x6008             STR      R0,[R1, #+0]
    835            
    836            for(int8_t i = 0;i < SZ; i++)
   \   00000082   0x2200             MOVS     R2,#+0
   \   00000084   0xE005             B        ??Test_RoadInfo_Shuzhi_4
    837            {      	
    838                if(Road_Remember_RI[i]>15&&Road_Remember_LI[i]<1)//100,38
    839                {
    840                    WindingRoad_Right++;		//判断弯道稳定性---右转累加
    841                }
    842                else if(Road_Remember_LI[i] >15 && Road_Remember_RI[i] <1)//100,38
    843                {
    844                    WindingRoad_Left++;		//判断弯道稳定性---左转累加
    845                }
    846                else 
    847                {
    848                    StraightRoad++; 
   \                     ??Test_RoadInfo_Shuzhi_5: (+1)
   \   00000086   0x....             LDR      R0,??DataTable5_9
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x1C40             ADDS     R0,R0,#+1
   \   0000008C   0x....             LDR      R1,??DataTable5_9
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    849                }         
   \                     ??Test_RoadInfo_Shuzhi_6: (+1)
   \   00000090   0x1C52             ADDS     R2,R2,#+1
   \                     ??Test_RoadInfo_Shuzhi_4: (+1)
   \   00000092   0xB252             SXTB     R2,R2
   \   00000094   0x2A32             CMP      R2,#+50
   \   00000096   0xDA31             BGE      ??Test_RoadInfo_Shuzhi_7
   \   00000098   0xA832             ADD      R0,SP,#+200
   \   0000009A   0xB252             SXTB     R2,R2
   \   0000009C   0x2104             MOVS     R1,#+4
   \   0000009E   0x4351             MULS     R1,R2,R1
   \   000000A0   0x5840             LDR      R0,[R0, R1]
   \   000000A2   0x....             LDR      R1,??DataTable6  ;; 0x41700001
   \   000000A4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000A8   0xD80F             BHI      ??Test_RoadInfo_Shuzhi_8
   \   000000AA   0x4668             MOV      R0,SP
   \   000000AC   0xB252             SXTB     R2,R2
   \   000000AE   0x2104             MOVS     R1,#+4
   \   000000B0   0x4351             MULS     R1,R2,R1
   \   000000B2   0x5840             LDR      R0,[R0, R1]
   \   000000B4   0x21FE             MOVS     R1,#+254
   \   000000B6   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   000000B8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000BC   0xD205             BCS      ??Test_RoadInfo_Shuzhi_8
   \   000000BE   0x....             LDR      R0,??DataTable5_4
   \   000000C0   0x6800             LDR      R0,[R0, #+0]
   \   000000C2   0x1C40             ADDS     R0,R0,#+1
   \   000000C4   0x....             LDR      R1,??DataTable5_4
   \   000000C6   0x6008             STR      R0,[R1, #+0]
   \   000000C8   0xE7E2             B        ??Test_RoadInfo_Shuzhi_6
   \                     ??Test_RoadInfo_Shuzhi_8: (+1)
   \   000000CA   0x4668             MOV      R0,SP
   \   000000CC   0xB252             SXTB     R2,R2
   \   000000CE   0x2104             MOVS     R1,#+4
   \   000000D0   0x4351             MULS     R1,R2,R1
   \   000000D2   0x5840             LDR      R0,[R0, R1]
   \   000000D4   0x....             LDR      R1,??DataTable6  ;; 0x41700001
   \   000000D6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000DA   0xD8D4             BHI      ??Test_RoadInfo_Shuzhi_5
   \   000000DC   0xA832             ADD      R0,SP,#+200
   \   000000DE   0xB252             SXTB     R2,R2
   \   000000E0   0x2104             MOVS     R1,#+4
   \   000000E2   0x4351             MULS     R1,R2,R1
   \   000000E4   0x5840             LDR      R0,[R0, R1]
   \   000000E6   0x21FE             MOVS     R1,#+254
   \   000000E8   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   000000EA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000EE   0xD2CA             BCS      ??Test_RoadInfo_Shuzhi_5
   \   000000F0   0x....             LDR      R0,??DataTable5_12
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0x1C40             ADDS     R0,R0,#+1
   \   000000F6   0x....             LDR      R1,??DataTable5_12
   \   000000F8   0x6008             STR      R0,[R1, #+0]
   \   000000FA   0xE7C9             B        ??Test_RoadInfo_Shuzhi_6
    850            }
    851            
    852            StraightRoad_Flag = 0;//直道标志
   \                     ??Test_RoadInfo_Shuzhi_7: (+1)
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0x....             LDR      R1,??DataTable6_1
   \   00000100   0x6008             STR      R0,[R1, #+0]
    853            WindingRoad_Left_Flag = 0;WindingRoad_Right_Flag = 0;//左转,右转标志                 
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x....             LDR      R1,??DataTable5_7
   \   00000106   0x6008             STR      R0,[R1, #+0]
   \   00000108   0x2000             MOVS     R0,#+0
   \   0000010A   0x....             LDR      R1,??DataTable5_8
   \   0000010C   0x6008             STR      R0,[R1, #+0]
    854            
    855            if(StraightRoad >= 15)
   \   0000010E   0x....             LDR      R0,??DataTable5_9
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x280F             CMP      R0,#+15
   \   00000114   0xDB02             BLT      ??Test_RoadInfo_Shuzhi_9
    856            {
    857            StraightRoad_Flag = 1;
   \   00000116   0x2001             MOVS     R0,#+1
   \   00000118   0x....             LDR      R1,??DataTable6_1
   \   0000011A   0x6008             STR      R0,[R1, #+0]
    858            }
    859            if(WindingRoad_Left >= 5)//50
   \                     ??Test_RoadInfo_Shuzhi_9: (+1)
   \   0000011C   0x....             LDR      R0,??DataTable5_12
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0x2805             CMP      R0,#+5
   \   00000122   0xDB02             BLT      ??Test_RoadInfo_Shuzhi_10
    860            {
    861              WindingRoad_Left_Flag = 1;
   \   00000124   0x2001             MOVS     R0,#+1
   \   00000126   0x....             LDR      R1,??DataTable5_7
   \   00000128   0x6008             STR      R0,[R1, #+0]
    862            }
    863            if(WindingRoad_Right >= 5)
   \                     ??Test_RoadInfo_Shuzhi_10: (+1)
   \   0000012A   0x....             LDR      R0,??DataTable5_4
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x2805             CMP      R0,#+5
   \   00000130   0xDB02             BLT      ??Test_RoadInfo_Shuzhi_11
    864            {
    865              WindingRoad_Right_Flag = 1;
   \   00000132   0x2001             MOVS     R0,#+1
   \   00000134   0x....             LDR      R1,??DataTable5_8
   \   00000136   0x6008             STR      R0,[R1, #+0]
    866            }       
    867          }
   \                     ??Test_RoadInfo_Shuzhi_11: (+1)
   \   00000138   0xB065             ADD      SP,SP,#+404
   \   0000013A   0xBD00             POP      {PC}             ;; return

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    868          
    869          
    870          
    871          
    872          
    873          
    874          
    875          
    876          /*******************确定电感最大最小值**********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    877          void Inductor_Check(void)
    878          {
   \                     Inductor_Check: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    879            //起始电感值滤波:确定最低电感值
    880          if(AD_valu[0]<500&&AD_valu[1]<500&&AD_valu[2]<500)
   \   00000002   0x....             LDR      R0,??DataTable6_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x21FA             MOVS     R1,#+250
   \   00000008   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xDA4D             BGE      ??Inductor_Check_0
   \   0000000E   0x....             LDR      R0,??DataTable6_2
   \   00000010   0x6840             LDR      R0,[R0, #+4]
   \   00000012   0x21FA             MOVS     R1,#+250
   \   00000014   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xDA47             BGE      ??Inductor_Check_0
   \   0000001A   0x....             LDR      R0,??DataTable6_2
   \   0000001C   0x6880             LDR      R0,[R0, #+8]
   \   0000001E   0x21FA             MOVS     R1,#+250
   \   00000020   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xDA41             BGE      ??Inductor_Check_0
    881              {
    882                if(AD_valu[0]-AD_valu[1]<5&&AD_valu[0]-AD_valu[2]<5&&AD_valu[1]-AD_valu[2]<5&&
    883                AD_valu[0]-AD_valu[1]>-5&&AD_valu[0]-AD_valu[2]>-5&&AD_valu[1]-AD_valu[2]>-5)
   \   00000026   0x....             LDR      R0,??DataTable6_2
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x....             LDR      R1,??DataTable6_2
   \   0000002C   0x6849             LDR      R1,[R1, #+4]
   \   0000002E   0x1A40             SUBS     R0,R0,R1
   \   00000030   0x2805             CMP      R0,#+5
   \   00000032   0xDA3A             BGE      ??Inductor_Check_0
   \   00000034   0x....             LDR      R0,??DataTable6_2
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x....             LDR      R1,??DataTable6_2
   \   0000003A   0x6889             LDR      R1,[R1, #+8]
   \   0000003C   0x1A40             SUBS     R0,R0,R1
   \   0000003E   0x2805             CMP      R0,#+5
   \   00000040   0xDA33             BGE      ??Inductor_Check_0
   \   00000042   0x....             LDR      R0,??DataTable6_2
   \   00000044   0x6840             LDR      R0,[R0, #+4]
   \   00000046   0x....             LDR      R1,??DataTable6_2
   \   00000048   0x6889             LDR      R1,[R1, #+8]
   \   0000004A   0x1A40             SUBS     R0,R0,R1
   \   0000004C   0x2805             CMP      R0,#+5
   \   0000004E   0xDA2C             BGE      ??Inductor_Check_0
   \   00000050   0x....             LDR      R0,??DataTable6_2
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x....             LDR      R1,??DataTable6_2
   \   00000056   0x6849             LDR      R1,[R1, #+4]
   \   00000058   0x1A40             SUBS     R0,R0,R1
   \   0000005A   0x2103             MOVS     R1,#+3
   \   0000005C   0x43C9             MVNS     R1,R1            ;; #-4
   \   0000005E   0x4288             CMP      R0,R1
   \   00000060   0xDB23             BLT      ??Inductor_Check_0
   \   00000062   0x....             LDR      R0,??DataTable6_2
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x....             LDR      R1,??DataTable6_2
   \   00000068   0x6889             LDR      R1,[R1, #+8]
   \   0000006A   0x1A40             SUBS     R0,R0,R1
   \   0000006C   0x2103             MOVS     R1,#+3
   \   0000006E   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000070   0x4288             CMP      R0,R1
   \   00000072   0xDB1A             BLT      ??Inductor_Check_0
   \   00000074   0x....             LDR      R0,??DataTable6_2
   \   00000076   0x6840             LDR      R0,[R0, #+4]
   \   00000078   0x....             LDR      R1,??DataTable6_2
   \   0000007A   0x6889             LDR      R1,[R1, #+8]
   \   0000007C   0x1A40             SUBS     R0,R0,R1
   \   0000007E   0x2103             MOVS     R1,#+3
   \   00000080   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000082   0x4288             CMP      R0,R1
   \   00000084   0xDB11             BLT      ??Inductor_Check_0
    884                   {
    885                      min_v[0]=AD_valu[0];
   \   00000086   0x....             LDR      R0,??DataTable6_2
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x.... 0x....      BL       __aeabi_i2f
   \   0000008E   0x....             LDR      R1,??DataTable6_3
   \   00000090   0x6008             STR      R0,[R1, #+0]
    886                      min_v[1]=AD_valu[1];
   \   00000092   0x....             LDR      R0,??DataTable6_2
   \   00000094   0x6840             LDR      R0,[R0, #+4]
   \   00000096   0x.... 0x....      BL       __aeabi_i2f
   \   0000009A   0x....             LDR      R1,??DataTable6_3
   \   0000009C   0x6048             STR      R0,[R1, #+4]
    887                      min_v[2]=AD_valu[2];
   \   0000009E   0x....             LDR      R0,??DataTable6_2
   \   000000A0   0x6880             LDR      R0,[R0, #+8]
   \   000000A2   0x.... 0x....      BL       __aeabi_i2f
   \   000000A6   0x....             LDR      R1,??DataTable6_3
   \   000000A8   0x6088             STR      R0,[R1, #+8]
    888                   }    
    889              }
    890          
    891          if(AD_valu[0]<500&&AD_valu[1]<500&&AD_valu[2]<500&&AD_valu[3]<500&&AD_valu[4]<500)
   \                     ??Inductor_Check_0: (+1)
   \   000000AA   0x....             LDR      R0,??DataTable6_2
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x21FA             MOVS     R1,#+250
   \   000000B0   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000B2   0x4288             CMP      R0,R1
   \   000000B4   0xDB00             BLT      .+4
   \   000000B6   0xE086             B        ??Inductor_Check_1
   \   000000B8   0x....             LDR      R0,??DataTable6_2
   \   000000BA   0x6840             LDR      R0,[R0, #+4]
   \   000000BC   0x21FA             MOVS     R1,#+250
   \   000000BE   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000C0   0x4288             CMP      R0,R1
   \   000000C2   0xDB00             BLT      .+4
   \   000000C4   0xE07F             B        ??Inductor_Check_1
   \   000000C6   0x....             LDR      R0,??DataTable6_2
   \   000000C8   0x6880             LDR      R0,[R0, #+8]
   \   000000CA   0x21FA             MOVS     R1,#+250
   \   000000CC   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000CE   0x4288             CMP      R0,R1
   \   000000D0   0xDA79             BGE      ??Inductor_Check_1
   \   000000D2   0x....             LDR      R0,??DataTable6_2
   \   000000D4   0x68C0             LDR      R0,[R0, #+12]
   \   000000D6   0x21FA             MOVS     R1,#+250
   \   000000D8   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000DA   0x4288             CMP      R0,R1
   \   000000DC   0xDA73             BGE      ??Inductor_Check_1
   \   000000DE   0x....             LDR      R0,??DataTable6_2
   \   000000E0   0x6900             LDR      R0,[R0, #+16]
   \   000000E2   0x21FA             MOVS     R1,#+250
   \   000000E4   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000E6   0x4288             CMP      R0,R1
   \   000000E8   0xDA6D             BGE      ??Inductor_Check_1
    892              {
    893                if(AD_valu[0]-AD_valu[1]<5&&AD_valu[0]-AD_valu[2]<5&&AD_valu[1]-AD_valu[2]<5&&AD_valu[1]-AD_valu[3]<5&&AD_valu[1]-AD_valu[4]<5&&
    894                AD_valu[0]-AD_valu[1]>-5&&AD_valu[0]-AD_valu[2]>-5&&AD_valu[1]-AD_valu[2]>-5&&AD_valu[1]-AD_valu[3]>-5&&AD_valu[1]-AD_valu[4]>-5)
   \   000000EA   0x....             LDR      R0,??DataTable6_2
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x....             LDR      R1,??DataTable6_2
   \   000000F0   0x6849             LDR      R1,[R1, #+4]
   \   000000F2   0x1A40             SUBS     R0,R0,R1
   \   000000F4   0x2805             CMP      R0,#+5
   \   000000F6   0xDA66             BGE      ??Inductor_Check_1
   \   000000F8   0x....             LDR      R0,??DataTable6_2
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0x....             LDR      R1,??DataTable6_2
   \   000000FE   0x6889             LDR      R1,[R1, #+8]
   \   00000100   0x1A40             SUBS     R0,R0,R1
   \   00000102   0x2805             CMP      R0,#+5
   \   00000104   0xDA5F             BGE      ??Inductor_Check_1
   \   00000106   0x....             LDR      R0,??DataTable6_2
   \   00000108   0x6840             LDR      R0,[R0, #+4]
   \   0000010A   0x....             LDR      R1,??DataTable6_2
   \   0000010C   0x6889             LDR      R1,[R1, #+8]
   \   0000010E   0x1A40             SUBS     R0,R0,R1
   \   00000110   0x2805             CMP      R0,#+5
   \   00000112   0xDA58             BGE      ??Inductor_Check_1
   \   00000114   0x....             LDR      R0,??DataTable6_2
   \   00000116   0x6840             LDR      R0,[R0, #+4]
   \   00000118   0x....             LDR      R1,??DataTable6_2
   \   0000011A   0x68C9             LDR      R1,[R1, #+12]
   \   0000011C   0x1A40             SUBS     R0,R0,R1
   \   0000011E   0x2805             CMP      R0,#+5
   \   00000120   0xDA51             BGE      ??Inductor_Check_1
   \   00000122   0x....             LDR      R0,??DataTable6_2
   \   00000124   0x6840             LDR      R0,[R0, #+4]
   \   00000126   0x....             LDR      R1,??DataTable6_2
   \   00000128   0x6909             LDR      R1,[R1, #+16]
   \   0000012A   0x1A40             SUBS     R0,R0,R1
   \   0000012C   0x2805             CMP      R0,#+5
   \   0000012E   0xDA4A             BGE      ??Inductor_Check_1
   \   00000130   0x....             LDR      R0,??DataTable6_2
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x....             LDR      R1,??DataTable6_2
   \   00000136   0x6849             LDR      R1,[R1, #+4]
   \   00000138   0x1A40             SUBS     R0,R0,R1
   \   0000013A   0x2103             MOVS     R1,#+3
   \   0000013C   0x43C9             MVNS     R1,R1            ;; #-4
   \   0000013E   0x4288             CMP      R0,R1
   \   00000140   0xDB41             BLT      ??Inductor_Check_1
   \   00000142   0x....             LDR      R0,??DataTable6_2
   \   00000144   0x6800             LDR      R0,[R0, #+0]
   \   00000146   0x....             LDR      R1,??DataTable6_2
   \   00000148   0x6889             LDR      R1,[R1, #+8]
   \   0000014A   0x1A40             SUBS     R0,R0,R1
   \   0000014C   0x2103             MOVS     R1,#+3
   \   0000014E   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000150   0x4288             CMP      R0,R1
   \   00000152   0xDB38             BLT      ??Inductor_Check_1
   \   00000154   0x....             LDR      R0,??DataTable6_2
   \   00000156   0x6840             LDR      R0,[R0, #+4]
   \   00000158   0x....             LDR      R1,??DataTable6_2
   \   0000015A   0x6889             LDR      R1,[R1, #+8]
   \   0000015C   0x1A40             SUBS     R0,R0,R1
   \   0000015E   0x2103             MOVS     R1,#+3
   \   00000160   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000162   0x4288             CMP      R0,R1
   \   00000164   0xDB2F             BLT      ??Inductor_Check_1
   \   00000166   0x....             LDR      R0,??DataTable6_2
   \   00000168   0x6840             LDR      R0,[R0, #+4]
   \   0000016A   0x....             LDR      R1,??DataTable6_2
   \   0000016C   0x68C9             LDR      R1,[R1, #+12]
   \   0000016E   0x1A40             SUBS     R0,R0,R1
   \   00000170   0x2103             MOVS     R1,#+3
   \   00000172   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000174   0x4288             CMP      R0,R1
   \   00000176   0xDB26             BLT      ??Inductor_Check_1
   \   00000178   0x....             LDR      R0,??DataTable6_2
   \   0000017A   0x6840             LDR      R0,[R0, #+4]
   \   0000017C   0x....             LDR      R1,??DataTable6_2
   \   0000017E   0x6909             LDR      R1,[R1, #+16]
   \   00000180   0x1A40             SUBS     R0,R0,R1
   \   00000182   0x2103             MOVS     R1,#+3
   \   00000184   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000186   0x4288             CMP      R0,R1
   \   00000188   0xDB1D             BLT      ??Inductor_Check_1
    895                   {
    896                      min_v[0]=AD_valu[0];
   \   0000018A   0x....             LDR      R0,??DataTable6_2
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0x.... 0x....      BL       __aeabi_i2f
   \   00000192   0x....             LDR      R1,??DataTable6_3
   \   00000194   0x6008             STR      R0,[R1, #+0]
    897                      min_v[1]=AD_valu[1];
   \   00000196   0x....             LDR      R0,??DataTable6_2
   \   00000198   0x6840             LDR      R0,[R0, #+4]
   \   0000019A   0x.... 0x....      BL       __aeabi_i2f
   \   0000019E   0x....             LDR      R1,??DataTable6_3
   \   000001A0   0x6048             STR      R0,[R1, #+4]
    898                      min_v[2]=AD_valu[2];
   \   000001A2   0x....             LDR      R0,??DataTable6_2
   \   000001A4   0x6880             LDR      R0,[R0, #+8]
   \   000001A6   0x.... 0x....      BL       __aeabi_i2f
   \   000001AA   0x....             LDR      R1,??DataTable6_3
   \   000001AC   0x6088             STR      R0,[R1, #+8]
    899                      min_v[3]=AD_valu[3];
   \   000001AE   0x....             LDR      R0,??DataTable6_2
   \   000001B0   0x68C0             LDR      R0,[R0, #+12]
   \   000001B2   0x.... 0x....      BL       __aeabi_i2f
   \   000001B6   0x....             LDR      R1,??DataTable6_3
   \   000001B8   0x60C8             STR      R0,[R1, #+12]
    900                      min_v[4]=AD_valu[4];
   \   000001BA   0x....             LDR      R0,??DataTable6_2
   \   000001BC   0x6900             LDR      R0,[R0, #+16]
   \   000001BE   0x.... 0x....      BL       __aeabi_i2f
   \   000001C2   0x....             LDR      R1,??DataTable6_3
   \   000001C4   0x6108             STR      R0,[R1, #+16]
    901                   }    
    902              }
    903          
    904            for(int i=0;i<5;i++)
   \                     ??Inductor_Check_1: (+1)
   \   000001C6   0x2200             MOVS     R2,#+0
   \   000001C8   0xE00D             B        ??Inductor_Check_2
    905            {
    906               if( min_v[i]>499)
   \                     ??Inductor_Check_3: (+1)
   \   000001CA   0x....             LDR      R0,??DataTable6_3
   \   000001CC   0x2104             MOVS     R1,#+4
   \   000001CE   0x4351             MULS     R1,R2,R1
   \   000001D0   0x5840             LDR      R0,[R0, R1]
   \   000001D2   0x....             LDR      R1,??DataTable6_4  ;; 0x43f98001
   \   000001D4   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001D8   0xD804             BHI      ??Inductor_Check_4
    907                   min_v[i]=499;
   \   000001DA   0x....             LDR      R0,??DataTable6_5  ;; 0x43f98000
   \   000001DC   0x....             LDR      R1,??DataTable6_3
   \   000001DE   0x2304             MOVS     R3,#+4
   \   000001E0   0x4353             MULS     R3,R2,R3
   \   000001E2   0x50C8             STR      R0,[R1, R3]
    908            }
   \                     ??Inductor_Check_4: (+1)
   \   000001E4   0x1C52             ADDS     R2,R2,#+1
   \                     ??Inductor_Check_2: (+1)
   \   000001E6   0x2A05             CMP      R2,#+5
   \   000001E8   0xDBEF             BLT      ??Inductor_Check_3
    909          //电感最大值确定：防止实际最大电感值偏大
    910          if(Circle_Flag==0)
   \   000001EA   0x....             LDR      R0,??DataTable6_6
   \   000001EC   0x6800             LDR      R0,[R0, #+0]
   \   000001EE   0x2800             CMP      R0,#+0
    911            {
    912               if(AD_inductor[1]<90)
    913               {
    914          //        if(AD_valu[0]>max_v[0]) max_v[0]=AD_valu[0];//避免差值变大
    915          //        if(AD_valu[2]>max_v[2]) max_v[2]=AD_valu[2];
    916          //        if(AD_valu[3]>max_v[3]) max_v[3]=AD_valu[3];
    917          //        if(AD_valu[4]>max_v[4]) max_v[4]=AD_valu[4];
    918               }
    919            }
    920          }
   \                     ??Inductor_Check_5: (+1)
   \   000001F0   0xBD01             POP      {R0,PC}          ;; return
    921          //电感最小值确定：防止实际最大电感值偏小？没想出来
    922          
    923          
    924          ///取绝对值

   \                                 In section .text, align 2, keep-with-next
    925          uint16 abs_i(int value)
    926          {
   \                     abs_i: (+1)
   \   00000000   0xB500             PUSH     {LR}
    927              if(value<0)
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD501             BPL      ??abs_i_0
    928                value=-value;
   \   00000006   0x4241             RSBS     R1,R0,#+0
   \   00000008   0x0008             MOVS     R0,R1
    929              return value;
   \                     ??abs_i_0: (+1)
   \   0000000A   0xB280             UXTH     R0,R0
   \   0000000C   0xBD00             POP      {PC}             ;; return
    930          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     AD_hall

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     Stop_Plan_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x451C4000         DC32     0x451c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     Stop_ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x00002711         DC32     0x2711

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     Stop_OK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Stop_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     Circle_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     Circle_Inductor_value1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x42480001         DC32     0x42480001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     Circle_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     Circle_Count_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x432F0000         DC32     0x432f0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     AD_inductor_Shuzhi_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     AD_inductor_Shuzhi_Min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     Circle_R_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     Circle_L_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x43200000         DC32     0x43200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     Circle_Error_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x........         DC32     Circle_L_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     Circle_Turn_Old_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x........         DC32     Circle_R_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   0x........         DC32     Circle_L_Finish_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   0xC2C80000         DC32     0xc2c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   0x........         DC32     Circle_R_Finish_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   0x........         DC32     Circle_Finish_Count_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   0x........         DC32     Circle_Count2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_25:
   \   00000000   0x........         DC32     Circle_Count_Out_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_26:
   \   00000000   0x........         DC32     Circle_Count6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_27:
   \   00000000   0x........         DC32     Circle_Count6_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     AD_2_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Chazhi_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     RefAd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0xC1F00000         DC32     0xc1f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x42200000         DC32     0x42200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0xC2C80000         DC32     0xc2c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     Chazhi_Max_New

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     Chazhi_Chucun

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     Chazhi_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     Chazhi_Rate

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     Road_Remember

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     Road_Remember+0xC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     StraightRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     StraightRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     WindingRoad_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x42DC0000         DC32     0x42dc0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x420C0000         DC32     0x420c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x42200001         DC32     0x42200001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     StraightRoad_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     WindingRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x........         DC32     WindingRoad_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     WindingRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x41700000         DC32     0x41700000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     WindingRoad_Left_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     WindingRoad_Right_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     StraightRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     Road_Remember+0xC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     WindingRoad_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x41700001         DC32     0x41700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     StraightRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     AD_valu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     min_v

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x43F98001         DC32     0x43f98001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x43F98000         DC32     0x43f98000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     Circle_Flag
    931          
    932          
    933          
    934          /************************************************************************************************************************************************************************************************************************************
    935          检测弯道还是直道
    936          5.6、 弯道策略
    937          电科：电磁组前瞻较小， S 道处理较困难， S 道的处理的好坏对整体速度有较大
    938          的影响。 处理方法如下：初始化一个容量为 50 的数组，记录每次的弯曲度，动
    939          态更新数组。然后对 50 个数据求绝对值和和代数和,如果代数和绝对值很小，
    940          则车在直道，如果代数和和绝对值和较小，但是前 20 个数据较大，则可以判定
    941          小车在出弯，如果代数和和绝对值和较小，后 20 较大，则判定小车在入弯，如
    942          果代数和很小，但绝对值和很大，则在 s 弯道。经过调试， 虽然有一点滞后性，
    943          还可以继续完善。但是这个算法可以非常好的处理弯道。
    944          
    945          北科：对过弯速度的处理方式确定为：
    946          入弯时急减速，以得到足够的调整时间，获得正确的转向角度；在弯道内适当
    947          提速，并保持角度不变，为出弯时的加速节约时间；出弯时，先准确判断标志，
    948          然后加速，虽然会耗费一些时间，但是面对连续变向弯道可以减少判断出错的
    949          概率，保证行驶状态的稳定性，而且弯道内的有限加速对后面的提速也有很大
    950          的帮助。综合考虑用可以接收的额外时间换回行驶稳定性还是值得的
    951          ******************************************************************************************************************************/
    952          /*void Small_S(void)
    953          {
    954          int Chazhi_i=0;
    955          float Chazhi_wandao[50]={0};
    956           float    Chazhi_he=0,Chazhi_he_before=0,Chazhi_he_after=0,
    957               Chazhi_abs=0,     
    958               Chazhi_he_before_flag = 0,
    959               Chazhi_he_after_flag  = 0,
    960               Chazhi_he_flag        = 0,
    961               Chazhi_abs_flag       =0;
    962          
    963                for(Chazhi_i = 0;Chazhi_i < 50; Chazhi_i++)   //将所有更新的数据往前移1位
    964            {
    965                Chazhi_wandao[Chazhi_i] = Chazhi_wandao[Chazhi_i+1];
    966            }
    967            Road_Remember[49] = Chazhi;	//该值为电感检测值-100~100
    968               
    969          //     Chazhi_i++;
    970          //  Chazhi_wandao[Chazhi_i] = Chazhi;
    971          //  if(Chazhi_i >= 50)
    972          //  {
    973          //    Chazhi_i = 0;
    974            
    975              for (int Chazhi_j = 1;Chazhi_j <= 50;Chazhi_j++)
    976              {   
    977          //取50个的电感值的代数和
    978                Chazhi_he += Chazhi_wandao[Chazhi_j];
    979          //取前20的值,
    980                if(Chazhi_j == 20)
    981                Chazhi_he_before = Chazhi_he;
    982          //取后20的值,最新值
    983                if(Chazhi_j >=31&&Chazhi_j <= 50)
    984                  Chazhi_he_after  += Chazhi_wandao[Chazhi_j];
    985              }
    986          
    987          //取50个电感值的绝对值和
    988              for (int Chazhi_j = 1;Chazhi_j <= 50;Chazhi_j++)
    989              { Chazhi_abs  += abs_f(Chazhi_wandao[Chazhi_j]);}
    990            }
    991            
    992          //  Chazhi_he_before_flag = Chazhi_he_before;
    993          //  Chazhi_he_after_flag  = Chazhi_he_after;
    994          //  Chazhi_he_flag        = Chazhi_he;
    995          //  Chazhi_abs_flag       = Chazhi_abs;
    996          //  
    997          //
    998          //  Chazhi_he_before = 0;
    999          //  Chazhi_he_after  = 0;
   1000          //  Chazhi_he        = 0;
   1001          //  Chazhi_abs       = 0;
   1002          
   1003          */
   1004          //void Test_RoadInfo2(void) 
   1005          //{
   1006          //  StraightRoad_Old = StraightRoad;
   1007          //   
   1008          //  for(int8_t i = 0;i <M-1; i++)   //将所有更新的数据往前移1位
   1009          //  {
   1010          //      Road_Remember2[i] = Road_Remember[i+1];
   1011          //  }
   1012          //  Road_Remember2[M-1] = Chazhi;	//该值为电感检测值-100~100
   1013          //  
   1014          //  for(int8_t i = 0;i<20;i++)  
   1015          //  {
   1016          //      Abs_old_Chazhi+= abs_f(Road_Remember2[i]);
   1017          //      Alg_old_Chazhi+=Road_Remember2[i];
   1018          //  }
   1019          //  for(int8_t i = 30;i<M;i++)  
   1020          //  {
   1021          //      Abs_new_Chazhi+= abs_f(Road_Remember2[i]);
   1022          //      Alg_new_Chazhi+=Road_Remember2[i];
   1023          //  }
   1024          //   for(int8_t i = 20;i<30;i++)  
   1025          //  {
   1026          //      Abs_sum_Chazhi+= abs_f(Road_Remember2[i]);
   1027          //      Alg_sum_Chazhi+=Road_Remember2[i];
   1028          //  }
   1029          //  
   1030          //  Abs_sum_Chazhi+=Abs_new_Chazhi+Abs_old_Chazhi;
   1031          //  Alg_sum_Chazhi+=Alg_new_Chazhi+Alg_old_Chazhi;
   1032          //  
   1033          //  Chazhi_Acc_Zhi=250,//50*5
   1034          //  Chazhi_Acc_Wan=400,//20*20
   1035          //
   1036          //  if(Abs_sum_Chazhi<Chazhi_Acc_Zhi&&Alg_sum_Chazhi<Chazhi_Acc_Zhi&&Alg_sum_Chazhi>-Chazhi_Acc_Zhi)
   1037          //  {
   1038          //       StraightRoad_Flag = 1;
   1039          //  }
   1040          //  
   1041          //   if(Abs_new_Chazhi>Chazhi_Acc_Wan&&Alg_new_Chazhi>Chazhi_Acc_Wan)
   1042          //  {
   1043          //      WindingRoad_Left_Flag = 1;
   1044          //  } 
   1045          //  if(Abs_new_Chazhi>Chazhi_Acc_Wan&&Alg_new_Chazhi<-Chazhi_Acc_Wan)
   1046          //  {
   1047          //      WindingRoad_Right_Flag = 1;
   1048          //  }
   1049          //  
   1050          //  if(Abs_old_Chazhi<Chazhi_Acc_Wan&&Alg_old_Chazhi>Chazhi_Acc_Wan&&Alg_new_Chazhi<-Chazhi_Acc_Wan)
   1051          //  {
   1052          //      WindingRoad_Left_Flag = 1;
   1053          //  }
   1054          
   1055          //  
   1056          ////  StraightRoad=0;;//小车直走次数
   1057          ////  WindingRoad_Left = 0;WindingRoad_Right = 0;//小车左转,右转次数
   1058          //  
   1059          //  for(int8_t i = 0;i < 100; i++)
   1060          //  {        
   1061          //    if(Road_Remember[i] > -40 && Road_Remember[i] < 40)	//在-35~35范围内，保证差值与位置的线性关系
   1062          //    {
   1063          //      StraightRoad++;		//判断直道稳定性，分别列出一百组信号
   1064          //    }
   1065          // //else if(g_AD_Remember[i] > -45 && g_AD_Remember[i] < 45)				//在-35~35范围内，保证Mid_AD_value与位置的线性关系
   1066          // //{
   1067          // //  StraightRoad2++;		//判断直道稳定性，分别列出一百组信号
   1068          // //}		
   1069          //    else if(Road_Remember[i] >= -300 && Road_Remember[i] <= -40)//100,38
   1070          //   {
   1071          //     WindingRoad_Right++;		//判断弯道稳定性---右转累加
   1072          //   }
   1073          //   else if(Road_Remember[i] >= 40 && Road_Remember[i] <= 300)
   1074          //   {
   1075          //      WindingRoad_Left++;		//判断弯道稳定性---左转累加
   1076          //   }
   1077          //    
   1078          //  }
   1079          //  StraightRoad_Flag = 0;//直道标志
   1080          //  WindingRoad_Left_Flag = 0,WindingRoad_Right_Flag = 0;//左转,右转标志                 
   1081          //  if(StraightRoad >= 95)
   1082          //  {
   1083          //  StraightRoad_Flag = 1;
   1084          //  }
   1085          //  if(WindingRoad_Left >= 5)//50
   1086          //  {
   1087          //    WindingRoad_Left_Flag = 1;
   1088          //  }
   1089          //  if(WindingRoad_Right >= 5)
   1090          //  {
   1091          //    WindingRoad_Right_Flag = 1;
   1092          //  }       
   1093          //}
   1094          //void Test_Huandao()
   1095          //{
   1096          ////  状态      右     中     左   右竖  左竖 
   1097          ////  最大      2000  1600   2000  2000  2000
   1098          ////                               400(13)   400(13)    
   1099          ////  正常      825   1600   825   170(10)   170(10)
   1100          ////  环岛两 个环切线滤波
   1101          ////  if(AD_inductor[0]>45&&AD_inductor[1]>80&&AD_inductor[2]>45)//中
   1102          ////    Chazhi=Chazhi/10;
   1103          ////  if(AD_inductor[1]>75&&(AD_inductor[0]>75||AD_inductor[2]>75))//电磁线在俩电感之间时不行
   1104          ////    Chazhi=Chazhi/10; 
   1105          ////   if(Circle_Flag>0)
   1106          ////   {
   1107          ////      if(AD_inductor[1]>105&&AD_inductor[1]<Circle_inductor_Max)//识别进入到环岛双线之前之后
   1108          ////         {
   1109          //////       Chazhi = (int16)(AD_inductor[2] - AD_inductor[0]); 
   1110          //////       Chazhi=0; 
   1111          ////           if(AD_inductor[3]>AD_inductor[4]) //100       
   1112          ////              Circle_R_Count++; 
   1113          ////           if(AD_inductor[4]>AD_inductor[3]) //100       
   1114          ////              Circle_L_Count++;    
   1115          ////    }
   1116          ////   }  
   1117          //                     //100
   1118          ////    if(AD_inductor[1]>120&&AD_inductor[1]<Circle_inductor_Mid2)//识别进入到环岛双线之前之后
   1119          ////    {
   1120          //////       Chazhi = (int16)(AD_inductor[2] - AD_inductor[0]); 
   1121          //////       Chazhi=0; 
   1122          ////       if(AD_inductor[0]>90) //100       
   1123          ////         Circle_R_Count++; 
   1124          ////       if(AD_inductor[2]>90)  //100      
   1125          ////         Circle_L_Count++;    
   1126          ////    }
   1127          ////    
   1128          ////     if(AD_inductor[0]>70&&AD_inductor[1]>90&&AD_inductor[2]>70||
   1129          ////        AD_inductor[1]>85&&(AD_inductor[0]>80||AD_inductor[2]>80))//中
   1130          //  //2000,100;2500,125;3000,150;3500,175
   1131          //  if(Circle_Flag==0)//处于检测圆环双线状态
   1132          //  {
   1133          //    
   1134          ////       if(AD_inductor[1]>130&&AD_inductor[1]<170)
   1135          ////          {
   1136          //////            if(AD_inductor[0]>AD_inductor[2]+30) //100       
   1137          //////              Circle_R_Count++; 
   1138          //////             if(AD_inductor[2]>AD_inductor[0]+30) //100       
   1139          //////              Circle_L_Count++; 
   1140          //////          
   1141          ////          }
   1142          //    
   1143          //    
   1144          //      if(AD_inductor[1]>Circle_Inductor_value1)
   1145          //      {
   1146          //              Circle_Count++;//环岛双线计数   
   1147          //              if(Circle_Count>Circle_Count_Max)
   1148          //              {
   1149          //                  Circle_Flag=1; //进入环岛双线
   1150          //                  Circle_Count=0;
   1151          //              }
   1152          //      }
   1153          //  }
   1154          //  
   1155          //  
   1156          //  if(Circle_Flag==1)//检测到圆环双线，进入到检测离开圆环双线
   1157          //  {
   1158          //        if(AD_inductor[1]<Circle_Inductor_value2)      
   1159          //                Circle_Count2++;//离开环岛双线计数
   1160          //        
   1161          //         if(AD_inductor[3]>AD_inductor_Shuzhi_Max&&AD_inductor[4]<AD_inductor_Shuzhi_Min) //100       
   1162          //          Circle_R_Count++; 
   1163          //         if(AD_inductor[4]>AD_inductor_Shuzhi_Max&&AD_inductor[3]<AD_inductor_Shuzhi_Min) //100       
   1164          //          Circle_L_Count++; 
   1165          //         
   1166          // //会出现提前转弯，与滞后转弯后强制出环转冲突，导致提前转弯一直旋转        
   1167          ////      if(Circle_L_Count>Circle_Turn_Count||Circle_R_Count>Circle_Turn_Count)//转弯计数达到上限，进入转弯时刻
   1168          ////         Circle_Flag=3;//转弯识别结束该转弯了
   1169          //         
   1170          //         
   1171          //         
   1172          //         
   1173          //        if(Circle_Count2>Circle_Count2_Max)
   1174          //
   1175          //        {
   1176          //             Circle_Flag=2; //离开环岛双线标志
   1177          //             Circle_Count2=0;
   1178          //        }
   1179          //
   1180          //  }
   1181          //
   1182          //   if(Circle_Flag==2)//已经检测到离开圆环双线，开始转弯计数
   1183          //   {
   1184          //       if(AD_inductor[3]>AD_inductor[4]) //100       
   1185          //          Circle_R_Count++; 
   1186          //       if(AD_inductor[4]>AD_inductor[3]) //100       
   1187          //          Circle_L_Count++;
   1188          ////       if(AD_inductor[0]>AD_inductor[2]) //100       
   1189          ////          Circle_R_Count++; 
   1190          ////       if(AD_inductor[2]>AD_inductor[0]) //100       
   1191          ////          Circle_L_Count++; 
   1192          ////   
   1193          //       
   1194          //    //同上解释，可通过计算速度时间路程来使用
   1195          ////       if(Circle_L_Count>Circle_Turn_Count2||Circle_R_Count>Circle_Turn_Count2)//转弯计数达到上限，进入转弯时刻
   1196          ////                    Circle_Flag=3;//转弯识别结束该转弯了
   1197          //
   1198          //       if(AD_inductor[1]<Circle_Inductor_value3)//150
   1199          //        {
   1200          //////          Circle_Count3++;//圆环转弯计数，累加为了避免遇到误判，环岛双线提前结束
   1201          //////          if(Circle_Count3>Circle_Count3_Max)
   1202          //////          {
   1203          //////          Circle_Count3=0;
   1204          //             Circle_Flag=3;//转弯识别结束该转弯了
   1205          //////          }
   1206          //        }
   1207          //   }
   1208          //   
   1209          //   if(Circle_Flag==3)//开始转弯
   1210          //   {      
   1211          //      if(Circle_Error_Flag==0)//防止左/右转后因为电感值变反而引发右/左转，
   1212          //      {
   1213          //         if(Circle_L_Count>Circle_R_Count)
   1214          //         {
   1215          //          Circle_L_Count=0;
   1216          //          Circle_R_Count=0;
   1217          //          
   1218          //           Circle_L_Flag=1;
   1219          //           
   1220          //           Circle_Turn_Old_Flag=2;
   1221          //           
   1222          //           Circle_Error_Flag=2;
   1223          //         }
   1224          //         else
   1225          //         {
   1226          //            Circle_L_Count=0;
   1227          //            Circle_R_Count=0;
   1228          //          
   1229          //            Circle_R_Flag=1;
   1230          //            
   1231          //             Circle_Turn_Old_Flag=1;
   1232          //            
   1233          //            Circle_Error_Flag=1;
   1234          //         }           
   1235          //      }
   1236          //   }
   1237          //
   1238          //
   1239          //      if(Circle_L_Flag==1)
   1240          //      {
   1241          //          Chazhi = 43.5;
   1242          //          
   1243          //          Circle_L_Finish_Count++;
   1244          //          LED_2_ON;
   1245          //          BUZZER_ON;
   1246          //      }
   1247          //      if(Circle_R_Flag==1)
   1248          //      {
   1249          //           Chazhi =-43.5;//47=70度,43.5=65
   1250          //           Circle_R_Finish_Count++;      
   1251          //           LED_1_ON;
   1252          //                     BUZZER_ON;
   1253          //
   1254          //      }
   1255          //    
   1256          //
   1257          //    if(Circle_L_Finish_Count>Circle_Finish_Count_Max||Circle_R_Finish_Count>Circle_Finish_Count_Max)//圆环转弯结束
   1258          //    {
   1259          //      Circle_Count=0;
   1260          //      Circle_Count2=0;
   1261          //      Circle_L_Finish_Count=0;
   1262          //      Circle_R_Finish_Count=0;
   1263          //      Circle_L_Count=0;
   1264          //      Circle_R_Count=0;
   1265          //      
   1266          //      Circle_L_Flag=0;
   1267          //      Circle_R_Flag=0;
   1268          //     Circle_Flag=4;
   1269          //                          BUZZER_OFF;
   1270          //     Circle_Count_Out_Flag=1;//避免强制转弯迟,造成进环后反方向出赛道
   1271          //
   1272          //    }
   1273          //  
   1274          // /*仅用电感150左右转弯，还会出现帅的提前转弯反转，故屏蔽
   1275          //  基本不会出现太滞后转弯,所以屏蔽，一旦出现提前转弯，和太滞后转弯的强制差值一样，导致一直在内旋转
   1276          //  
   1277          //  */ 
   1278          ////    if(Circle_Count_Out_Flag==1)
   1279          ////    {
   1280          ////        Circle_Count_Out++;
   1281          ////        if(Circle_Count_Out>Circle_Count_Out_Max)
   1282          ////        {
   1283          ////            Circle_Count_Out=0;
   1284          ////            Circle_Count_Out_Flag=0;
   1285          ////        }
   1286          ////        
   1287          ////        if(Circle_Turn_Old_Flag==2)//左转进弯
   1288          ////        {
   1289          ////           if(Chazhi)
   1290          ////           if(Chazhi<-40)
   1291          ////            Chazhi=-Chazhi;     
   1292          ////         }
   1293          ////      
   1294          ////         if(Circle_Turn_Old_Flag==1)//右转进弯
   1295          ////         {
   1296          ////             
   1297          ////            if(Chazhi>50)
   1298          ////               Circle_Count_Out__Wai_Flag=1;
   1299          ////            if(Chazhi>50)
   1300          ////               Circle_Count_Out__Wai_Flag=1;             
   1301          ////         if(Chazhi>40)
   1302          ////            Chazhi=-Chazhi;     
   1303          ////         }
   1304          ////      
   1305          ////     }
   1306          //  
   1307          //  
   1308          //    if(Circle_Flag==4)//圆环强制转弯结束,进入圆环行驶检测
   1309          //   {
   1310          //        if(AD_inductor[1]<Circle_Inductor_value4)
   1311          //      {
   1312          //              Circle_Count4++;//环岛双线计数   
   1313          //              if(Circle_Count4>Circle_Count4_Max)
   1314          //              {
   1315          //                  Circle_Flag=5; //出环岛双线标志
   1316          //                  Circle_Count4=0;
   1317          //              }
   1318          //      }
   1319          //   }
   1320          //     
   1321          //  
   1322          //   if(Circle_Flag==5)//圆环正规行驶结束束,进入检测出圆环双线
   1323          //   {
   1324          //        if(AD_inductor[1]>Circle_Inductor_value5)
   1325          //      {
   1326          //              Circle_Count5++;//环岛双线计数   
   1327          //              if(Circle_Count5>Circle_Count5_Max)
   1328          //              {
   1329          //                  Circle_Flag=6; //出环岛双线标志
   1330          //                  Circle_Count5=0;
   1331          //              }
   1332          //      }
   1333          //   }
   1334          //     
   1335          // 
   1336          ////   if(Circle_Flag==6)//标志6暂定时间3s
   1337          ////   {
   1338          ////     
   1339          //////     if(AD_inductor[1]>?)
   1340          ////     if(AD_inductor[1]>100)
   1341          ////     {
   1342          //////     if(AD_inductor[2]>?)
   1343          ////     
   1344          ////     Circle_Turn_Again_Counter++;
   1345          ////     if(Circle_Turn_Again_Counter>Circle_Turn_Again_Counter_Max)
   1346          ////     {
   1347          ////        Circle_Turn_Again_Prevent_Flag=0;
   1348          ////     }
   1349          ////     else
   1350          ////     {
   1351          ////       Circle_Turn_Again_Prevent_Flag=1;
   1352          ////     }
   1353          ////     
   1354          ////     if(Circle_Turn_Again_Prevent_Flag==1)
   1355          ////     {
   1356          ////         if(Circle_Turn_Old_Flag==2)//左转进弯预防差值60
   1357          ////         {
   1358          ////           if(Chazhi>30)
   1359          ////            Chazhi=-Chazhi/2;     
   1360          ////         }
   1361          ////      
   1362          ////        if(Circle_Turn_Old_Flag==1)//右转进弯预防差值-60
   1363          ////        {
   1364          ////            if(Chazhi<-30)
   1365          ////            Chazhi=-Chazhi/2;     
   1366          ////        }
   1367          ////     }
   1368          ////   }
   1369          ////   }
   1370          //  
   1371          //  
   1372          //
   1373          //  if(Circle_Flag==6)
   1374          //  {
   1375          //      if(AD_inductor[1]<Circle_Inductor_value6)
   1376          //      {
   1377          //        Circle_Count6++;
   1378          //        if(Circle_Count6>Circle_Count6_Max)
   1379          //        {
   1380          //        Circle_Flag=0;
   1381          //        Circle_Error_Flag=0;//转弯误判解除
   1382          //        }
   1383          //      }
   1384          //  }
   1385          //
   1386          ////   if(Circle_Error_Flag==1||Circle_Error_Flag==2)//防止误判计数
   1387          ////      {
   1388          ////         Circle_Error_Count++;
   1389          ////         if(Circle_Error_Count>Circle_Error_Count_Max)
   1390          ////         {
   1391          ////            Circle_Error_Flag=0;//转弯误判解除
   1392          ////            Circle_Error_Count=0;
   1393          //////                 Circle_Flag=0;
   1394          ////         }      
   1395          ////      }   
   1396          //
   1397          //}
   1398          //
   1399          //
   1400          //

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Hall
         8   -> ADC_Once
         8   -> __aeabi_ui2f
         8 __aeabi_cfcmpeq
         8 __aeabi_cfcmple
       8   Inductor_Check
         8   -> __aeabi_i2f
         8 __aeabi_cfrcmple
      16   Inductor_analyse
        16   -> Inductor_Check
        16   -> Read_ADC
        16   -> __aeabi_fadd
        16   -> __aeabi_fdiv
        16   -> __aeabi_fmul
        16   -> __aeabi_fsub
        16   -> __aeabi_i2f
        16   -> abs_inductor
        16 __aeabi_cfcmple
        16 __aeabi_cfrcmple
     416   Small_S
       416   -> GpioSet
       416   -> __aeabi_memclr4
       416   -> abs_f
       416 __aeabi_cfcmple
       416 __aeabi_cfrcmple
       8   Test_Huandao
         8   -> GpioSet
         8 __aeabi_cfcmple
         8 __aeabi_cfrcmple
       8   Test_RoadInfo
         8   -> abs_f
         8 __aeabi_cfcmple
     408   Test_RoadInfo_Shuzhi
       408   -> __aeabi_memclr4
       408 __aeabi_cfcmple
       408 __aeabi_cfrcmple
       4   abs_i


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_20
       4  ??DataTable1_21
       4  ??DataTable1_22
       4  ??DataTable1_23
       4  ??DataTable1_24
       4  ??DataTable1_25
       4  ??DataTable1_26
       4  ??DataTable1_27
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
     400  ?_0
     200  ?_1
     200  ?_2
       4  AD_0_max
       4  AD_1_max
       4  AD_2_max
       4  AD_3_max
       4  AD_MAX_NUM
      60  AD_V
       4  AD_hall
      20  AD_inductor
       4  AD_inductor_Huan
      20  AD_inductor_Last
       4  AD_inductor_Shuzhi_Max
       4  AD_inductor_Shuzhi_Min
      20  AD_sum
      20  AD_valu
       4  Abs_new_Chazhi
       4  Abs_old_Chazhi
       4  Abs_sum_Chazhi
       4  Add_AD_value
       4  Alg_new_Chazhi
       4  Alg_old_Chazhi
       4  Alg_sum_Chazhi
       4  Chazhi
      80  Chazhi_Chucun
       4  Chazhi_Last
       4  Chazhi_Max
       4  Chazhi_Max_New
       4  Chazhi_Min
       4  Chazhi_Old
       4  Circle_Count
       4  Circle_Count2
       4  Circle_Count2_Max
       4  Circle_Count3
       4  Circle_Count3_Max
       4  Circle_Count4
       4  Circle_Count4_Max
       4  Circle_Count5
       4  Circle_Count5_Max
       4  Circle_Count6
       4  Circle_Count6_Max
       4  Circle_Count_Max
       4  Circle_Count_Out
       4  Circle_Count_Out_Flag
       4  Circle_Count_Out_Max
       4  Circle_Error_Count
       4  Circle_Error_Count_Max
       4  Circle_Error_Flag
       4  Circle_Finish_Count_Max
       4  Circle_Flag
       4  Circle_Inductor_value1
       4  Circle_Inductor_value2
       4  Circle_Inductor_value3
       4  Circle_Inductor_value4
       4  Circle_Inductor_value5
       4  Circle_Inductor_value6
       4  Circle_L_Count
       4  Circle_L_Finish_Count
       4  Circle_L_Flag
       4  Circle_R_Count
       4  Circle_R_Finish_Count
       4  Circle_R_Flag
       4  Circle_Turn_Again_Counter
       4  Circle_Turn_Again_Counter_Max
       4  Circle_Turn_Again_Prevent_Flag
       4  Circle_Turn_Count
       4  Circle_Turn_Count2
       4  Circle_Turn_Old_Flag
       4  Circle_inductor_Max
       4  Circle_inductor_Max2
       4  Circle_inductor_Mid
       4  Circle_inductor_Mid2
       4  Circle_inductor_Min
       4  Circle_inductor_Min2
     128  Hall
     498  Inductor_Check
    1344  Inductor_analyse
      16  Position_transit
       4  Rate_Count
       4  Rate_Flag
       4  RefAd
     200  Road_Remember
     200  Road_Remember2
       4  Slope_AD_1
     320  Small_S
       4  Stop_Flag
       4  Stop_OK
       4  Stop_Plan_Flag
       4  Stop_ms
       4  StraightRoad
       4  StraightRoad2
       4  StraightRoad_Flag
       4  StraightRoad_Old
     570  Test_Huandao
     192  Test_RoadInfo
     316  Test_RoadInfo_Shuzhi
       4  WindingRoad
       4  WindingRoad_Flag
       4  WindingRoad_Left
       4  WindingRoad_Left_Flag
       4  WindingRoad_Right
       4  WindingRoad_Right_Flag
      14  abs_i
      52  ad_valu
       4  chazhi_old
       2  max_old
      20  max_v
       4  max_value
      20  min_v
       1  position
       4  position_back
       2  position_last
      20  sensor_to_one
       4  sensor_to_one_Huan

 
   912 bytes in section .bss
   193 bytes in section .data
   800 bytes in section .rodata
 3 690 bytes in section .text
 
 3 690 bytes of CODE  memory
   800 bytes of CONST memory
 1 105 bytes of DATA  memory

Errors: none
Warnings: 1
