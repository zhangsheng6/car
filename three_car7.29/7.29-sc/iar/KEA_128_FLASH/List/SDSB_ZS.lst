###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        29/Jul/2018  15:41:41
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\三轮比赛\7.29-sc\user\C\SDSB_ZS.c
#    Command line =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\user\C\SDSB_ZS.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -lB
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -o
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\device\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\user\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\lib\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\coreSupport\ -On
#    List file    =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\SDSB_ZS.lst
#    Object file  =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\SDSB_ZS.o
#
###############################################################################

H:\智能车程序2018\三轮比赛\7.29-sc\user\C\SDSB_ZS.c
      1          #include "Variable.h"
      2          #include "common.h"
      3          #include "allHead.h"
      4          #include "SDSB_ZS.h"
      5          /******************电感分析变量******************************************************************************/

   \                                 In section .data, align 4
      6          float  max_v[5] = {2000,2000,2000,2000,2000};
   \                     max_v:
   \   00000000   0x44FA0000         DC32 44FA0000H, 44FA0000H, 44FA0000H, 44FA0000H, 44FA0000H
   \              0x44FA0000   
   \              0x44FA0000   
   \              0x44FA0000   
   \              0x44FA0000   

   \                                 In section .data, align 4
      7          float  min_v[5] = {47,47,47,47,47};  //电感标定 采集值      ？？？？待测？？？？
   \                     min_v:
   \   00000000   0x423C0000         DC32 423C0000H, 423C0000H, 423C0000H, 423C0000H, 423C0000H
   \              0x423C0000   
   \              0x423C0000   
   \              0x423C0000   
   \              0x423C0000   

   \                                 In section .data, align 4
      8          int   Position_transit[4] = {30,30} ;  //记录过渡点归一化的值  ???待测？？？？32,38
   \                     Position_transit:
   \   00000000   0x0000001E         DC32 30, 30, 0, 0
   \              0x0000001E   
   \              0x00000000   
   \              0x00000000   

   \                                 In section .bss, align 4
      9          float Chazhi_Chucun[20]={0},Chazhi_Old=0,Rate_Count=0,Rate_Flag=0;
   \                     Chazhi_Chucun:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     Chazhi_Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Rate_Count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Rate_Flag:
   \   00000000                      DS8 4
     10          /******************电感分析变量2******************************************************************************/

   \                                 In section .bss, align 4
     11          int16 ad_valu[5][5];
   \                     ad_valu:
   \   00000000                      DS8 52

   \                                 In section .data, align 1
     12          char position=1;
   \                     position:
   \   00000000   0x01               DC8 1
     13          #define NM   3

   \                                 In section .bss, align 4
     14          int AD_valu[5],AD_V[5][NM],chazhi_old,RefAd=20, Add_AD_value = 20;
   \                     AD_valu:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \                     AD_V:
   \   00000000                      DS8 60

   \                                 In section .bss, align 4
   \                     chazhi_old:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     RefAd:
   \   00000000   0x00000014         DC32 20

   \                                 In section .data, align 4
   \                     Add_AD_value:
   \   00000000   0x00000014         DC32 20

   \                                 In section .bss, align 4
     15          float  Chazhi,Chazhi_Last,Chazhi_Max=60,Chazhi_Min=-60,Chazhi_Max_New=200;//此为1,2位置的最大差值
   \                     Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Chazhi_Last:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     Chazhi_Max:
   \   00000000   0x42700000         DC32 42700000H

   \                                 In section .data, align 4
   \                     Chazhi_Min:
   \   00000000   0xC2700000         DC32 0C2700000H

   \                                 In section .data, align 4
   \                     Chazhi_Max_New:
   \   00000000   0x43480000         DC32 43480000H

   \                                 In section .bss, align 4
     16          float  AD_inductor_Last[5]={0};
   \                     AD_inductor_Last:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     17          float  AD_inductor[5],sensor_to_one[5],AD_inductor_Huan,sensor_to_one_Huan;
   \                     AD_inductor:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \                     sensor_to_one:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
   \                     AD_inductor_Huan:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     sensor_to_one_Huan:
   \   00000000                      DS8 4
     18          

   \                                 In section .bss, align 4
     19          float  Slope_AD_1;  // 用于坡道检测
   \                     Slope_AD_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          int  AD_sum[5];
   \                     AD_sum:
   \   00000000                      DS8 20

   \                                 In section .bss, align 4
     21          int  AD_MAX_NUM;   
   \                     AD_MAX_NUM:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     22          int  position_back = 1;
   \                     position_back:
   \   00000000   0x00000001         DC32 1

   \                                 In section .bss, align 4
     23          float  max_value,AD_0_max,AD_1_max,AD_2_max,AD_3_max;
   \                     max_value:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_0_max:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_1_max:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_2_max:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     AD_3_max:
   \   00000000                      DS8 4
     24          /*------------------------------------------------------------------------------------------*/
     25          /**************判断道路信息变量1****************************************************************/

   \                                 In section .bss, align 4
     26          int StraightRoad=0,StraightRoad2=0,StraightRoad_Old=0;//小车直走次数
   \                     StraightRoad:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     StraightRoad2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     StraightRoad_Old:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     27          int WindingRoad_Left = 0,WindingRoad_Right = 0,WindingRoad=0;//小车左转,右转次数
   \                     WindingRoad_Left:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad_Right:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad:
   \   00000000                      DS8 4
     28          
     29          

   \                                 In section .bss, align 4
     30          float Road_Remember[P]={0};//差值储存，用于判断道路信息
   \                     Road_Remember:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
     31          int StraightRoad_Flag = 0;//直道标志
   \                     StraightRoad_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     32          int WindingRoad_Left_Flag = 0,WindingRoad_Right_Flag = 0,WindingRoad_Flag=0;//左转,右转标志 
   \                     WindingRoad_Left_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad_Right_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     WindingRoad_Flag:
   \   00000000                      DS8 4
     33          /*             判断道路信息变量2                   */
     34          //Road_Remember2[M]:[]里面的数越大，值的状态越新

   \                                 In section .bss, align 4
     35          float Road_Remember2[M]={0},//差值储存，用于判断道路信息
   \                     Road_Remember2:
   \   00000000                      DS8 200

   \                                 In section .bss, align 4
     36                Abs_sum_Chazhi=0,//50个差值的绝对值总和
   \                     Abs_sum_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     37                Alg_sum_Chazhi=0,//50个差值的代数总和
   \                     Alg_sum_Chazhi:
   \   00000000                      DS8 4
     38                

   \                                 In section .bss, align 4
     39                Abs_new_Chazhi=0,//最新20个差值的绝对值和，用于检测进弯
   \                     Abs_new_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     40                Alg_new_Chazhi=0,//最新20个差值的代数和
   \                     Alg_new_Chazhi:
   \   00000000                      DS8 4
     41                

   \                                 In section .bss, align 4
     42                Abs_old_Chazhi=0,
   \                     Abs_old_Chazhi:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     43                Alg_old_Chazhi=0; 
   \                     Alg_old_Chazhi:
   \   00000000                      DS8 4
     44          /*******************END*************************************************************************************/
     45          /******************环岛变量2*************************************************/
     46          //  100,0.5s  
     47          int 
     48          

   \                                 In section .bss, align 4
     49              Circle_Flag=0,//  圆环进入标志，=1圆环双线识别结束，=2识别到转弯时刻
   \                     Circle_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     50              Circle_L_Flag,Circle_R_Flag,//圆环左/右转标志
   \                     Circle_L_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Circle_R_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     51              Circle_Turn_Old_Flag=0,
   \                     Circle_Turn_Old_Flag:
   \   00000000                      DS8 4
     52          

   \                                 In section .bss, align 4
     53              Circle_Count=0,//  进入圆环双线计数
   \                     Circle_Count:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     54              Circle_Count_Max=5,//30,0.25s， 圆环双线计数最大值  
   \                     Circle_Count_Max:
   \   00000000   0x00000005         DC32 5

   \                                 In section .bss, align 4
     55              Circle_Count2=0,// 出圆环双线转弯前计数
   \                     Circle_Count2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     56              Circle_Count2_Max=2,//30,0.25s， 圆环双线计数最大值
   \                     Circle_Count2_Max:
   \   00000000   0x00000002         DC32 2

   \                                 In section .bss, align 4
     57              Circle_Count3=0,//圆环转弯时刻计数
   \                     Circle_Count3:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     58              Circle_Count3_Max=2,//圆环转弯时刻计数最大值
   \                     Circle_Count3_Max:
   \   00000000   0x00000002         DC32 2

   \                                 In section .bss, align 4
     59              Circle_Count4=0,//圆环转弯时刻计数
   \                     Circle_Count4:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     60              Circle_Count4_Max=20,//圆环转弯时刻计数最大值 
   \                     Circle_Count4_Max:
   \   00000000   0x00000014         DC32 20

   \                                 In section .bss, align 4
     61              Circle_Count5=0,//出环双线计数
   \                     Circle_Count5:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     62              Circle_Count5_Max=2,//出环双线计数最大值
   \                     Circle_Count5_Max:
   \   00000000   0x00000002         DC32 2

   \                                 In section .bss, align 4
     63              Circle_Count6=0,//出环后直道计数
   \                     Circle_Count6:
   \   00000000                      DS8 4
     64              
     65              

   \                                 In section .bss, align 4
     66              Circle_Count_Out_Flag=0,
   \                     Circle_Count_Out_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     67              Circle_Count_Out=0,//避免进环迟后,圆环强制转弯结束后保护时间，避免出赛道
   \                     Circle_Count_Out:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     68              Circle_Count_Out_Max=400,//800，2s
   \                     Circle_Count_Out_Max:
   \   00000000   0x00000190         DC32 400
     69          

   \                                 In section .bss, align 4
     70              Circle_L_Count=0,Circle_R_Count=0,//圆环左/右转计数 
   \                     Circle_L_Count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Circle_R_Count:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     71              Circle_Turn_Count=20,//圆环左/右转计数最大值20
   \                     Circle_Turn_Count:
   \   00000000   0x00000014         DC32 20

   \                                 In section .data, align 4
     72              Circle_Turn_Count2=5,//圆环左/右转计数最大值20
   \                     Circle_Turn_Count2:
   \   00000000   0x00000005         DC32 5

   \                                 In section .bss, align 4
     73              Circle_Error_Count=0,
   \                     Circle_Error_Count:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     74              Circle_Error_Count_Max=10000,
   \                     Circle_Error_Count_Max:
   \   00000000   0x00002710         DC32 10000

   \                                 In section .bss, align 4
     75              Circle_Error_Flag=0,
   \                     Circle_Error_Flag:
   \   00000000                      DS8 4
     76              

   \                                 In section .bss, align 4
     77              Circle_L_Finish_Count=0,Circle_R_Finish_Count=0;// 圆环左/右转结束计数
   \                     Circle_L_Finish_Count:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Circle_R_Finish_Count:
   \   00000000                      DS8 4
     78          float  

   \                                 In section .data, align 4
     79                  Circle_Inductor_value2=172,//圆环开始转弯计数值 3550，3500
   \                     Circle_Inductor_value2:
   \   00000000   0x432C0000         DC32 432C0000H

   \                                 In section .data, align 4
     80                  Circle_Inductor_value3=150,//不用了,圆环强制转弯值
   \                     Circle_Inductor_value3:
   \   00000000   0x43160000         DC32 43160000H

   \                                 In section .data, align 4
     81                  Circle_Inductor_value4=100,//圆环行驶值
   \                     Circle_Inductor_value4:
   \   00000000   0x42C80000         DC32 42C80000H

   \                                 In section .data, align 4
     82                  Circle_Inductor_value5=160,//出圆环双线值
   \                     Circle_Inductor_value5:
   \   00000000   0x43200000         DC32 43200000H

   \                                 In section .data, align 4
     83                  Circle_Inductor_value6=100,//出圆环进入单线值，解除本次圆环，进入下次圆环状态
   \                     Circle_Inductor_value6:
   \   00000000   0x42C80000         DC32 42C80000H
     84                 

   \                                 In section .bss, align 4
     85                  Circle_Turn_Again_Counter=0,//防止再次进弯计数
   \                     Circle_Turn_Again_Counter:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     86                  Circle_Turn_Again_Counter_Max=400,//1s防止再次进弯计数最大值
   \                     Circle_Turn_Again_Counter_Max:
   \   00000000   0x43C80000         DC32 43C80000H

   \                                 In section .data, align 4
     87                  Circle_Turn_Again_Prevent_Flag=1,//防止再次进弯标志
   \                     Circle_Turn_Again_Prevent_Flag:
   \   00000000   0x3F800000         DC32 3F800000H
     88                  
     89                  

   \                                 In section .data, align 4
     90                 Circle_inductor_Max=165,Circle_inductor_Max2=175,//190
   \                     Circle_inductor_Max:
   \   00000000   0x43250000         DC32 43250000H

   \                                 In section .data, align 4
   \                     Circle_inductor_Max2:
   \   00000000   0x432F0000         DC32 432F0000H

   \                                 In section .data, align 4
     91                  Circle_inductor_Mid=150, Circle_inductor_Mid2=170,
   \                     Circle_inductor_Mid:
   \   00000000   0x43160000         DC32 43160000H

   \                                 In section .data, align 4
   \                     Circle_inductor_Mid2:
   \   00000000   0x432A0000         DC32 432A0000H

   \                                 In section .data, align 4
     92                  Circle_inductor_Min=105,Circle_inductor_Min2=120;
   \                     Circle_inductor_Min:
   \   00000000   0x42D20000         DC32 42D20000H

   \                                 In section .data, align 4
   \                     Circle_inductor_Min2:
   \   00000000   0x42F00000         DC32 42F00000H
     93          

   \                                 In section .bss, align 4
     94            float AD_hall,Stop_Plan_Flag=0,Stop_OK=0,Stop_Flag=0;
   \                     AD_hall:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Stop_Plan_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Stop_OK:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Stop_Flag:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     95            int Stop_ms=0;
   \                     Stop_ms:
   \   00000000                      DS8 4
     96            

   \                                 In section .text, align 2, keep-with-next
     97          void Hall(void)
     98          {
   \                     Hall: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     99              AD_hall = ADC_Once(ADC_6,adc12bit);  //中2 通道
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x202E             MOVS     R0,#+46
   \   00000006   0x.... 0x....      BL       ADC_Once
   \   0000000A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000000E   0x....             LDR      R1,??DataTable0
   \   00000010   0x6008             STR      R0,[R1, #+0]
    100              if(Stop_Plan_Flag==0)
   \   00000012   0x....             LDR      R0,??DataTable0_1
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000001C   0xD109             BNE      ??Hall_0
    101              {
    102                 if(AD_hall<2500) 
   \   0000001E   0x....             LDR      R0,??DataTable0
   \   00000020   0x6800             LDR      R0,[R0, #+0]
   \   00000022   0x....             LDR      R1,??DataTable0_2  ;; 0x451c4000
   \   00000024   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000028   0xD203             BCS      ??Hall_0
    103                 {
    104                     Stop_Plan_Flag=1;
   \   0000002A   0x20FE             MOVS     R0,#+254
   \   0000002C   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   0000002E   0x....             LDR      R1,??DataTable0_1
   \   00000030   0x6008             STR      R0,[R1, #+0]
    105                 }
    106              }
    107              if(Stop_Plan_Flag==1)
   \                     ??Hall_0: (+1)
   \   00000032   0x....             LDR      R0,??DataTable0_1
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x21FE             MOVS     R1,#+254
   \   00000038   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   0000003A   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000003E   0xD10D             BNE      ??Hall_1
    108              {
    109                 Stop_ms++;
   \   00000040   0x....             LDR      R0,??DataTable0_3
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x1C40             ADDS     R0,R0,#+1
   \   00000046   0x....             LDR      R1,??DataTable0_3
   \   00000048   0x6008             STR      R0,[R1, #+0]
    110                 if(Stop_ms>10000)
   \   0000004A   0x....             LDR      R0,??DataTable0_3
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x....             LDR      R1,??DataTable0_4  ;; 0x2711
   \   00000050   0x4288             CMP      R0,R1
   \   00000052   0xDB03             BLT      ??Hall_1
    111                   Stop_OK=1;       
   \   00000054   0x20FE             MOVS     R0,#+254
   \   00000056   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000058   0x....             LDR      R1,??DataTable0_5
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    112              }
    113              
    114              if(Stop_OK==1)
   \                     ??Hall_1: (+1)
   \   0000005C   0x....             LDR      R0,??DataTable0_5
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x21FE             MOVS     R1,#+254
   \   00000062   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   00000064   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000068   0xD109             BNE      ??Hall_2
    115              {
    116                 if(AD_hall<2500) 
   \   0000006A   0x....             LDR      R0,??DataTable0
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x....             LDR      R1,??DataTable0_2  ;; 0x451c4000
   \   00000070   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000074   0xD203             BCS      ??Hall_2
    117                 {
    118                     Stop_Flag=1;
   \   00000076   0x20FE             MOVS     R0,#+254
   \   00000078   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   0000007A   0x....             LDR      R1,??DataTable1
   \   0000007C   0x6008             STR      R0,[R1, #+0]
    119                 }  
    120              }      
    121          }
   \                     ??Hall_2: (+1)
   \   0000007E   0xBD01             POP      {R0,PC}          ;; return
    122          /******************环岛变量END*************************************************/

   \                                 In section .data, align 4
    123          int     Circle_Count6_Max=5000;//下次圆环间隔时间1S1000
   \                     Circle_Count6_Max:
   \   00000000   0x00001388         DC32 5000
    124          

   \                                 In section .data, align 4
    125          int   Circle_Inductor_M1=172,//进圆环双线值
   \                     Circle_Inductor_M1:
   \   00000000   0x000000AC         DC32 172

   \                                 In section .data, align 4
    126                   Circle_Inductor_M2=175,//测转弯值
   \                     Circle_Inductor_M2:
   \   00000000   0x000000AF         DC32 175

   \                                 In section .data, align 4
    127                   Circle_Inductor_M3=160,//转弯值
   \                     Circle_Inductor_M3:
   \   00000000   0x000000A0         DC32 160

   \                                 In section .data, align 4
    128                   Circle_Inductor_LR1=50;
   \                     Circle_Inductor_LR1:
   \   00000000   0x00000032         DC32 50
    129                           

   \                                 In section .data, align 4
    130          int   AD_inductor_Shuzhi_Max=40,AD_inductor_Shuzhi_Min=1;
   \                     AD_inductor_Shuzhi_Max:
   \   00000000   0x00000028         DC32 40

   \                                 In section .data, align 4
   \                     AD_inductor_Shuzhi_Min:
   \   00000000   0x00000001         DC32 1

   \                                 In section .data, align 4
    131          int   Circle_Finish_Count_Max=300;//400:1s,// 圆环左/右转结束计数最大值
   \                     Circle_Finish_Count_Max:
   \   00000000   0x0000012C         DC32 300

   \                                 In section .data, align 4
    132          int   Circle_Chazhi=100;
   \                     Circle_Chazhi:
   \   00000000   0x00000064         DC32 100

   \                                 In section .text, align 2, keep-with-next
    133          void Test_Huandao()
    134          {
   \                     Test_Huandao: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    135          /*检测进弯*/
    136          if(Circle_Flag==0)//处于检测圆环双线状态
   \   00000002   0x....             LDR      R0,??DataTable1_1
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x2800             CMP      R0,#+0
   \   00000008   0xD129             BNE      ??Test_Huandao_0
    137          { 
    138                if(AD_inductor[1]>Circle_Inductor_M1&&(AD_inductor[0]+AD_inductor[2]>Circle_Inductor_LR1))//&&(AD_inductor[3]>30||AD_inductor[4]>30)
   \   0000000A   0x....             LDR      R0,??DataTable1_2
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_i2f
   \   00000012   0x....             LDR      R1,??DataTable1_3
   \   00000014   0x6849             LDR      R1,[R1, #+4]
   \   00000016   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000001A   0xD220             BCS      ??Test_Huandao_0
   \   0000001C   0x....             LDR      R0,??DataTable1_3
   \   0000001E   0x6801             LDR      R1,[R0, #+0]
   \   00000020   0x....             LDR      R0,??DataTable1_3
   \   00000022   0x6880             LDR      R0,[R0, #+8]
   \   00000024   0x.... 0x....      BL       __aeabi_fadd
   \   00000028   0x0001             MOVS     R1,R0
   \   0000002A   0x000C             MOVS     R4,R1
   \   0000002C   0x....             LDR      R0,??DataTable1_4
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x.... 0x....      BL       __aeabi_i2f
   \   00000034   0x0021             MOVS     R1,R4
   \   00000036   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000003A   0xD210             BCS      ??Test_Huandao_0
    139                {
    140                    Circle_Count++;//环岛双线计数   
   \   0000003C   0x....             LDR      R0,??DataTable1_5
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0x1C40             ADDS     R0,R0,#+1
   \   00000042   0x....             LDR      R1,??DataTable1_5
   \   00000044   0x6008             STR      R0,[R1, #+0]
    141                    if(Circle_Count>Circle_Count_Max)
   \   00000046   0x....             LDR      R0,??DataTable1_6
   \   00000048   0x6800             LDR      R0,[R0, #+0]
   \   0000004A   0x....             LDR      R1,??DataTable1_5
   \   0000004C   0x6809             LDR      R1,[R1, #+0]
   \   0000004E   0x4288             CMP      R0,R1
   \   00000050   0xDA05             BGE      ??Test_Huandao_0
    142                    {
    143                         Circle_Flag=2; //进入环岛双线
   \   00000052   0x2002             MOVS     R0,#+2
   \   00000054   0x....             LDR      R1,??DataTable1_1
   \   00000056   0x6008             STR      R0,[R1, #+0]
    144                         Circle_Count=0;
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x....             LDR      R1,??DataTable1_5
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    145                    }
    146                }
    147          }
    148          /*检测转弯计数***************************************************************/
    149          if(Circle_Flag==2)//已经检测到离开圆环双线，开始转弯计数
   \                     ??Test_Huandao_0: (+1)
   \   0000005E   0x....             LDR      R0,??DataTable1_1
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x2802             CMP      R0,#+2
   \   00000064   0xD000             BEQ      .+4
   \   00000066   0xE088             B        ??Test_Huandao_1
    150          {
    151               if(AD_inductor[3]>AD_inductor[4]+40) //100       
   \   00000068   0x....             LDR      R0,??DataTable1_3
   \   0000006A   0x6901             LDR      R1,[R0, #+16]
   \   0000006C   0x....             LDR      R0,??DataTable1_7  ;; 0x42200000
   \   0000006E   0x.... 0x....      BL       __aeabi_fadd
   \   00000072   0x....             LDR      R1,??DataTable1_3
   \   00000074   0x68C9             LDR      R1,[R1, #+12]
   \   00000076   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000007A   0xD204             BCS      ??Test_Huandao_2
    152                    Circle_R_Count++; 
   \   0000007C   0x....             LDR      R0,??DataTable1_8
   \   0000007E   0x6800             LDR      R0,[R0, #+0]
   \   00000080   0x1C40             ADDS     R0,R0,#+1
   \   00000082   0x....             LDR      R1,??DataTable1_8
   \   00000084   0x6008             STR      R0,[R1, #+0]
    153               if(AD_inductor[4]>AD_inductor[3]+40) //100       
   \                     ??Test_Huandao_2: (+1)
   \   00000086   0x....             LDR      R0,??DataTable1_3
   \   00000088   0x68C1             LDR      R1,[R0, #+12]
   \   0000008A   0x....             LDR      R0,??DataTable1_7  ;; 0x42200000
   \   0000008C   0x.... 0x....      BL       __aeabi_fadd
   \   00000090   0x....             LDR      R1,??DataTable1_3
   \   00000092   0x6909             LDR      R1,[R1, #+16]
   \   00000094   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000098   0xD204             BCS      ??Test_Huandao_3
    154                    Circle_L_Count++;   
   \   0000009A   0x....             LDR      R0,??DataTable1_9
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x1C40             ADDS     R0,R0,#+1
   \   000000A0   0x....             LDR      R1,??DataTable1_9
   \   000000A2   0x6008             STR      R0,[R1, #+0]
    155                 
    156               if(AD_inductor[1]<Circle_Inductor_M2)
   \                     ??Test_Huandao_3: (+1)
   \   000000A4   0x....             LDR      R0,??DataTable1_10
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0x.... 0x....      BL       __aeabi_i2f
   \   000000AC   0x0001             MOVS     R1,R0
   \   000000AE   0x....             LDR      R0,??DataTable1_3
   \   000000B0   0x6840             LDR      R0,[R0, #+4]
   \   000000B2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000B6   0xD253             BCS      ??Test_Huandao_4
    157               {
    158                   
    159                 if(AD_inductor[3]>AD_inductor_Shuzhi_Max&&AD_inductor[4]<AD_inductor_Shuzhi_Min) //100       
   \   000000B8   0x....             LDR      R0,??DataTable1_11
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x.... 0x....      BL       __aeabi_i2f
   \   000000C0   0x....             LDR      R1,??DataTable1_3
   \   000000C2   0x68C9             LDR      R1,[R1, #+12]
   \   000000C4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000C8   0xD20E             BCS      ??Test_Huandao_5
   \   000000CA   0x....             LDR      R0,??DataTable1_12
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x.... 0x....      BL       __aeabi_i2f
   \   000000D2   0x0001             MOVS     R1,R0
   \   000000D4   0x....             LDR      R0,??DataTable1_3
   \   000000D6   0x6900             LDR      R0,[R0, #+16]
   \   000000D8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000DC   0xD204             BCS      ??Test_Huandao_5
    160                   Circle_R_Count++; 
   \   000000DE   0x....             LDR      R0,??DataTable1_8
   \   000000E0   0x6800             LDR      R0,[R0, #+0]
   \   000000E2   0x1C40             ADDS     R0,R0,#+1
   \   000000E4   0x....             LDR      R1,??DataTable1_8
   \   000000E6   0x6008             STR      R0,[R1, #+0]
    161               if(AD_inductor[4]>AD_inductor_Shuzhi_Max&&AD_inductor[3]<AD_inductor_Shuzhi_Min) //100       
   \                     ??Test_Huandao_5: (+1)
   \   000000E8   0x....             LDR      R0,??DataTable1_11
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x.... 0x....      BL       __aeabi_i2f
   \   000000F0   0x....             LDR      R1,??DataTable1_3
   \   000000F2   0x6909             LDR      R1,[R1, #+16]
   \   000000F4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000F8   0xD20E             BCS      ??Test_Huandao_6
   \   000000FA   0x....             LDR      R0,??DataTable1_12
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x.... 0x....      BL       __aeabi_i2f
   \   00000102   0x0001             MOVS     R1,R0
   \   00000104   0x....             LDR      R0,??DataTable1_3
   \   00000106   0x68C0             LDR      R0,[R0, #+12]
   \   00000108   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000010C   0xD204             BCS      ??Test_Huandao_6
    162                   Circle_L_Count++; 
   \   0000010E   0x....             LDR      R0,??DataTable1_9
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x1C40             ADDS     R0,R0,#+1
   \   00000114   0x....             LDR      R1,??DataTable1_9
   \   00000116   0x6008             STR      R0,[R1, #+0]
    163                   
    164                 if(AD_inductor[3]>AD_inductor[4]&&AD_inductor[4]<20) //100       
   \                     ??Test_Huandao_6: (+1)
   \   00000118   0x....             LDR      R0,??DataTable1_3
   \   0000011A   0x6900             LDR      R0,[R0, #+16]
   \   0000011C   0x....             LDR      R1,??DataTable1_3
   \   0000011E   0x68C9             LDR      R1,[R1, #+12]
   \   00000120   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000124   0xD20A             BCS      ??Test_Huandao_7
   \   00000126   0x....             LDR      R0,??DataTable1_3
   \   00000128   0x6900             LDR      R0,[R0, #+16]
   \   0000012A   0x....             LDR      R1,??DataTable1_13  ;; 0x41a00000
   \   0000012C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000130   0xD204             BCS      ??Test_Huandao_7
    165                    Circle_R_Count++; 
   \   00000132   0x....             LDR      R0,??DataTable1_8
   \   00000134   0x6800             LDR      R0,[R0, #+0]
   \   00000136   0x1C40             ADDS     R0,R0,#+1
   \   00000138   0x....             LDR      R1,??DataTable1_8
   \   0000013A   0x6008             STR      R0,[R1, #+0]
    166                 if(AD_inductor[4]>AD_inductor[3]&&AD_inductor[3]<20) //100       
   \                     ??Test_Huandao_7: (+1)
   \   0000013C   0x....             LDR      R0,??DataTable1_3
   \   0000013E   0x68C0             LDR      R0,[R0, #+12]
   \   00000140   0x....             LDR      R1,??DataTable1_3
   \   00000142   0x6909             LDR      R1,[R1, #+16]
   \   00000144   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000148   0xD20A             BCS      ??Test_Huandao_4
   \   0000014A   0x....             LDR      R0,??DataTable1_3
   \   0000014C   0x68C0             LDR      R0,[R0, #+12]
   \   0000014E   0x....             LDR      R1,??DataTable1_13  ;; 0x41a00000
   \   00000150   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000154   0xD204             BCS      ??Test_Huandao_4
    167                    Circle_L_Count++;   
   \   00000156   0x....             LDR      R0,??DataTable1_9
   \   00000158   0x6800             LDR      R0,[R0, #+0]
   \   0000015A   0x1C40             ADDS     R0,R0,#+1
   \   0000015C   0x....             LDR      R1,??DataTable1_9
   \   0000015E   0x6008             STR      R0,[R1, #+0]
    168               }      
    169          //同上解释，可通过计算速度时间路程来使用
    170                  if(AD_inductor[1]<Circle_Inductor_M3)//150转弯
   \                     ??Test_Huandao_4: (+1)
   \   00000160   0x....             LDR      R0,??DataTable1_14
   \   00000162   0x6800             LDR      R0,[R0, #+0]
   \   00000164   0x.... 0x....      BL       __aeabi_i2f
   \   00000168   0x0001             MOVS     R1,R0
   \   0000016A   0x....             LDR      R0,??DataTable1_3
   \   0000016C   0x6840             LDR      R0,[R0, #+4]
   \   0000016E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000172   0xD202             BCS      ??Test_Huandao_1
    171                  {
    172          
    173                      Circle_Flag=3;//转弯识别结束该转弯了
   \   00000174   0x2003             MOVS     R0,#+3
   \   00000176   0x....             LDR      R1,??DataTable1_1
   \   00000178   0x6008             STR      R0,[R1, #+0]
    174                   }
    175          }
    176          /*开始强制转弯**************************************************************/   
    177          if(Circle_Flag==3)//开始转弯
   \                     ??Test_Huandao_1: (+1)
   \   0000017A   0x....             LDR      R0,??DataTable1_1
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0x2803             CMP      R0,#+3
   \   00000180   0xD128             BNE      ??Test_Huandao_8
    178          {      
    179                if(Circle_Error_Flag==0)//防止左/右转后因为电感值变反而引发右/左转，
   \   00000182   0x....             LDR      R0,??DataTable1_15
   \   00000184   0x6800             LDR      R0,[R0, #+0]
   \   00000186   0x2800             CMP      R0,#+0
   \   00000188   0xD124             BNE      ??Test_Huandao_8
    180                {
    181                   if(Circle_L_Count>Circle_R_Count)
   \   0000018A   0x....             LDR      R0,??DataTable1_8
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0x....             LDR      R1,??DataTable1_9
   \   00000190   0x6809             LDR      R1,[R1, #+0]
   \   00000192   0x4288             CMP      R0,R1
   \   00000194   0xDA0F             BGE      ??Test_Huandao_9
    182                   {
    183                    Circle_L_Count=0;
   \   00000196   0x2000             MOVS     R0,#+0
   \   00000198   0x....             LDR      R1,??DataTable1_9
   \   0000019A   0x6008             STR      R0,[R1, #+0]
    184                    Circle_R_Count=0;
   \   0000019C   0x2000             MOVS     R0,#+0
   \   0000019E   0x....             LDR      R1,??DataTable1_8
   \   000001A0   0x6008             STR      R0,[R1, #+0]
    185                    
    186                     Circle_L_Flag=1;
   \   000001A2   0x2001             MOVS     R0,#+1
   \   000001A4   0x....             LDR      R1,??DataTable1_16
   \   000001A6   0x6008             STR      R0,[R1, #+0]
    187                     
    188                     Circle_Turn_Old_Flag=2;
   \   000001A8   0x2002             MOVS     R0,#+2
   \   000001AA   0x....             LDR      R1,??DataTable1_17
   \   000001AC   0x6008             STR      R0,[R1, #+0]
    189                     
    190                     Circle_Error_Flag=2;
   \   000001AE   0x2002             MOVS     R0,#+2
   \   000001B0   0x....             LDR      R1,??DataTable1_15
   \   000001B2   0x6008             STR      R0,[R1, #+0]
   \   000001B4   0xE00E             B        ??Test_Huandao_8
    191                   }
    192                   else
    193                   {
    194                      Circle_L_Count=0;
   \                     ??Test_Huandao_9: (+1)
   \   000001B6   0x2000             MOVS     R0,#+0
   \   000001B8   0x....             LDR      R1,??DataTable1_9
   \   000001BA   0x6008             STR      R0,[R1, #+0]
    195                      Circle_R_Count=0;
   \   000001BC   0x2000             MOVS     R0,#+0
   \   000001BE   0x....             LDR      R1,??DataTable1_8
   \   000001C0   0x6008             STR      R0,[R1, #+0]
    196                    
    197                      Circle_R_Flag=1;
   \   000001C2   0x2001             MOVS     R0,#+1
   \   000001C4   0x....             LDR      R1,??DataTable1_18
   \   000001C6   0x6008             STR      R0,[R1, #+0]
    198                      
    199                       Circle_Turn_Old_Flag=1;
   \   000001C8   0x2001             MOVS     R0,#+1
   \   000001CA   0x....             LDR      R1,??DataTable1_17
   \   000001CC   0x6008             STR      R0,[R1, #+0]
    200                      
    201                      Circle_Error_Flag=1;
   \   000001CE   0x2001             MOVS     R0,#+1
   \   000001D0   0x....             LDR      R1,??DataTable1_15
   \   000001D2   0x6008             STR      R0,[R1, #+0]
    202                   }           
    203                }
    204             }
    205                if(Circle_L_Flag==1)
   \                     ??Test_Huandao_8: (+1)
   \   000001D4   0x....             LDR      R0,??DataTable1_16
   \   000001D6   0x6800             LDR      R0,[R0, #+0]
   \   000001D8   0x2801             CMP      R0,#+1
   \   000001DA   0xD10E             BNE      ??Test_Huandao_10
    206                {
    207                    Chazhi = Circle_Chazhi;
   \   000001DC   0x....             LDR      R0,??DataTable1_19
   \   000001DE   0x6800             LDR      R0,[R0, #+0]
   \   000001E0   0x.... 0x....      BL       __aeabi_i2f
   \   000001E4   0x....             LDR      R1,??DataTable1_20
   \   000001E6   0x6008             STR      R0,[R1, #+0]
    208                    
    209                    Circle_L_Finish_Count++;
   \   000001E8   0x....             LDR      R0,??DataTable1_21
   \   000001EA   0x6800             LDR      R0,[R0, #+0]
   \   000001EC   0x1C40             ADDS     R0,R0,#+1
   \   000001EE   0x....             LDR      R1,??DataTable1_21
   \   000001F0   0x6008             STR      R0,[R1, #+0]
    210                    BUZZER_ON;
   \   000001F2   0x2101             MOVS     R1,#+1
   \   000001F4   0x2018             MOVS     R0,#+24
   \   000001F6   0x.... 0x....      BL       GpioSet
    211                }
    212                if(Circle_R_Flag==1)
   \                     ??Test_Huandao_10: (+1)
   \   000001FA   0x....             LDR      R0,??DataTable1_18
   \   000001FC   0x6800             LDR      R0,[R0, #+0]
   \   000001FE   0x2801             CMP      R0,#+1
   \   00000200   0xD10F             BNE      ??Test_Huandao_11
    213                {
    214                     Chazhi =-Circle_Chazhi;//47=70度,43.5=65
   \   00000202   0x....             LDR      R0,??DataTable1_19
   \   00000204   0x6801             LDR      R1,[R0, #+0]
   \   00000206   0x4248             RSBS     R0,R1,#+0
   \   00000208   0x.... 0x....      BL       __aeabi_i2f
   \   0000020C   0x....             LDR      R1,??DataTable1_20
   \   0000020E   0x6008             STR      R0,[R1, #+0]
    215                     Circle_R_Finish_Count++;      
   \   00000210   0x....             LDR      R0,??DataTable1_22
   \   00000212   0x6800             LDR      R0,[R0, #+0]
   \   00000214   0x1C40             ADDS     R0,R0,#+1
   \   00000216   0x....             LDR      R1,??DataTable1_22
   \   00000218   0x6008             STR      R0,[R1, #+0]
    216                               BUZZER_ON;
   \   0000021A   0x2101             MOVS     R1,#+1
   \   0000021C   0x2018             MOVS     R0,#+24
   \   0000021E   0x.... 0x....      BL       GpioSet
    217          
    218          }
    219              
    220          
    221              if(Circle_L_Finish_Count>Circle_Finish_Count_Max||Circle_R_Finish_Count>Circle_Finish_Count_Max)//圆环转弯结束
   \                     ??Test_Huandao_11: (+1)
   \   00000222   0x....             LDR      R0,??DataTable1_23
   \   00000224   0x6800             LDR      R0,[R0, #+0]
   \   00000226   0x....             LDR      R1,??DataTable1_21
   \   00000228   0x6809             LDR      R1,[R1, #+0]
   \   0000022A   0x4288             CMP      R0,R1
   \   0000022C   0xDB05             BLT      ??Test_Huandao_12
   \   0000022E   0x....             LDR      R0,??DataTable1_23
   \   00000230   0x6800             LDR      R0,[R0, #+0]
   \   00000232   0x....             LDR      R1,??DataTable1_22
   \   00000234   0x6809             LDR      R1,[R1, #+0]
   \   00000236   0x4288             CMP      R0,R1
   \   00000238   0xDA21             BGE      ??Test_Huandao_13
    222              {
    223                Circle_Count=0;
   \                     ??Test_Huandao_12: (+1)
   \   0000023A   0x2000             MOVS     R0,#+0
   \   0000023C   0x....             LDR      R1,??DataTable1_5
   \   0000023E   0x6008             STR      R0,[R1, #+0]
    224                Circle_Count2=0;
   \   00000240   0x2000             MOVS     R0,#+0
   \   00000242   0x....             LDR      R1,??DataTable1_24
   \   00000244   0x6008             STR      R0,[R1, #+0]
    225                Circle_L_Finish_Count=0;
   \   00000246   0x2000             MOVS     R0,#+0
   \   00000248   0x....             LDR      R1,??DataTable1_21
   \   0000024A   0x6008             STR      R0,[R1, #+0]
    226                Circle_R_Finish_Count=0;
   \   0000024C   0x2000             MOVS     R0,#+0
   \   0000024E   0x....             LDR      R1,??DataTable1_22
   \   00000250   0x6008             STR      R0,[R1, #+0]
    227                Circle_L_Count=0;
   \   00000252   0x2000             MOVS     R0,#+0
   \   00000254   0x....             LDR      R1,??DataTable1_9
   \   00000256   0x6008             STR      R0,[R1, #+0]
    228                Circle_R_Count=0;
   \   00000258   0x2000             MOVS     R0,#+0
   \   0000025A   0x....             LDR      R1,??DataTable1_8
   \   0000025C   0x6008             STR      R0,[R1, #+0]
    229                
    230                Circle_L_Flag=0;
   \   0000025E   0x2000             MOVS     R0,#+0
   \   00000260   0x....             LDR      R1,??DataTable1_16
   \   00000262   0x6008             STR      R0,[R1, #+0]
    231                Circle_R_Flag=0;
   \   00000264   0x2000             MOVS     R0,#+0
   \   00000266   0x....             LDR      R1,??DataTable1_18
   \   00000268   0x6008             STR      R0,[R1, #+0]
    232               Circle_Flag=6;
   \   0000026A   0x2006             MOVS     R0,#+6
   \   0000026C   0x....             LDR      R1,??DataTable1_1
   \   0000026E   0x6008             STR      R0,[R1, #+0]
    233                                    BUZZER_OFF;
   \   00000270   0x2100             MOVS     R1,#+0
   \   00000272   0x2018             MOVS     R0,#+24
   \   00000274   0x.... 0x....      BL       GpioSet
    234               Circle_Count_Out_Flag=1;//避免强制转弯迟,造成进环后反方向出赛道
   \   00000278   0x2001             MOVS     R0,#+1
   \   0000027A   0x....             LDR      R1,??DataTable1_25
   \   0000027C   0x6008             STR      R0,[R1, #+0]
    235          
    236              }
    237            
    238          /*下一个环岛等待*/
    239          if(Circle_Flag==6)
   \                     ??Test_Huandao_13: (+1)
   \   0000027E   0x....             LDR      R0,??DataTable1_1
   \   00000280   0x6800             LDR      R0,[R0, #+0]
   \   00000282   0x2806             CMP      R0,#+6
   \   00000284   0xD119             BNE      ??Test_Huandao_14
    240            {
    241                if(AD_inductor[1]<100)
   \   00000286   0x....             LDR      R0,??DataTable1_3
   \   00000288   0x6840             LDR      R0,[R0, #+4]
   \   0000028A   0x....             LDR      R1,??DataTable1_26  ;; 0x42c80000
   \   0000028C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000290   0xD213             BCS      ??Test_Huandao_14
    242                {
    243                  Circle_Count6++;
   \   00000292   0x....             LDR      R0,??DataTable1_27
   \   00000294   0x6800             LDR      R0,[R0, #+0]
   \   00000296   0x1C40             ADDS     R0,R0,#+1
   \   00000298   0x....             LDR      R1,??DataTable1_27
   \   0000029A   0x6008             STR      R0,[R1, #+0]
    244                  if(Circle_Count6>Circle_Count6_Max)
   \   0000029C   0x....             LDR      R0,??DataTable1_28
   \   0000029E   0x6800             LDR      R0,[R0, #+0]
   \   000002A0   0x....             LDR      R1,??DataTable1_27
   \   000002A2   0x6809             LDR      R1,[R1, #+0]
   \   000002A4   0x4288             CMP      R0,R1
   \   000002A6   0xDA08             BGE      ??Test_Huandao_14
    245                  {
    246                    Circle_Count6=0;
   \   000002A8   0x2000             MOVS     R0,#+0
   \   000002AA   0x....             LDR      R1,??DataTable1_27
   \   000002AC   0x6008             STR      R0,[R1, #+0]
    247                  Circle_Flag=0;
   \   000002AE   0x2000             MOVS     R0,#+0
   \   000002B0   0x....             LDR      R1,??DataTable1_1
   \   000002B2   0x6008             STR      R0,[R1, #+0]
    248                  Circle_Error_Flag=0;//转弯误判解除
   \   000002B4   0x2000             MOVS     R0,#+0
   \   000002B6   0x....             LDR      R1,??DataTable1_15
   \   000002B8   0x6008             STR      R0,[R1, #+0]
    249                  }
    250                }
    251            }
    252          
    253          }
   \                     ??Test_Huandao_14: (+1)
   \   000002BA   0xBD10             POP      {R4,PC}          ;; return
    254          /*************************************************************************
    255          电感数据分析
    256          *************************************************************************/

   \                                 In section .text, align 4, keep-with-next
    257          void Inductor_analyse()
    258          {
   \                     Inductor_analyse: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    259               int16  i,max_front=0;//max_back
   \   00000002   0x2500             MOVS     R5,#+0
    260               static int16 max_old = 1,max_crosstalk = 1;
    261               static int16 position_last = 1;
    262               float  sensor_1;
    263          
    264               Read_ADC();
   \   00000004   0x.... 0x....      BL       Read_ADC
    265          
    266               Inductor_Check();//电感最大最小值校验 
   \   00000008   0x.... 0x....      BL       Inductor_Check
    267               
    268          /*********************归一化处理********************/
    269               for(i=0;i<5;i++)
   \   0000000C   0x2000             MOVS     R0,#+0
   \   0000000E   0x0004             MOVS     R4,R0
   \                     ??Inductor_analyse_0: (+1)
   \   00000010   0xB224             SXTH     R4,R4
   \   00000012   0x2C05             CMP      R4,#+5
   \   00000014   0xDA34             BGE      ??Inductor_analyse_1
    270               {
    271                  sensor_to_one[i] = (float)(AD_valu[i] - min_v[i])/(float)(max_v[i]- min_v[i]);
   \   00000016   0x48A8             LDR      R0,??Inductor_analyse_2
   \   00000018   0xB224             SXTH     R4,R4
   \   0000001A   0x2104             MOVS     R1,#+4
   \   0000001C   0x4361             MULS     R1,R4,R1
   \   0000001E   0x5840             LDR      R0,[R0, R1]
   \   00000020   0x.... 0x....      BL       __aeabi_i2f
   \   00000024   0x49A5             LDR      R1,??Inductor_analyse_2+0x4
   \   00000026   0xB224             SXTH     R4,R4
   \   00000028   0x2204             MOVS     R2,#+4
   \   0000002A   0x4362             MULS     R2,R4,R2
   \   0000002C   0x5889             LDR      R1,[R1, R2]
   \   0000002E   0x.... 0x....      BL       __aeabi_fsub
   \   00000032   0x0007             MOVS     R7,R0
   \   00000034   0x48A2             LDR      R0,??Inductor_analyse_2+0x8
   \   00000036   0xB224             SXTH     R4,R4
   \   00000038   0x2104             MOVS     R1,#+4
   \   0000003A   0x4361             MULS     R1,R4,R1
   \   0000003C   0x5840             LDR      R0,[R0, R1]
   \   0000003E   0x499F             LDR      R1,??Inductor_analyse_2+0x4
   \   00000040   0xB224             SXTH     R4,R4
   \   00000042   0x2204             MOVS     R2,#+4
   \   00000044   0x4362             MULS     R2,R4,R2
   \   00000046   0x5889             LDR      R1,[R1, R2]
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
   \   0000004C   0x0001             MOVS     R1,R0
   \   0000004E   0x0038             MOVS     R0,R7
   \   00000050   0x.... 0x....      BL       __aeabi_fdiv
   \   00000054   0x499B             LDR      R1,??Inductor_analyse_2+0xC
   \   00000056   0xB224             SXTH     R4,R4
   \   00000058   0x2204             MOVS     R2,#+4
   \   0000005A   0x4362             MULS     R2,R4,R2
   \   0000005C   0x5088             STR      R0,[R1, R2]
    272                  if(sensor_to_one[i]<=0.0)  sensor_to_one[i]=0.001;
   \   0000005E   0x4899             LDR      R0,??Inductor_analyse_2+0xC
   \   00000060   0xB224             SXTH     R4,R4
   \   00000062   0x2104             MOVS     R1,#+4
   \   00000064   0x4361             MULS     R1,R4,R1
   \   00000066   0x5840             LDR      R0,[R0, R1]
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000006E   0xD805             BHI      ??Inductor_analyse_3
   \   00000070   0x4895             LDR      R0,??Inductor_analyse_2+0x10  ;; 0x3a83126f
   \   00000072   0x4994             LDR      R1,??Inductor_analyse_2+0xC
   \   00000074   0xB224             SXTH     R4,R4
   \   00000076   0x2204             MOVS     R2,#+4
   \   00000078   0x4362             MULS     R2,R4,R2
   \   0000007A   0x5088             STR      R0,[R1, R2]
    273               }   
   \                     ??Inductor_analyse_3: (+1)
   \   0000007C   0x1C64             ADDS     R4,R4,#+1
   \   0000007E   0xE7C7             B        ??Inductor_analyse_0
    274                    sensor_to_one_Huan=sensor_to_one[1];
   \                     ??Inductor_analyse_1: (+1)
   \   00000080   0x4890             LDR      R0,??Inductor_analyse_2+0xC
   \   00000082   0x6840             LDR      R0,[R0, #+4]
   \   00000084   0x4991             LDR      R1,??Inductor_analyse_2+0x14
   \   00000086   0x6008             STR      R0,[R1, #+0]
    275          
    276                 for(i=0;i<5;i++)
   \   00000088   0x2000             MOVS     R0,#+0
   \   0000008A   0x0004             MOVS     R4,R0
   \                     ??Inductor_analyse_4: (+1)
   \   0000008C   0xB224             SXTH     R4,R4
   \   0000008E   0x2C05             CMP      R4,#+5
   \   00000090   0xDA0E             BGE      ??Inductor_analyse_5
    277               {
    278                
    279                  AD_inductor[i] = 100 * sensor_to_one[i];     //AD[i]为归一化后的值  范围为0-100
   \   00000092   0x488C             LDR      R0,??Inductor_analyse_2+0xC
   \   00000094   0xB224             SXTH     R4,R4
   \   00000096   0x2104             MOVS     R1,#+4
   \   00000098   0x4361             MULS     R1,R4,R1
   \   0000009A   0x5840             LDR      R0,[R0, R1]
   \   0000009C   0x498C             LDR      R1,??Inductor_analyse_2+0x18  ;; 0x42c80000
   \   0000009E   0x.... 0x....      BL       __aeabi_fmul
   \   000000A2   0x498C             LDR      R1,??Inductor_analyse_2+0x1C
   \   000000A4   0xB224             SXTH     R4,R4
   \   000000A6   0x2204             MOVS     R2,#+4
   \   000000A8   0x4362             MULS     R2,R4,R2
   \   000000AA   0x5088             STR      R0,[R1, R2]
    280               }
   \   000000AC   0x1C64             ADDS     R4,R4,#+1
   \   000000AE   0xE7ED             B        ??Inductor_analyse_4
    281               AD_inductor_Huan=100*sensor_to_one_Huan;
   \                     ??Inductor_analyse_5: (+1)
   \   000000B0   0x4886             LDR      R0,??Inductor_analyse_2+0x14
   \   000000B2   0x6801             LDR      R1,[R0, #+0]
   \   000000B4   0x4886             LDR      R0,??Inductor_analyse_2+0x18  ;; 0x42c80000
   \   000000B6   0x.... 0x....      BL       __aeabi_fmul
   \   000000BA   0x4987             LDR      R1,??Inductor_analyse_2+0x20
   \   000000BC   0x6008             STR      R0,[R1, #+0]
    282          /*******1号电感特殊归一化，用于坡道检测********/
    283                sensor_1 = (float)(AD_valu[1] - min_v[1])/(float)(ad_valu[1][0] - min_v[1]);
   \   000000BE   0x487E             LDR      R0,??Inductor_analyse_2
   \   000000C0   0x6840             LDR      R0,[R0, #+4]
   \   000000C2   0x.... 0x....      BL       __aeabi_i2f
   \   000000C6   0x497D             LDR      R1,??Inductor_analyse_2+0x4
   \   000000C8   0x6849             LDR      R1,[R1, #+4]
   \   000000CA   0x.... 0x....      BL       __aeabi_fsub
   \   000000CE   0x0007             MOVS     R7,R0
   \   000000D0   0x4882             LDR      R0,??Inductor_analyse_2+0x24
   \   000000D2   0x210A             MOVS     R1,#+10
   \   000000D4   0x5E40             LDRSH    R0,[R0, R1]
   \   000000D6   0x.... 0x....      BL       __aeabi_i2f
   \   000000DA   0x4978             LDR      R1,??Inductor_analyse_2+0x4
   \   000000DC   0x6849             LDR      R1,[R1, #+4]
   \   000000DE   0x.... 0x....      BL       __aeabi_fsub
   \   000000E2   0x0001             MOVS     R1,R0
   \   000000E4   0x0038             MOVS     R0,R7
   \   000000E6   0x.... 0x....      BL       __aeabi_fdiv
   \   000000EA   0x0006             MOVS     R6,R0
    284                if(sensor_1 <= 0.0)  sensor_1 = 0.001;
   \   000000EC   0x0030             MOVS     R0,R6
   \   000000EE   0x2100             MOVS     R1,#+0
   \   000000F0   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000F4   0xD801             BHI      ??Inductor_analyse_6
   \   000000F6   0x4874             LDR      R0,??Inductor_analyse_2+0x10  ;; 0x3a83126f
   \   000000F8   0x0006             MOVS     R6,R0
    285                Slope_AD_1 = 100 * sensor_1;
   \                     ??Inductor_analyse_6: (+1)
   \   000000FA   0x4875             LDR      R0,??Inductor_analyse_2+0x18  ;; 0x42c80000
   \   000000FC   0x0031             MOVS     R1,R6
   \   000000FE   0x.... 0x....      BL       __aeabi_fmul
   \   00000102   0x4977             LDR      R1,??Inductor_analyse_2+0x28
   \   00000104   0x6008             STR      R0,[R1, #+0]
    286          /***********找出最强的传感器**********************/
    287                 for(i=0;i<3;i++)                 
   \   00000106   0x2000             MOVS     R0,#+0
   \   00000108   0x0004             MOVS     R4,R0
   \                     ??Inductor_analyse_7: (+1)
   \   0000010A   0xB224             SXTH     R4,R4
   \   0000010C   0x2C03             CMP      R4,#+3
   \   0000010E   0xDA0F             BGE      ??Inductor_analyse_8
    288                 {
    289                   if(AD_inductor[max_front]<AD_inductor[i])
   \   00000110   0x4870             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000112   0xB22D             SXTH     R5,R5
   \   00000114   0x2104             MOVS     R1,#+4
   \   00000116   0x4369             MULS     R1,R5,R1
   \   00000118   0x5840             LDR      R0,[R0, R1]
   \   0000011A   0x496E             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000011C   0xB224             SXTH     R4,R4
   \   0000011E   0x2204             MOVS     R2,#+4
   \   00000120   0x4362             MULS     R2,R4,R2
   \   00000122   0x5889             LDR      R1,[R1, R2]
   \   00000124   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000128   0xD200             BCS      ??Inductor_analyse_9
    290                     max_front=i;
   \   0000012A   0x0025             MOVS     R5,R4
    291                 }
   \                     ??Inductor_analyse_9: (+1)
   \   0000012C   0x1C64             ADDS     R4,R4,#+1
   \   0000012E   0xE7EC             B        ??Inductor_analyse_7
    292                 max_value=AD_inductor[max_front];  //最大电感值
   \                     ??Inductor_analyse_8: (+1)
   \   00000130   0x4868             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000132   0xB22D             SXTH     R5,R5
   \   00000134   0x2104             MOVS     R1,#+4
   \   00000136   0x4369             MULS     R1,R5,R1
   \   00000138   0x5840             LDR      R0,[R0, R1]
   \   0000013A   0x496A             LDR      R1,??Inductor_analyse_2+0x2C
   \   0000013C   0x6008             STR      R0,[R1, #+0]
    293          /**************丢线时最大值取旧值***************/
    294                 if(max_value < 5)//?           
   \   0000013E   0x4869             LDR      R0,??Inductor_analyse_2+0x2C
   \   00000140   0x6800             LDR      R0,[R0, #+0]
   \   00000142   0x49CC             LDR      R1,??Inductor_analyse_10  ;; 0x40a00000
   \   00000144   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000148   0xD20B             BCS      ??Inductor_analyse_11
    295                 {
    296                   max_front=max_old;
   \   0000014A   0x48CB             LDR      R0,??Inductor_analyse_10+0x4
   \   0000014C   0x2100             MOVS     R1,#+0
   \   0000014E   0x5E40             LDRSH    R0,[R0, R1]
   \   00000150   0x0005             MOVS     R5,R0
    297                   max_value=AD_inductor[max_front];
   \   00000152   0x4860             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000154   0xB22D             SXTH     R5,R5
   \   00000156   0x2104             MOVS     R1,#+4
   \   00000158   0x4369             MULS     R1,R5,R1
   \   0000015A   0x5840             LDR      R0,[R0, R1]
   \   0000015C   0x4961             LDR      R1,??Inductor_analyse_2+0x2C
   \   0000015E   0x6008             STR      R0,[R1, #+0]
   \   00000160   0xE001             B        ??Inductor_analyse_12
    298                 }
    299                 else
    300                   max_old=max_front;
   \                     ??Inductor_analyse_11: (+1)
   \   00000162   0x48C5             LDR      R0,??Inductor_analyse_10+0x4
   \   00000164   0x8005             STRH     R5,[R0, #+0]
    301          /********防串道***************/
    302          
    303          /****************位置解算，解算过程的值用归一化放大后的值************************/
    304                 position_last = position;
   \                     ??Inductor_analyse_12: (+1)
   \   00000166   0x48C5             LDR      R0,??Inductor_analyse_10+0x8
   \   00000168   0x7800             LDRB     R0,[R0, #+0]
   \   0000016A   0x49C5             LDR      R1,??Inductor_analyse_10+0xC
   \   0000016C   0x8008             STRH     R0,[R1, #+0]
    305                 
    306                  if(max_front==0 && (AD_inductor[1] <= Position_transit[0]&&AD_inductor[1]>AD_inductor[2]&&AD_inductor[0]>1)&&AD_valu[1]>AD_valu[2])  //已经偏离0号传感器
   \   0000016E   0xB22D             SXTH     R5,R5
   \   00000170   0x2D00             CMP      R5,#+0
   \   00000172   0xD11F             BNE      ??Inductor_analyse_13
   \   00000174   0x48C3             LDR      R0,??Inductor_analyse_10+0x10
   \   00000176   0x6800             LDR      R0,[R0, #+0]
   \   00000178   0x.... 0x....      BL       __aeabi_i2f
   \   0000017C   0x4955             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000017E   0x6849             LDR      R1,[R1, #+4]
   \   00000180   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000184   0xD816             BHI      ??Inductor_analyse_13
   \   00000186   0x4853             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000188   0x6880             LDR      R0,[R0, #+8]
   \   0000018A   0x4952             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000018C   0x6849             LDR      R1,[R1, #+4]
   \   0000018E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000192   0xD20F             BCS      ??Inductor_analyse_13
   \   00000194   0x484F             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000196   0x6800             LDR      R0,[R0, #+0]
   \   00000198   0x49CA             LDR      R1,??Inductor_analyse_14  ;; 0x3f800001
   \   0000019A   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000019E   0xD809             BHI      ??Inductor_analyse_13
   \   000001A0   0x4845             LDR      R0,??Inductor_analyse_2
   \   000001A2   0x6880             LDR      R0,[R0, #+8]
   \   000001A4   0x4944             LDR      R1,??Inductor_analyse_2
   \   000001A6   0x6849             LDR      R1,[R1, #+4]
   \   000001A8   0x4288             CMP      R0,R1
   \   000001AA   0xDA03             BGE      ??Inductor_analyse_13
    307                 {//右电感最大且此时的中电感值<=过渡点0时中电感的值
    308                         position=0;//右电感在电磁线左方，整个小车都在电磁线左方
   \   000001AC   0x2000             MOVS     R0,#+0
   \   000001AE   0x49B3             LDR      R1,??Inductor_analyse_10+0x8
   \   000001B0   0x7008             STRB     R0,[R1, #+0]
   \   000001B2   0xE062             B        ??Inductor_analyse_15
    309          //              LED_1_ON;
    310           //          AD_0_max = AD_inductor[0];//zs加
    311                 }
    312                 else if((max_front==0 && (AD_inductor[1] > Position_transit[0] )) || (max_front==1 && (AD_inductor[0] >AD_inductor[2]) ))  //左侧位置  0-1号传感器之间
   \                     ??Inductor_analyse_13: (+1)
   \   000001B4   0xB22D             SXTH     R5,R5
   \   000001B6   0x2D00             CMP      R5,#+0
   \   000001B8   0xD108             BNE      ??Inductor_analyse_16
   \   000001BA   0x48B2             LDR      R0,??Inductor_analyse_10+0x10
   \   000001BC   0x6800             LDR      R0,[R0, #+0]
   \   000001BE   0x.... 0x....      BL       __aeabi_i2f
   \   000001C2   0x4944             LDR      R1,??Inductor_analyse_2+0x1C
   \   000001C4   0x6849             LDR      R1,[R1, #+4]
   \   000001C6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001CA   0xD309             BCC      ??Inductor_analyse_17
   \                     ??Inductor_analyse_16: (+1)
   \   000001CC   0xB22D             SXTH     R5,R5
   \   000001CE   0x2D01             CMP      R5,#+1
   \   000001D0   0xD10E             BNE      ??Inductor_analyse_18
   \   000001D2   0x4840             LDR      R0,??Inductor_analyse_2+0x1C
   \   000001D4   0x6880             LDR      R0,[R0, #+8]
   \   000001D6   0x493F             LDR      R1,??Inductor_analyse_2+0x1C
   \   000001D8   0x6809             LDR      R1,[R1, #+0]
   \   000001DA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001DE   0xD207             BCS      ??Inductor_analyse_18
    313                 {//右电感最大且此时中电感的值>过渡点0时中电感的值||中电感最大且右电感的值>左电感的值
    314                     //      中电感在电磁线左边                            中电感在电磁线左边
    315                     
    316                       position=1;//中电感在电磁线左边,小车偏左(半个小车以上部分在电磁线左边但不是全部)
   \                     ??Inductor_analyse_17: (+1)
   \   000001E0   0x2001             MOVS     R0,#+1
   \   000001E2   0x49A6             LDR      R1,??Inductor_analyse_10+0x8
   \   000001E4   0x7008             STRB     R0,[R1, #+0]
    317                       AD_0_max = AD_inductor[0]; //记录下此时的0号传感器的归一放大后的值
   \   000001E6   0x483B             LDR      R0,??Inductor_analyse_2+0x1C
   \   000001E8   0x6800             LDR      R0,[R0, #+0]
   \   000001EA   0x49B7             LDR      R1,??Inductor_analyse_14+0x4
   \   000001EC   0x6008             STR      R0,[R1, #+0]
   \   000001EE   0xE044             B        ??Inductor_analyse_15
    318                      
    319                 }
    320                 else if((max_front==1 && (AD_inductor[2] >AD_inductor[0]) ) || (max_front==2 && (AD_inductor[1] > Position_transit[1] )))  //右侧位置  1-2号传感器之间
   \                     ??Inductor_analyse_18: (+1)
   \   000001F0   0xB22D             SXTH     R5,R5
   \   000001F2   0x2D01             CMP      R5,#+1
   \   000001F4   0xD106             BNE      ??Inductor_analyse_19
   \   000001F6   0x4837             LDR      R0,??Inductor_analyse_2+0x1C
   \   000001F8   0x6800             LDR      R0,[R0, #+0]
   \   000001FA   0x4936             LDR      R1,??Inductor_analyse_2+0x1C
   \   000001FC   0x6889             LDR      R1,[R1, #+8]
   \   000001FE   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000202   0xD30B             BCC      ??Inductor_analyse_20
   \                     ??Inductor_analyse_19: (+1)
   \   00000204   0xB22D             SXTH     R5,R5
   \   00000206   0x2D02             CMP      R5,#+2
   \   00000208   0xD110             BNE      ??Inductor_analyse_21
   \   0000020A   0x489E             LDR      R0,??Inductor_analyse_10+0x10
   \   0000020C   0x6840             LDR      R0,[R0, #+4]
   \   0000020E   0x.... 0x....      BL       __aeabi_i2f
   \   00000212   0x4930             LDR      R1,??Inductor_analyse_2+0x1C
   \   00000214   0x6849             LDR      R1,[R1, #+4]
   \   00000216   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000021A   0xD207             BCS      ??Inductor_analyse_21
    321                 {//中电感最大且左电感的值大于右电感的值||左电感最大且此时中电感的值>过渡点1时中电感的值
    322                  //    中电感在电磁线右边                         中电感在电磁线右边          
    323                       position=2;//中电感在电磁线右边,小车偏右(半个小车以上部分在电磁线右边但不是全部)
   \                     ??Inductor_analyse_20: (+1)
   \   0000021C   0x2002             MOVS     R0,#+2
   \   0000021E   0x4997             LDR      R1,??Inductor_analyse_10+0x8
   \   00000220   0x7008             STRB     R0,[R1, #+0]
    324                       AD_2_max = AD_inductor[2]; //记录下此时的3号传感器归一放大后的值
   \   00000222   0x482C             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000224   0x6880             LDR      R0,[R0, #+8]
   \   00000226   0x....             LDR      R1,??DataTable2
   \   00000228   0x6008             STR      R0,[R1, #+0]
   \   0000022A   0xE026             B        ??Inductor_analyse_15
    325                 }
    326                 else if(max_front==2 && (AD_inductor[1] <= Position_transit[1] &&AD_inductor[1]>AD_inductor[0]&&AD_inductor[2]>1)&&AD_valu[1]>AD_valu[0]) //已经偏离3号传感器
   \                     ??Inductor_analyse_21: (+1)
   \   0000022C   0xB22D             SXTH     R5,R5
   \   0000022E   0x2D02             CMP      R5,#+2
   \   00000230   0xD11F             BNE      ??Inductor_analyse_22
   \   00000232   0x4894             LDR      R0,??Inductor_analyse_10+0x10
   \   00000234   0x6840             LDR      R0,[R0, #+4]
   \   00000236   0x.... 0x....      BL       __aeabi_i2f
   \   0000023A   0x4926             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000023C   0x6849             LDR      R1,[R1, #+4]
   \   0000023E   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000242   0xD816             BHI      ??Inductor_analyse_22
   \   00000244   0x4823             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000246   0x6800             LDR      R0,[R0, #+0]
   \   00000248   0x4922             LDR      R1,??Inductor_analyse_2+0x1C
   \   0000024A   0x6849             LDR      R1,[R1, #+4]
   \   0000024C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000250   0xD20F             BCS      ??Inductor_analyse_22
   \   00000252   0x4820             LDR      R0,??Inductor_analyse_2+0x1C
   \   00000254   0x6880             LDR      R0,[R0, #+8]
   \   00000256   0x499B             LDR      R1,??Inductor_analyse_14  ;; 0x3f800001
   \   00000258   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000025C   0xD809             BHI      ??Inductor_analyse_22
   \   0000025E   0x4816             LDR      R0,??Inductor_analyse_2
   \   00000260   0x6800             LDR      R0,[R0, #+0]
   \   00000262   0x4915             LDR      R1,??Inductor_analyse_2
   \   00000264   0x6849             LDR      R1,[R1, #+4]
   \   00000266   0x4288             CMP      R0,R1
   \   00000268   0xDA03             BGE      ??Inductor_analyse_22
    327                 {//左电感最大且此时的中电感值<=过渡点1时中电感的值
    328                      
    329                         position = 3;//左电感在电磁线右方，整个小车都在电磁线右方
   \   0000026A   0x2003             MOVS     R0,#+3
   \   0000026C   0x4983             LDR      R1,??Inductor_analyse_10+0x8
   \   0000026E   0x7008             STRB     R0,[R1, #+0]
   \   00000270   0xE003             B        ??Inductor_analyse_15
    330                      
    331                         //                          LED_2_ON;
    332                  // AD_2_max = AD_inductor[2];//zs加
    333                 }   
    334                 else 
    335                 {
    336                   position=position_last;
   \                     ??Inductor_analyse_22: (+1)
   \   00000272   0x4883             LDR      R0,??Inductor_analyse_10+0xC
   \   00000274   0x8800             LDRH     R0,[R0, #+0]
   \   00000276   0x4981             LDR      R1,??Inductor_analyse_10+0x8
   \   00000278   0x7008             STRB     R0,[R1, #+0]
    337                 }
    338          /*位置防跳变过大，比如前1ms小车都在电磁线左边，后1ms小车偏右*/  
    339                 if(abs_inductor(position - position_last) > 1)  //位置跳变过大时进入 
   \                     ??Inductor_analyse_15: (+1)
   \   0000027A   0x4880             LDR      R0,??Inductor_analyse_10+0x8
   \   0000027C   0x7800             LDRB     R0,[R0, #+0]
   \   0000027E   0x4980             LDR      R1,??Inductor_analyse_10+0xC
   \   00000280   0x2200             MOVS     R2,#+0
   \   00000282   0x5E89             LDRSH    R1,[R1, R2]
   \   00000284   0x1A40             SUBS     R0,R0,R1
   \   00000286   0x.... 0x....      BL       abs_inductor
   \   0000028A   0x2802             CMP      R0,#+2
   \   0000028C   0xDB04             BLT      ??Inductor_analyse_23
    340                 {
    341                      position = position_last;//此刻小车位置转变为上一次小车位置
   \   0000028E   0x487C             LDR      R0,??Inductor_analyse_10+0xC
   \   00000290   0x8800             LDRH     R0,[R0, #+0]
   \   00000292   0x497A             LDR      R1,??Inductor_analyse_10+0x8
   \   00000294   0x7008             STRB     R0,[R1, #+0]
   \   00000296   0xE003             B        ??Inductor_analyse_24
    342                 }
    343                 else
    344                 {
    345                 position_last = position;//正常记录，接下来的上次小车位置=此刻小车位置
   \                     ??Inductor_analyse_23: (+1)
   \   00000298   0x4878             LDR      R0,??Inductor_analyse_10+0x8
   \   0000029A   0x7800             LDRB     R0,[R0, #+0]
   \   0000029C   0x4978             LDR      R1,??Inductor_analyse_10+0xC
   \   0000029E   0x8008             STRH     R0,[R1, #+0]
    346                 }   
    347          
    348          
    349          
    350          
    351                 Chazhi_Last=Chazhi;
   \                     ??Inductor_analyse_24: (+1)
   \   000002A0   0x....             LDR      R0,??DataTable2_1
   \   000002A2   0x6800             LDR      R0,[R0, #+0]
   \   000002A4   0x....             LDR      R1,??DataTable2_2
   \   000002A6   0x6008             STR      R0,[R1, #+0]
    352          
    353           switch (max_front)  //最大电感序列号
   \   000002A8   0xB22D             SXTH     R5,R5
   \   000002AA   0x2D00             CMP      R5,#+0
   \   000002AC   0xD01C             BEQ      ??Inductor_analyse_25
   \   000002AE   0x2D02             CMP      R5,#+2
   \   000002B0   0xD100             BNE      .+4
   \   000002B2   0xE0AF             B        ??Inductor_analyse_26
   \   000002B4   0xD369             BCC      ??Inductor_analyse_27
   \   000002B6   0xE10C             B        ??Inductor_analyse_28
   \                     ??Inductor_analyse_2:
   \   000002B8   0x........         DC32     AD_valu
   \   000002BC   0x........         DC32     min_v
   \   000002C0   0x........         DC32     max_v
   \   000002C4   0x........         DC32     sensor_to_one
   \   000002C8   0x3A83126F         DC32     0x3a83126f
   \   000002CC   0x........         DC32     sensor_to_one_Huan
   \   000002D0   0x42C80000         DC32     0x42c80000
   \   000002D4   0x........         DC32     AD_inductor
   \   000002D8   0x........         DC32     AD_inductor_Huan
   \   000002DC   0x........         DC32     ad_valu
   \   000002E0   0x........         DC32     Slope_AD_1
   \   000002E4   0x........         DC32     max_value
    354            {
    355            /*********** 车离开导线偏左，分3种情况************/
    356            case 0:   // 右侧电感最大
    357              {
    358                if(AD_inductor[0] > RefAd)     //右侧电感> RefAd=20 【RefAd参考值视情况改动】
   \                     ??Inductor_analyse_25: (+1)
   \   000002E8   0x....             LDR      R0,??DataTable2_3
   \   000002EA   0x6800             LDR      R0,[R0, #+0]
   \   000002EC   0x.... 0x....      BL       __aeabi_i2f
   \   000002F0   0x....             LDR      R1,??DataTable2_4
   \   000002F2   0x6809             LDR      R1,[R1, #+0]
   \   000002F4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000002F8   0xD243             BCS      ??Inductor_analyse_29
    359                {
    360                                    
    361                  if(AD_inductor[1] > RefAd)  //中间电感> RefAd=20   16
   \   000002FA   0x....             LDR      R0,??DataTable2_3
   \   000002FC   0x6800             LDR      R0,[R0, #+0]
   \   000002FE   0x.... 0x....      BL       __aeabi_i2f
   \   00000302   0x....             LDR      R1,??DataTable2_4
   \   00000304   0x6849             LDR      R1,[R1, #+4]
   \   00000306   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000030A   0xD21D             BCS      ??Inductor_analyse_30
    362                  {
    363                   Chazhi = -30 - 30*(AD_inductor[0]-AD_inductor[1])/(AD_inductor[0]-RefAd); 
   \   0000030C   0x....             LDR      R0,??DataTable2_4
   \   0000030E   0x6800             LDR      R0,[R0, #+0]
   \   00000310   0x....             LDR      R1,??DataTable2_4
   \   00000312   0x6849             LDR      R1,[R1, #+4]
   \   00000314   0x.... 0x....      BL       __aeabi_fsub
   \   00000318   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   0000031A   0x.... 0x....      BL       __aeabi_fmul
   \   0000031E   0x0007             MOVS     R7,R0
   \   00000320   0x....             LDR      R0,??DataTable2_3
   \   00000322   0x6800             LDR      R0,[R0, #+0]
   \   00000324   0x.... 0x....      BL       __aeabi_i2f
   \   00000328   0x0001             MOVS     R1,R0
   \   0000032A   0x....             LDR      R0,??DataTable2_4
   \   0000032C   0x6800             LDR      R0,[R0, #+0]
   \   0000032E   0x.... 0x....      BL       __aeabi_fsub
   \   00000332   0x0001             MOVS     R1,R0
   \   00000334   0x0038             MOVS     R0,R7
   \   00000336   0x.... 0x....      BL       __aeabi_fdiv
   \   0000033A   0x0001             MOVS     R1,R0
   \   0000033C   0x....             LDR      R0,??DataTable2_6  ;; 0xc1f00000
   \   0000033E   0x.... 0x....      BL       __aeabi_fsub
   \   00000342   0x....             LDR      R1,??DataTable2_1
   \   00000344   0x6008             STR      R0,[R1, #+0]
   \   00000346   0xE01F             B        ??Inductor_analyse_31
    364                  }
    365                  else 
    366                  {
    367                    Chazhi=-100 +40*(AD_inductor[0]-RefAd)/(AD_inductor[0]-AD_inductor[1]);   
   \                     ??Inductor_analyse_30: (+1)
   \   00000348   0x....             LDR      R0,??DataTable2_3
   \   0000034A   0x6800             LDR      R0,[R0, #+0]
   \   0000034C   0x.... 0x....      BL       __aeabi_i2f
   \   00000350   0x0001             MOVS     R1,R0
   \   00000352   0x....             LDR      R0,??DataTable2_4
   \   00000354   0x6800             LDR      R0,[R0, #+0]
   \   00000356   0x.... 0x....      BL       __aeabi_fsub
   \   0000035A   0x....             LDR      R1,??DataTable2_7  ;; 0x42200000
   \   0000035C   0x.... 0x....      BL       __aeabi_fmul
   \   00000360   0x0007             MOVS     R7,R0
   \   00000362   0x....             LDR      R0,??DataTable2_4
   \   00000364   0x6800             LDR      R0,[R0, #+0]
   \   00000366   0x....             LDR      R1,??DataTable2_4
   \   00000368   0x6849             LDR      R1,[R1, #+4]
   \   0000036A   0x.... 0x....      BL       __aeabi_fsub
   \   0000036E   0x0001             MOVS     R1,R0
   \   00000370   0x0038             MOVS     R0,R7
   \   00000372   0x.... 0x....      BL       __aeabi_fdiv
   \   00000376   0x....             LDR      R1,??DataTable2_8  ;; 0xc2c80000
   \   00000378   0x.... 0x....      BL       __aeabi_fadd
   \   0000037C   0x....             LDR      R1,??DataTable2_1
   \   0000037E   0x6008             STR      R0,[R1, #+0]
   \   00000380   0xE002             B        ??Inductor_analyse_31
    368                  }
    369                }
    370               else  
    371                 	Chazhi = -100;      //丢信号
   \                     ??Inductor_analyse_29: (+1)
   \   00000382   0x....             LDR      R0,??DataTable2_8  ;; 0xc2c80000
   \   00000384   0x....             LDR      R1,??DataTable2_1
   \   00000386   0x6008             STR      R0,[R1, #+0]
    372              } break;
   \                     ??Inductor_analyse_31: (+1)
   \   00000388   0xE0A3             B        ??Inductor_analyse_28
    373          
    374            case 1://中间电感最大
    375               {
    376                  if(AD_inductor[1] > RefAd)   //已5修改  中间电感
   \                     ??Inductor_analyse_27: (+1)
   \   0000038A   0x....             LDR      R0,??DataTable2_3
   \   0000038C   0x6800             LDR      R0,[R0, #+0]
   \   0000038E   0x.... 0x....      BL       __aeabi_i2f
   \   00000392   0x....             LDR      R1,??DataTable2_4
   \   00000394   0x6849             LDR      R1,[R1, #+4]
   \   00000396   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000039A   0xD23A             BCS      ??Inductor_analyse_32
    377                  {  
    378                    if(AD_inductor[2] > AD_inductor[0])       //  左边大于右边偏右            
   \   0000039C   0x....             LDR      R0,??DataTable2_4
   \   0000039E   0x6800             LDR      R0,[R0, #+0]
   \   000003A0   0x....             LDR      R1,??DataTable2_4
   \   000003A2   0x6889             LDR      R1,[R1, #+8]
   \   000003A4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000003A8   0xD21A             BCS      ??Inductor_analyse_33
    379                     
    380          Chazhi =  30 - 30*(AD_inductor[1]-AD_inductor[2])/(AD_inductor[1]-AD_inductor[0]);
   \   000003AA   0x....             LDR      R0,??DataTable2_4
   \   000003AC   0x6840             LDR      R0,[R0, #+4]
   \   000003AE   0x....             LDR      R1,??DataTable2_4
   \   000003B0   0x6889             LDR      R1,[R1, #+8]
   \   000003B2   0x.... 0x....      BL       __aeabi_fsub
   \   000003B6   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   000003B8   0x.... 0x....      BL       __aeabi_fmul
   \   000003BC   0x0007             MOVS     R7,R0
   \   000003BE   0x....             LDR      R0,??DataTable2_4
   \   000003C0   0x6840             LDR      R0,[R0, #+4]
   \   000003C2   0x....             LDR      R1,??DataTable2_4
   \   000003C4   0x6809             LDR      R1,[R1, #+0]
   \   000003C6   0x.... 0x....      BL       __aeabi_fsub
   \   000003CA   0x0001             MOVS     R1,R0
   \   000003CC   0x0038             MOVS     R0,R7
   \   000003CE   0x.... 0x....      BL       __aeabi_fdiv
   \   000003D2   0x0001             MOVS     R1,R0
   \   000003D4   0x....             LDR      R0,??DataTable2_5  ;; 0x41f00000
   \   000003D6   0x.... 0x....      BL       __aeabi_fsub
   \   000003DA   0x....             LDR      R1,??DataTable2_1
   \   000003DC   0x6008             STR      R0,[R1, #+0]
   \   000003DE   0xE018             B        ??Inductor_analyse_32
    381                    else	                          //  右边大于左边偏左                    
    382          //          Chazhi = -34 + 34*(Add_AD_value+AD_inductor[1]-AD_inductor[0])/(Add_AD_value+AD_inductor[1]-AD_inductor[2]);
    383          Chazhi = -30 + 30*(AD_inductor[1]-AD_inductor[0])/(AD_inductor[1]-AD_inductor[2]);
   \                     ??Inductor_analyse_33: (+1)
   \   000003E0   0x....             LDR      R0,??DataTable2_4
   \   000003E2   0x6840             LDR      R0,[R0, #+4]
   \   000003E4   0x....             LDR      R1,??DataTable2_4
   \   000003E6   0x6809             LDR      R1,[R1, #+0]
   \   000003E8   0x.... 0x....      BL       __aeabi_fsub
   \   000003EC   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   000003EE   0x.... 0x....      BL       __aeabi_fmul
   \   000003F2   0x0007             MOVS     R7,R0
   \   000003F4   0x....             LDR      R0,??DataTable2_4
   \   000003F6   0x6840             LDR      R0,[R0, #+4]
   \   000003F8   0x....             LDR      R1,??DataTable2_4
   \   000003FA   0x6889             LDR      R1,[R1, #+8]
   \   000003FC   0x.... 0x....      BL       __aeabi_fsub
   \   00000400   0x0001             MOVS     R1,R0
   \   00000402   0x0038             MOVS     R0,R7
   \   00000404   0x.... 0x....      BL       __aeabi_fdiv
   \   00000408   0x....             LDR      R1,??DataTable2_6  ;; 0xc1f00000
   \   0000040A   0x.... 0x....      BL       __aeabi_fadd
   \   0000040E   0x....             LDR      R1,??DataTable2_1
   \   00000410   0x6008             STR      R0,[R1, #+0]
    384                  }                                                                          
    385               }  break;
   \                     ??Inductor_analyse_32: (+1)
   \   00000412   0xE05E             B        ??Inductor_analyse_28
    386          
    387          
    388            case 2:
    389              {
    390          //2电感>参考电感
    391                if(AD_inductor[2] > RefAd)
   \                     ??Inductor_analyse_26: (+1)
   \   00000414   0x....             LDR      R0,??DataTable2_3
   \   00000416   0x6800             LDR      R0,[R0, #+0]
   \   00000418   0x.... 0x....      BL       __aeabi_i2f
   \   0000041C   0x....             LDR      R1,??DataTable2_4
   \   0000041E   0x6889             LDR      R1,[R1, #+8]
   \   00000420   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000424   0xD252             BCS      ??Inductor_analyse_34
    392          	{
    393          //1电感>参考电感：车越偏,分数越小，差值越大，
    394          //最大差值50
    395                    if(AD_inductor[1] > RefAd)
   \   00000426   0x....             LDR      R0,??DataTable2_3
   \   00000428   0x6800             LDR      R0,[R0, #+0]
   \   0000042A   0x.... 0x....      BL       __aeabi_i2f
   \   0000042E   0x....             LDR      R1,??DataTable2_4
   \   00000430   0x6849             LDR      R1,[R1, #+4]
   \   00000432   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000436   0xD227             BCS      ??Inductor_analyse_35
    396          //        Chazhi = 25 + 25*(AD_inductor[2]-AD_inductor[1])/(AD_inductor[2]-RefAd);  
    397                    Chazhi = 30 + 30*(AD_inductor[2]-AD_inductor[1])/(AD_inductor[2]-RefAd);  
   \   00000438   0x....             LDR      R0,??DataTable2_4
   \   0000043A   0x6880             LDR      R0,[R0, #+8]
   \   0000043C   0x....             LDR      R1,??DataTable2_4
   \   0000043E   0x6849             LDR      R1,[R1, #+4]
   \   00000440   0x.... 0x....      BL       __aeabi_fsub
   \   00000444   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   00000446   0x.... 0x....      BL       __aeabi_fmul
   \   0000044A   0x0007             MOVS     R7,R0
   \   0000044C   0x....             LDR      R0,??DataTable2_3
   \   0000044E   0x6800             LDR      R0,[R0, #+0]
   \   00000450   0x.... 0x....      BL       __aeabi_i2f
   \   00000454   0x0001             MOVS     R1,R0
   \   00000456   0x....             LDR      R0,??DataTable2_4
   \   00000458   0x6880             LDR      R0,[R0, #+8]
   \   0000045A   0x.... 0x....      BL       __aeabi_fsub
   \   0000045E   0x0001             MOVS     R1,R0
   \   00000460   0x0038             MOVS     R0,R7
   \   00000462   0x.... 0x....      BL       __aeabi_fdiv
   \   00000466   0x....             LDR      R1,??DataTable2_5  ;; 0x41f00000
   \   00000468   0x.... 0x....      BL       __aeabi_fadd
   \   0000046C   0x....             LDR      R1,??DataTable2_1
   \   0000046E   0x6008             STR      R0,[R1, #+0]
   \   00000470   0xE02F             B        ??Inductor_analyse_36
   \   00000472   0xBF00             Nop      
   \                     ??Inductor_analyse_10:
   \   00000474   0x40A00000         DC32     0x40a00000
   \   00000478   0x........         DC32     ??max_old
   \   0000047C   0x........         DC32     position
   \   00000480   0x........         DC32     ??position_last
   \   00000484   0x........         DC32     Position_transit
    398                    else 
    399          //参考电感>1电感:车越偏,分数越小，差值越大，
    400          //        Chazhi = 100 - 34*(AD_inductor[2]-RefAd)/(AD_inductor[2]-AD_inductor[1]); 
    401                    Chazhi = 100 - 40*(AD_inductor[2]-RefAd)/(AD_inductor[2]-AD_inductor[1]); 
   \                     ??Inductor_analyse_35: (+1)
   \   00000488   0x....             LDR      R0,??DataTable2_3
   \   0000048A   0x6800             LDR      R0,[R0, #+0]
   \   0000048C   0x.... 0x....      BL       __aeabi_i2f
   \   00000490   0x0001             MOVS     R1,R0
   \   00000492   0x....             LDR      R0,??DataTable2_4
   \   00000494   0x6880             LDR      R0,[R0, #+8]
   \   00000496   0x.... 0x....      BL       __aeabi_fsub
   \   0000049A   0x....             LDR      R1,??DataTable2_7  ;; 0x42200000
   \   0000049C   0x.... 0x....      BL       __aeabi_fmul
   \   000004A0   0x0007             MOVS     R7,R0
   \   000004A2   0x....             LDR      R0,??DataTable2_4
   \   000004A4   0x6880             LDR      R0,[R0, #+8]
   \   000004A6   0x....             LDR      R1,??DataTable2_4
   \   000004A8   0x6849             LDR      R1,[R1, #+4]
   \   000004AA   0x.... 0x....      BL       __aeabi_fsub
   \   000004AE   0x0001             MOVS     R1,R0
   \   000004B0   0x0038             MOVS     R0,R7
   \   000004B2   0x.... 0x....      BL       __aeabi_fdiv
   \   000004B6   0x0001             MOVS     R1,R0
   \   000004B8   0x....             LDR      R0,??DataTable3  ;; 0x42c80000
   \   000004BA   0x.... 0x....      BL       __aeabi_fsub
   \   000004BE   0x....             LDR      R1,??DataTable2_1
   \   000004C0   0x6008             STR      R0,[R1, #+0]
   \   000004C2   0xE006             B        ??Inductor_analyse_36
   \                     ??Inductor_analyse_14:
   \   000004C4   0x3F800001         DC32     0x3f800001
   \   000004C8   0x........         DC32     AD_0_max
    402                  }                                                                        
    403                 else
    404                	  Chazhi = 100;	                 //丢信号3
   \                     ??Inductor_analyse_34: (+1)
   \   000004CC   0x....             LDR      R0,??DataTable3  ;; 0x42c80000
   \   000004CE   0x....             LDR      R1,??DataTable2_1
   \   000004D0   0x6008             STR      R0,[R1, #+0]
    405              }  break;
    406             }
    407          //     
    408          // if(AD_inductor[3]>40&&AD_inductor[4]>40)
    409          //   Chazhi=Chazhi/3;
    410                 
    411               if(Chazhi>Chazhi_Max_New)
   \                     ??Inductor_analyse_36: (+1)
   \                     ??Inductor_analyse_28: (+1)
   \   000004D2   0x....             LDR      R0,??DataTable3_1
   \   000004D4   0x6800             LDR      R0,[R0, #+0]
   \   000004D6   0x....             LDR      R1,??DataTable2_1
   \   000004D8   0x6809             LDR      R1,[R1, #+0]
   \   000004DA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000004DE   0xD203             BCS      ??Inductor_analyse_37
    412                 Chazhi=Chazhi_Max_New;
   \   000004E0   0x....             LDR      R0,??DataTable3_1
   \   000004E2   0x6800             LDR      R0,[R0, #+0]
   \   000004E4   0x....             LDR      R1,??DataTable2_1
   \   000004E6   0x6008             STR      R0,[R1, #+0]
    413               if(Chazhi<-Chazhi_Max_New)
   \                     ??Inductor_analyse_37: (+1)
   \   000004E8   0x....             LDR      R0,??DataTable2_1
   \   000004EA   0x6800             LDR      R0,[R0, #+0]
   \   000004EC   0x....             LDR      R1,??DataTable3_1
   \   000004EE   0x6809             LDR      R1,[R1, #+0]
   \   000004F0   0x2280             MOVS     R2,#+128
   \   000004F2   0x0612             LSLS     R2,R2,#+24       ;; #-2147483648
   \   000004F4   0x4051             EORS     R1,R1,R2
   \   000004F6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000004FA   0xD206             BCS      ??Inductor_analyse_38
    414                 Chazhi=-Chazhi_Max_New;
   \   000004FC   0x....             LDR      R0,??DataTable3_1
   \   000004FE   0x6800             LDR      R0,[R0, #+0]
   \   00000500   0x2180             MOVS     R1,#+128
   \   00000502   0x0609             LSLS     R1,R1,#+24       ;; #-2147483648
   \   00000504   0x4048             EORS     R0,R0,R1
   \   00000506   0x....             LDR      R1,??DataTable2_1
   \   00000508   0x6008             STR      R0,[R1, #+0]
    415             
    416               Chazhi*=1;
   \                     ??Inductor_analyse_38: (+1)
   \   0000050A   0x....             LDR      R0,??DataTable2_1
   \   0000050C   0x6801             LDR      R1,[R0, #+0]
   \   0000050E   0x20FE             MOVS     R0,#+254
   \   00000510   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000512   0x.... 0x....      BL       __aeabi_fmul
   \   00000516   0x....             LDR      R1,??DataTable2_1
   \   00000518   0x6008             STR      R0,[R1, #+0]
    417            for(uint8 i=0;i<19;i++)
   \   0000051A   0x2000             MOVS     R0,#+0
   \                     ??Inductor_analyse_39: (+1)
   \   0000051C   0xB2C0             UXTB     R0,R0
   \   0000051E   0x2813             CMP      R0,#+19
   \   00000520   0xDA0C             BGE      ??Inductor_analyse_40
    418              {
    419                  Chazhi_Chucun[i]=Chazhi_Chucun[i+1];
   \   00000522   0x....             LDR      R1,??DataTable3_2
   \   00000524   0xB2C0             UXTB     R0,R0
   \   00000526   0x2204             MOVS     R2,#+4
   \   00000528   0x4342             MULS     R2,R0,R2
   \   0000052A   0x1889             ADDS     R1,R1,R2
   \   0000052C   0x6849             LDR      R1,[R1, #+4]
   \   0000052E   0x....             LDR      R2,??DataTable3_2
   \   00000530   0xB2C0             UXTB     R0,R0
   \   00000532   0x2304             MOVS     R3,#+4
   \   00000534   0x4343             MULS     R3,R0,R3
   \   00000536   0x50D1             STR      R1,[R2, R3]
    420                   
    421              }
   \   00000538   0x1C40             ADDS     R0,R0,#+1
   \   0000053A   0xE7EF             B        ??Inductor_analyse_39
    422                  Chazhi_Chucun[19]=Chazhi;
   \                     ??Inductor_analyse_40: (+1)
   \   0000053C   0x....             LDR      R0,??DataTable2_1
   \   0000053E   0x6800             LDR      R0,[R0, #+0]
   \   00000540   0x....             LDR      R1,??DataTable3_2
   \   00000542   0x64C8             STR      R0,[R1, #+76]
    423          
    424              Chazhi_Old=Chazhi_Chucun[0];
   \   00000544   0x....             LDR      R0,??DataTable3_2
   \   00000546   0x6800             LDR      R0,[R0, #+0]
   \   00000548   0x....             LDR      R1,??DataTable4
   \   0000054A   0x6008             STR      R0,[R1, #+0]
    425               Chazhi_Rate=Chazhi_Old-Chazhi;//D
   \   0000054C   0x....             LDR      R0,??DataTable4
   \   0000054E   0x6800             LDR      R0,[R0, #+0]
   \   00000550   0x....             LDR      R1,??DataTable2_1
   \   00000552   0x6809             LDR      R1,[R1, #+0]
   \   00000554   0x.... 0x....      BL       __aeabi_fsub
   \   00000558   0x....             LDR      R1,??DataTable4_1
   \   0000055A   0x6008             STR      R0,[R1, #+0]
    426          
    427          //     if(Rate_Count++>19)
    428          //     {
    429          //        Rate_Count=0;
    430          //        Chazhi_Old=Chazhi;
    431          //     }
    432          //      Chazhi_Rate=Chazhi_Old-Chazhi;//D
    433          
    434               
    435          //     Chazhi_Rate=Chazhi-Chazhi_Old;//P
    436               
    437          }
   \   0000055C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .data, align 2
   \                     ??max_old:
   \   00000000   0x0001             DC16 1

   \                                 In section .data, align 2
   \                     ??position_last:
   \   00000000   0x0001             DC16 1
    438          /*   差值 竖直电感   差值 竖直电感
    439          直道      15,20
    440          
    441          弯道   1     20      0       10
    442                15     35      10      22
    443                30     51      20      29
    444                49     49      30      31
    445                60     34      40      28
    446                68     23      50      18
    447                78     11      59      0.1
    448                94     2
    449          右竖直电感，差值负
    450          
    451          
    452          */

   \                                 In section .text, align 2, keep-with-next
    453          void Small_S(void)
    454          {
   \                     Small_S: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB0E5             SUB      SP,SP,#+404
    455          float Road_Remember_SZ[100]={0}; 
   \   00000004   0xA801             ADD      R0,SP,#+4
   \   00000006   0x21C8             MOVS     R1,#+200
   \   00000008   0x0049             LSLS     R1,R1,#+1        ;; #+400
   \   0000000A   0x.... 0x....      BL       __aeabi_memclr4
    456          int XS=0,XS_NO=0,XS_Flag=0,
   \   0000000E   0x2400             MOVS     R4,#+0
   \   00000010   0x2500             MOVS     R5,#+0
   \   00000012   0x2700             MOVS     R7,#+0
    457          //  StraightRoad=0,//小车直走次数
    458            WindingRoad = 0,
   \   00000014   0x2600             MOVS     R6,#+0
    459              WindingRoad_Flag;//小车左转,右转次数
    460            
    461          
    462             
    463            for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \   00000016   0x2000             MOVS     R0,#+0
   \                     ??Small_S_0: (+1)
   \   00000018   0xB240             SXTB     R0,R0
   \   0000001A   0x2831             CMP      R0,#+49
   \   0000001C   0xDA0C             BGE      ??Small_S_1
    464            {
    465                Road_Remember[i] = Road_Remember[i+1];
   \   0000001E   0x....             LDR      R1,??DataTable4_2
   \   00000020   0xB240             SXTB     R0,R0
   \   00000022   0x2204             MOVS     R2,#+4
   \   00000024   0x4342             MULS     R2,R0,R2
   \   00000026   0x1889             ADDS     R1,R1,R2
   \   00000028   0x6849             LDR      R1,[R1, #+4]
   \   0000002A   0x....             LDR      R2,??DataTable4_2
   \   0000002C   0xB240             SXTB     R0,R0
   \   0000002E   0x2304             MOVS     R3,#+4
   \   00000030   0x4343             MULS     R3,R0,R3
   \   00000032   0x50D1             STR      R1,[R2, R3]
    466            }
   \   00000034   0x1C40             ADDS     R0,R0,#+1
   \   00000036   0xE7EF             B        ??Small_S_0
    467            Road_Remember[P-1] = abs_f(Chazhi);	//该值为电感检测值-100~100
   \                     ??Small_S_1: (+1)
   \   00000038   0x....             LDR      R0,??DataTable4_3
   \   0000003A   0x6800             LDR      R0,[R0, #+0]
   \   0000003C   0x.... 0x....      BL       abs_f
   \   00000040   0x....             LDR      R1,??DataTable4_4
   \   00000042   0x6008             STR      R0,[R1, #+0]
    468            
    469            StraightRoad=0;//小车直走次数
   \   00000044   0x2000             MOVS     R0,#+0
   \   00000046   0x....             LDR      R1,??DataTable4_5
   \   00000048   0x6008             STR      R0,[R1, #+0]
    470            WindingRoad = 0;//小车左转,右转次数
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x0006             MOVS     R6,R0
    471            
    472            for(int8_t i = 0;i < P; i++)
   \   0000004E   0x2200             MOVS     R2,#+0
   \                     ??Small_S_2: (+1)
   \   00000050   0xB252             SXTB     R2,R2
   \   00000052   0x2A32             CMP      R2,#+50
   \   00000054   0xDA11             BGE      ??Small_S_3
    473            {        
    474              if(Road_Remember[i] < 20)	//在-35~35范围内，保证差值与位置的线性关系
   \   00000056   0x....             LDR      R0,??DataTable4_2
   \   00000058   0xB252             SXTB     R2,R2
   \   0000005A   0x2104             MOVS     R1,#+4
   \   0000005C   0x4351             MULS     R1,R2,R1
   \   0000005E   0x5840             LDR      R0,[R0, R1]
   \   00000060   0x....             LDR      R1,??DataTable4_6  ;; 0x41a00000
   \   00000062   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000066   0xD205             BCS      ??Small_S_4
    475              {
    476                 StraightRoad++;		//判断直道稳定性，分别列出一百组信号
   \   00000068   0x....             LDR      R0,??DataTable4_5
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x1C40             ADDS     R0,R0,#+1
   \   0000006E   0x....             LDR      R1,??DataTable4_5
   \   00000070   0x6008             STR      R0,[R1, #+0]
   \   00000072   0xE000             B        ??Small_S_5
    477              }		
    478              else 
    479                WindingRoad++;		//判断弯道稳定性---右转累   
   \                     ??Small_S_4: (+1)
   \   00000074   0x1C76             ADDS     R6,R6,#+1
    480            }
   \                     ??Small_S_5: (+1)
   \   00000076   0x1C52             ADDS     R2,R2,#+1
   \   00000078   0xE7EA             B        ??Small_S_2
    481            StraightRoad_Flag = 0;//直道标志
   \                     ??Small_S_3: (+1)
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x....             LDR      R1,??DataTable4_7
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    482            WindingRoad_Flag = 0;//左转,右转标志                 
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x9000             STR      R0,[SP, #+0]
    483            if(StraightRoad >= 90)
   \   00000084   0x....             LDR      R0,??DataTable4_5
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x285A             CMP      R0,#+90
   \   0000008A   0xDB02             BLT      ??Small_S_6
    484            {
    485            StraightRoad_Flag = 1;
   \   0000008C   0x2001             MOVS     R0,#+1
   \   0000008E   0x....             LDR      R1,??DataTable4_7
   \   00000090   0x6008             STR      R0,[R1, #+0]
    486            }
    487            if(WindingRoad_Left >= 30)
   \                     ??Small_S_6: (+1)
   \   00000092   0x....             LDR      R0,??DataTable4_8
   \   00000094   0x6800             LDR      R0,[R0, #+0]
   \   00000096   0x281E             CMP      R0,#+30
   \   00000098   0xDB01             BLT      ??Small_S_7
    488            {
    489              WindingRoad_Flag = 1;
   \   0000009A   0x2001             MOVS     R0,#+1
   \   0000009C   0x9000             STR      R0,[SP, #+0]
    490            }
    491           
    492            
    493          
    494            for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \                     ??Small_S_7: (+1)
   \   0000009E   0x2000             MOVS     R0,#+0
   \                     ??Small_S_8: (+1)
   \   000000A0   0xB240             SXTB     R0,R0
   \   000000A2   0x2831             CMP      R0,#+49
   \   000000A4   0xDA0C             BGE      ??Small_S_9
    495            {
    496                Road_Remember_SZ[i] = Road_Remember_SZ[i+1];
   \   000000A6   0xA901             ADD      R1,SP,#+4
   \   000000A8   0xB240             SXTB     R0,R0
   \   000000AA   0x2204             MOVS     R2,#+4
   \   000000AC   0x4342             MULS     R2,R0,R2
   \   000000AE   0x1889             ADDS     R1,R1,R2
   \   000000B0   0x6849             LDR      R1,[R1, #+4]
   \   000000B2   0xAA01             ADD      R2,SP,#+4
   \   000000B4   0xB240             SXTB     R0,R0
   \   000000B6   0x2304             MOVS     R3,#+4
   \   000000B8   0x4343             MULS     R3,R0,R3
   \   000000BA   0x50D1             STR      R1,[R2, R3]
    497            }
   \   000000BC   0x1C40             ADDS     R0,R0,#+1
   \   000000BE   0xE7EF             B        ??Small_S_8
    498            
    499            if(AD_inductor[3]>AD_inductor[4])
   \                     ??Small_S_9: (+1)
   \   000000C0   0x....             LDR      R0,??DataTable4_9
   \   000000C2   0x6900             LDR      R0,[R0, #+16]
   \   000000C4   0x....             LDR      R1,??DataTable4_9
   \   000000C6   0x68C9             LDR      R1,[R1, #+12]
   \   000000C8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000CC   0xD204             BCS      ??Small_S_10
    500               Road_Remember[P-1] = AD_inductor[3];	
   \   000000CE   0x....             LDR      R0,??DataTable4_9
   \   000000D0   0x68C0             LDR      R0,[R0, #+12]
   \   000000D2   0x....             LDR      R1,??DataTable4_4
   \   000000D4   0x6008             STR      R0,[R1, #+0]
   \   000000D6   0xE003             B        ??Small_S_11
    501            else
    502               Road_Remember[P-1] = AD_inductor[4];	
   \                     ??Small_S_10: (+1)
   \   000000D8   0x....             LDR      R0,??DataTable4_9
   \   000000DA   0x6900             LDR      R0,[R0, #+16]
   \   000000DC   0x....             LDR      R1,??DataTable4_4
   \   000000DE   0x6008             STR      R0,[R1, #+0]
    503            
    504            XS=0; 
   \                     ??Small_S_11: (+1)
   \   000000E0   0x2000             MOVS     R0,#+0
   \   000000E2   0x0004             MOVS     R4,R0
    505                XS_NO=0;
   \   000000E4   0x2000             MOVS     R0,#+0
   \   000000E6   0x0005             MOVS     R5,R0
    506                  XS_Flag=0;
   \   000000E8   0x2000             MOVS     R0,#+0
   \   000000EA   0x0007             MOVS     R7,R0
    507          
    508            if(WindingRoad_Flag==1&&AD_inductor[1]<110)
   \   000000EC   0x9800             LDR      R0,[SP, #+0]
   \   000000EE   0x2801             CMP      R0,#+1
   \   000000F0   0xD127             BNE      ??Small_S_12
   \   000000F2   0x....             LDR      R0,??DataTable4_9
   \   000000F4   0x6840             LDR      R0,[R0, #+4]
   \   000000F6   0x....             LDR      R1,??DataTable4_10  ;; 0x42dc0000
   \   000000F8   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000FC   0xD221             BCS      ??Small_S_12
    509            { 
    510                 for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \   000000FE   0x2200             MOVS     R2,#+0
   \                     ??Small_S_13: (+1)
   \   00000100   0xB252             SXTB     R2,R2
   \   00000102   0x2A31             CMP      R2,#+49
   \   00000104   0xDA15             BGE      ??Small_S_14
    511                {
    512                   if(Road_Remember_SZ[i]<35)
   \   00000106   0xA801             ADD      R0,SP,#+4
   \   00000108   0xB252             SXTB     R2,R2
   \   0000010A   0x2104             MOVS     R1,#+4
   \   0000010C   0x4351             MULS     R1,R2,R1
   \   0000010E   0x5840             LDR      R0,[R0, R1]
   \   00000110   0x....             LDR      R1,??DataTable4_11  ;; 0x420c0000
   \   00000112   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000116   0xD200             BCS      ??Small_S_15
    513                      XS++; 
   \   00000118   0x1C64             ADDS     R4,R4,#+1
    514                   if(Road_Remember_SZ[i]>40)
   \                     ??Small_S_15: (+1)
   \   0000011A   0xA801             ADD      R0,SP,#+4
   \   0000011C   0xB252             SXTB     R2,R2
   \   0000011E   0x2104             MOVS     R1,#+4
   \   00000120   0x4351             MULS     R1,R2,R1
   \   00000122   0x5840             LDR      R0,[R0, R1]
   \   00000124   0x....             LDR      R1,??DataTable5  ;; 0x42200001
   \   00000126   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000012A   0xD800             BHI      ??Small_S_16
    515                      XS_NO++;
   \   0000012C   0x1C6D             ADDS     R5,R5,#+1
    516                }
   \                     ??Small_S_16: (+1)
   \   0000012E   0x1C52             ADDS     R2,R2,#+1
   \   00000130   0xE7E6             B        ??Small_S_13
    517                if(XS>95)
   \                     ??Small_S_14: (+1)
   \   00000132   0x2C60             CMP      R4,#+96
   \   00000134   0xDB01             BLT      ??Small_S_17
    518                  XS_Flag=1;
   \   00000136   0x2001             MOVS     R0,#+1
   \   00000138   0x0007             MOVS     R7,R0
    519                if(XS_NO>1)
   \                     ??Small_S_17: (+1)
   \   0000013A   0x2D02             CMP      R5,#+2
   \   0000013C   0xDB01             BLT      ??Small_S_12
    520                  XS_Flag=0;
   \   0000013E   0x2000             MOVS     R0,#+0
   \   00000140   0x0007             MOVS     R7,R0
    521            }
    522            if(XS_Flag==1)  
   \                     ??Small_S_12: (+1)
   \   00000142   0x2F01             CMP      R7,#+1
   \   00000144   0xD103             BNE      ??Small_S_18
    523            {
    524          //     Chazhi=Chazhi/3;
    525               BUZZER_ON;
   \   00000146   0x2101             MOVS     R1,#+1
   \   00000148   0x2018             MOVS     R0,#+24
   \   0000014A   0x.... 0x....      BL       GpioSet
    526            }
    527                   
    528                
    529                
    530            }
   \                     ??Small_S_18: (+1)
   \   0000014E   0xB065             ADD      SP,SP,#+404
   \   00000150   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000D4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000E4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000F4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000104   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000114   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000124   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000134   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000144   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000154   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000164   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000174   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000184   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    531          
    532          
    533          /*************************************************************************************************************
    534          检测弯道还是直道
    535          ******************************************************/

   \                                 In section .text, align 2, keep-with-next
    536          void Test_RoadInfo(void) 
    537          {
   \                     Test_RoadInfo: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
    538            StraightRoad_Old = StraightRoad;
   \   00000002   0x....             LDR      R0,??DataTable4_5
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x....             LDR      R1,??DataTable5_1
   \   00000008   0x6008             STR      R0,[R1, #+0]
    539             
    540            for(int8_t i = 0;i < P-1; i++)   //将所有更新的数据往前移1位
   \   0000000A   0x2000             MOVS     R0,#+0
   \                     ??Test_RoadInfo_0: (+1)
   \   0000000C   0xB240             SXTB     R0,R0
   \   0000000E   0x2831             CMP      R0,#+49
   \   00000010   0xDA0C             BGE      ??Test_RoadInfo_1
    541            {
    542                Road_Remember[i] = Road_Remember[i+1];
   \   00000012   0x....             LDR      R1,??DataTable4_2
   \   00000014   0xB240             SXTB     R0,R0
   \   00000016   0x2204             MOVS     R2,#+4
   \   00000018   0x4342             MULS     R2,R0,R2
   \   0000001A   0x1889             ADDS     R1,R1,R2
   \   0000001C   0x6849             LDR      R1,[R1, #+4]
   \   0000001E   0x....             LDR      R2,??DataTable4_2
   \   00000020   0xB240             SXTB     R0,R0
   \   00000022   0x2304             MOVS     R3,#+4
   \   00000024   0x4343             MULS     R3,R0,R3
   \   00000026   0x50D1             STR      R1,[R2, R3]
    543            }
   \   00000028   0x1C40             ADDS     R0,R0,#+1
   \   0000002A   0xE7EF             B        ??Test_RoadInfo_0
    544            Road_Remember[P-1] = Chazhi;	//该值为电感检测值-100~100
   \                     ??Test_RoadInfo_1: (+1)
   \   0000002C   0x....             LDR      R0,??DataTable4_3
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x....             LDR      R1,??DataTable4_4
   \   00000032   0x6008             STR      R0,[R1, #+0]
    545            
    546            StraightRoad=0;;//小车直走次数
   \   00000034   0x2000             MOVS     R0,#+0
   \   00000036   0x....             LDR      R1,??DataTable4_5
   \   00000038   0x6008             STR      R0,[R1, #+0]
    547            WindingRoad=0;
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x....             LDR      R1,??DataTable5_2
   \   0000003E   0x6008             STR      R0,[R1, #+0]
    548            WindingRoad_Left = 0;WindingRoad_Right = 0;//小车左转,右转次数
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x....             LDR      R1,??DataTable4_8
   \   00000044   0x6008             STR      R0,[R1, #+0]
   \   00000046   0x2000             MOVS     R0,#+0
   \   00000048   0x....             LDR      R1,??DataTable5_3
   \   0000004A   0x6008             STR      R0,[R1, #+0]
    549            
    550          //  for(int8_t i = 0;i < P; i++)
    551          //  {        
    552          //    if(Road_Remember[i] > -20 && Road_Remember[i] < 20)	//在-35~35范围内，保证差值与位置的线性关系
    553          //    {
    554          //      StraightRoad++;		//判断直道稳定性，分别列出一百组信号
    555          //    }
    556          //		
    557          //    else if(Road_Remember[i] >= -300 && Road_Remember[i] <= -20)//100,38
    558          //   {
    559          //     WindingRoad_Right++;		//判断弯道稳定性---右转累加
    560          //   }
    561          //   else if(Road_Remember[i] >= 20 && Road_Remember[i] <= 300)
    562          //   {
    563          //      WindingRoad_Left++;		//判断弯道稳定性---左转累加
    564          //   }
    565              
    566          //  }
    567            
    568            for(int8_t i = 0;i < P; i++)
   \   0000004C   0x2400             MOVS     R4,#+0
   \                     ??Test_RoadInfo_2: (+1)
   \   0000004E   0xB264             SXTB     R4,R4
   \   00000050   0x2C32             CMP      R4,#+50
   \   00000052   0xDA34             BGE      ??Test_RoadInfo_3
    569            {        
    570              if(abs_f(Road_Remember[i])< 15)	//在-35~35范围内，保证差值与位置的线性关系
   \   00000054   0x....             LDR      R0,??DataTable4_2
   \   00000056   0xB264             SXTB     R4,R4
   \   00000058   0x2104             MOVS     R1,#+4
   \   0000005A   0x4361             MULS     R1,R4,R1
   \   0000005C   0x5840             LDR      R0,[R0, R1]
   \   0000005E   0x.... 0x....      BL       abs_f
   \   00000062   0x....             LDR      R1,??DataTable5_4  ;; 0x41700000
   \   00000064   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000068   0xD205             BCS      ??Test_RoadInfo_4
    571              {
    572                WindingRoad--;		//判断直道稳定性，分别列出一百组信号
   \   0000006A   0x....             LDR      R0,??DataTable5_2
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0x1E40             SUBS     R0,R0,#+1
   \   00000070   0x....             LDR      R1,??DataTable5_2
   \   00000072   0x6008             STR      R0,[R1, #+0]
   \   00000074   0xE004             B        ??Test_RoadInfo_5
    573              }		
    574              else 
    575              {
    576                WindingRoad++;		//判断弯道稳定性---左转累加
   \                     ??Test_RoadInfo_4: (+1)
   \   00000076   0x....             LDR      R0,??DataTable5_2
   \   00000078   0x6800             LDR      R0,[R0, #+0]
   \   0000007A   0x1C40             ADDS     R0,R0,#+1
   \   0000007C   0x....             LDR      R1,??DataTable5_2
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    577              }
    578             
    579            StraightRoad_Flag = 0;//直道标志
   \                     ??Test_RoadInfo_5: (+1)
   \   00000080   0x2000             MOVS     R0,#+0
   \   00000082   0x....             LDR      R1,??DataTable4_7
   \   00000084   0x6008             STR      R0,[R1, #+0]
    580            WindingRoad_Flag=0;
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0x....             LDR      R1,??DataTable5_5
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    581            WindingRoad_Left_Flag = 0,WindingRoad_Right_Flag = 0;//左转,右转标志                 
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x....             LDR      R1,??DataTable5_6
   \   00000090   0x6008             STR      R0,[R1, #+0]
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x....             LDR      R1,??DataTable5_7
   \   00000096   0x6008             STR      R0,[R1, #+0]
    582            if(WindingRoad <10)
   \   00000098   0x....             LDR      R0,??DataTable5_2
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x280A             CMP      R0,#+10
   \   0000009E   0xDA06             BGE      ??Test_RoadInfo_6
    583            {
    584            StraightRoad_Flag = 1;
   \   000000A0   0x2001             MOVS     R0,#+1
   \   000000A2   0x....             LDR      R1,??DataTable4_7
   \   000000A4   0x6008             STR      R0,[R1, #+0]
    585                 WindingRoad_Flag=0;
   \   000000A6   0x2000             MOVS     R0,#+0
   \   000000A8   0x....             LDR      R1,??DataTable5_5
   \   000000AA   0x6008             STR      R0,[R1, #+0]
   \   000000AC   0xE005             B        ??Test_RoadInfo_7
    586          
    587            }
    588          else
    589          {
    590               WindingRoad_Flag=1;
   \                     ??Test_RoadInfo_6: (+1)
   \   000000AE   0x2001             MOVS     R0,#+1
   \   000000B0   0x....             LDR      R1,??DataTable5_5
   \   000000B2   0x6008             STR      R0,[R1, #+0]
    591                 StraightRoad_Flag = 0;
   \   000000B4   0x2000             MOVS     R0,#+0
   \   000000B6   0x....             LDR      R1,??DataTable4_7
   \   000000B8   0x6008             STR      R0,[R1, #+0]
    592          
    593            }  
    594          }
   \                     ??Test_RoadInfo_7: (+1)
   \   000000BA   0x1C64             ADDS     R4,R4,#+1
   \   000000BC   0xE7C7             B        ??Test_RoadInfo_2
    595          
    596          }
   \                     ??Test_RoadInfo_3: (+1)
   \   000000BE   0xBD10             POP      {R4,PC}          ;; return
    597          /*************************************************************************************************************
    598          检测弯道还是直道:利用两个竖直电感
    599          ******************************************************/

   \                                 In section .text, align 2, keep-with-next
    600          void Test_RoadInfo_Shuzhi(void) 
    601          {
   \                     Test_RoadInfo_Shuzhi: (+1)
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0E5             SUB      SP,SP,#+404
    602            StraightRoad_Old = StraightRoad;
   \   00000004   0x....             LDR      R0,??DataTable5_8
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0x....             LDR      R1,??DataTable5_1
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    603          #define SZ 50
    604          float Road_Remember_RI[SZ]={0},Road_Remember_LI[SZ]={0}; 
   \   0000000C   0xA832             ADD      R0,SP,#+200
   \   0000000E   0x21C8             MOVS     R1,#+200
   \   00000010   0x.... 0x....      BL       __aeabi_memclr4
   \   00000014   0x4668             MOV      R0,SP
   \   00000016   0x21C8             MOVS     R1,#+200
   \   00000018   0x.... 0x....      BL       __aeabi_memclr4
    605          
    606            for(int8_t i = 0;i < SZ-1; i++)   //将所有更新的数据往前移1位
   \   0000001C   0x2000             MOVS     R0,#+0
   \                     ??Test_RoadInfo_Shuzhi_0: (+1)
   \   0000001E   0xB240             SXTB     R0,R0
   \   00000020   0x2831             CMP      R0,#+49
   \   00000022   0xDA0C             BGE      ??Test_RoadInfo_Shuzhi_1
    607            {
    608                Road_Remember_RI[i] = Road_Remember_RI[i+1];
   \   00000024   0xA932             ADD      R1,SP,#+200
   \   00000026   0xB240             SXTB     R0,R0
   \   00000028   0x2204             MOVS     R2,#+4
   \   0000002A   0x4342             MULS     R2,R0,R2
   \   0000002C   0x1889             ADDS     R1,R1,R2
   \   0000002E   0x6849             LDR      R1,[R1, #+4]
   \   00000030   0xAA32             ADD      R2,SP,#+200
   \   00000032   0xB240             SXTB     R0,R0
   \   00000034   0x2304             MOVS     R3,#+4
   \   00000036   0x4343             MULS     R3,R0,R3
   \   00000038   0x50D1             STR      R1,[R2, R3]
    609            }
   \   0000003A   0x1C40             ADDS     R0,R0,#+1
   \   0000003C   0xE7EF             B        ??Test_RoadInfo_Shuzhi_0
    610            Road_Remember[SZ-1] = AD_inductor[3];	
   \                     ??Test_RoadInfo_Shuzhi_1: (+1)
   \   0000003E   0x....             LDR      R0,??DataTable5_9
   \   00000040   0x68C0             LDR      R0,[R0, #+12]
   \   00000042   0x....             LDR      R1,??DataTable5_10
   \   00000044   0x6008             STR      R0,[R1, #+0]
    611            
    612             for(int8_t i = 0;i < SZ-1; i++)   //将所有更新的数据往前移1位
   \   00000046   0x2000             MOVS     R0,#+0
   \                     ??Test_RoadInfo_Shuzhi_2: (+1)
   \   00000048   0xB240             SXTB     R0,R0
   \   0000004A   0x2831             CMP      R0,#+49
   \   0000004C   0xDA0C             BGE      ??Test_RoadInfo_Shuzhi_3
    613            {
    614                Road_Remember_LI[i] = Road_Remember_LI[i+1];
   \   0000004E   0x4669             MOV      R1,SP
   \   00000050   0xB240             SXTB     R0,R0
   \   00000052   0x2204             MOVS     R2,#+4
   \   00000054   0x4342             MULS     R2,R0,R2
   \   00000056   0x1889             ADDS     R1,R1,R2
   \   00000058   0x6849             LDR      R1,[R1, #+4]
   \   0000005A   0x466A             MOV      R2,SP
   \   0000005C   0xB240             SXTB     R0,R0
   \   0000005E   0x2304             MOVS     R3,#+4
   \   00000060   0x4343             MULS     R3,R0,R3
   \   00000062   0x50D1             STR      R1,[R2, R3]
    615            }
   \   00000064   0x1C40             ADDS     R0,R0,#+1
   \   00000066   0xE7EF             B        ??Test_RoadInfo_Shuzhi_2
    616            Road_Remember[SZ-1] = AD_inductor[4];	
   \                     ??Test_RoadInfo_Shuzhi_3: (+1)
   \   00000068   0x....             LDR      R0,??DataTable5_9
   \   0000006A   0x6900             LDR      R0,[R0, #+16]
   \   0000006C   0x....             LDR      R1,??DataTable5_10
   \   0000006E   0x6008             STR      R0,[R1, #+0]
    617            
    618            StraightRoad=0;;//小车直走次数
   \   00000070   0x2000             MOVS     R0,#+0
   \   00000072   0x....             LDR      R1,??DataTable5_8
   \   00000074   0x6008             STR      R0,[R1, #+0]
    619            WindingRoad_Left = 0;WindingRoad_Right = 0;//小车左转,右转次数
   \   00000076   0x2000             MOVS     R0,#+0
   \   00000078   0x....             LDR      R1,??DataTable5_11
   \   0000007A   0x6008             STR      R0,[R1, #+0]
   \   0000007C   0x2000             MOVS     R0,#+0
   \   0000007E   0x....             LDR      R1,??DataTable5_3
   \   00000080   0x6008             STR      R0,[R1, #+0]
    620            
    621            for(int8_t i = 0;i < SZ; i++)
   \   00000082   0x2200             MOVS     R2,#+0
   \                     ??Test_RoadInfo_Shuzhi_4: (+1)
   \   00000084   0xB252             SXTB     R2,R2
   \   00000086   0x2A32             CMP      R2,#+50
   \   00000088   0xDA38             BGE      ??Test_RoadInfo_Shuzhi_5
    622            {      	
    623                if(Road_Remember_RI[i]>15&&Road_Remember_LI[i]<1)//100,38
   \   0000008A   0xA832             ADD      R0,SP,#+200
   \   0000008C   0xB252             SXTB     R2,R2
   \   0000008E   0x2104             MOVS     R1,#+4
   \   00000090   0x4351             MULS     R1,R2,R1
   \   00000092   0x5840             LDR      R0,[R0, R1]
   \   00000094   0x....             LDR      R1,??DataTable6  ;; 0x41700001
   \   00000096   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000009A   0xD80F             BHI      ??Test_RoadInfo_Shuzhi_6
   \   0000009C   0x4668             MOV      R0,SP
   \   0000009E   0xB252             SXTB     R2,R2
   \   000000A0   0x2104             MOVS     R1,#+4
   \   000000A2   0x4351             MULS     R1,R2,R1
   \   000000A4   0x5840             LDR      R0,[R0, R1]
   \   000000A6   0x21FE             MOVS     R1,#+254
   \   000000A8   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   000000AA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000AE   0xD205             BCS      ??Test_RoadInfo_Shuzhi_6
    624                {
    625                    WindingRoad_Right++;		//判断弯道稳定性---右转累加
   \   000000B0   0x....             LDR      R0,??DataTable5_3
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x1C40             ADDS     R0,R0,#+1
   \   000000B6   0x....             LDR      R1,??DataTable5_3
   \   000000B8   0x6008             STR      R0,[R1, #+0]
   \   000000BA   0xE01D             B        ??Test_RoadInfo_Shuzhi_7
    626                }
    627                else if(Road_Remember_LI[i] >15 && Road_Remember_RI[i] <1)//100,38
   \                     ??Test_RoadInfo_Shuzhi_6: (+1)
   \   000000BC   0x4668             MOV      R0,SP
   \   000000BE   0xB252             SXTB     R2,R2
   \   000000C0   0x2104             MOVS     R1,#+4
   \   000000C2   0x4351             MULS     R1,R2,R1
   \   000000C4   0x5840             LDR      R0,[R0, R1]
   \   000000C6   0x....             LDR      R1,??DataTable6  ;; 0x41700001
   \   000000C8   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000CC   0xD80F             BHI      ??Test_RoadInfo_Shuzhi_8
   \   000000CE   0xA832             ADD      R0,SP,#+200
   \   000000D0   0xB252             SXTB     R2,R2
   \   000000D2   0x2104             MOVS     R1,#+4
   \   000000D4   0x4351             MULS     R1,R2,R1
   \   000000D6   0x5840             LDR      R0,[R0, R1]
   \   000000D8   0x21FE             MOVS     R1,#+254
   \   000000DA   0x0589             LSLS     R1,R1,#+22       ;; #+1065353216
   \   000000DC   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000E0   0xD205             BCS      ??Test_RoadInfo_Shuzhi_8
    628                {
    629                    WindingRoad_Left++;		//判断弯道稳定性---左转累加
   \   000000E2   0x....             LDR      R0,??DataTable5_11
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x1C40             ADDS     R0,R0,#+1
   \   000000E8   0x....             LDR      R1,??DataTable5_11
   \   000000EA   0x6008             STR      R0,[R1, #+0]
   \   000000EC   0xE004             B        ??Test_RoadInfo_Shuzhi_7
    630                }
    631                else 
    632                {
    633                    StraightRoad++; 
   \                     ??Test_RoadInfo_Shuzhi_8: (+1)
   \   000000EE   0x....             LDR      R0,??DataTable5_8
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x1C40             ADDS     R0,R0,#+1
   \   000000F4   0x....             LDR      R1,??DataTable5_8
   \   000000F6   0x6008             STR      R0,[R1, #+0]
    634                }         
    635            }
   \                     ??Test_RoadInfo_Shuzhi_7: (+1)
   \   000000F8   0x1C52             ADDS     R2,R2,#+1
   \   000000FA   0xE7C3             B        ??Test_RoadInfo_Shuzhi_4
    636            
    637            StraightRoad_Flag = 0;//直道标志
   \                     ??Test_RoadInfo_Shuzhi_5: (+1)
   \   000000FC   0x2000             MOVS     R0,#+0
   \   000000FE   0x....             LDR      R1,??DataTable6_1
   \   00000100   0x6008             STR      R0,[R1, #+0]
    638            WindingRoad_Left_Flag = 0;WindingRoad_Right_Flag = 0;//左转,右转标志                 
   \   00000102   0x2000             MOVS     R0,#+0
   \   00000104   0x....             LDR      R1,??DataTable5_6
   \   00000106   0x6008             STR      R0,[R1, #+0]
   \   00000108   0x2000             MOVS     R0,#+0
   \   0000010A   0x....             LDR      R1,??DataTable5_7
   \   0000010C   0x6008             STR      R0,[R1, #+0]
    639            
    640            if(StraightRoad >= 15)
   \   0000010E   0x....             LDR      R0,??DataTable5_8
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x280F             CMP      R0,#+15
   \   00000114   0xDB02             BLT      ??Test_RoadInfo_Shuzhi_9
    641            {
    642            StraightRoad_Flag = 1;
   \   00000116   0x2001             MOVS     R0,#+1
   \   00000118   0x....             LDR      R1,??DataTable6_1
   \   0000011A   0x6008             STR      R0,[R1, #+0]
    643            }
    644            if(WindingRoad_Left >= 5)//50
   \                     ??Test_RoadInfo_Shuzhi_9: (+1)
   \   0000011C   0x....             LDR      R0,??DataTable5_11
   \   0000011E   0x6800             LDR      R0,[R0, #+0]
   \   00000120   0x2805             CMP      R0,#+5
   \   00000122   0xDB02             BLT      ??Test_RoadInfo_Shuzhi_10
    645            {
    646              WindingRoad_Left_Flag = 1;
   \   00000124   0x2001             MOVS     R0,#+1
   \   00000126   0x....             LDR      R1,??DataTable5_6
   \   00000128   0x6008             STR      R0,[R1, #+0]
    647            }
    648            if(WindingRoad_Right >= 5)
   \                     ??Test_RoadInfo_Shuzhi_10: (+1)
   \   0000012A   0x....             LDR      R0,??DataTable5_3
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x2805             CMP      R0,#+5
   \   00000130   0xDB02             BLT      ??Test_RoadInfo_Shuzhi_11
    649            {
    650              WindingRoad_Right_Flag = 1;
   \   00000132   0x2001             MOVS     R0,#+1
   \   00000134   0x....             LDR      R1,??DataTable5_7
   \   00000136   0x6008             STR      R0,[R1, #+0]
    651            }       
    652          }
   \                     ??Test_RoadInfo_Shuzhi_11: (+1)
   \   00000138   0xB065             ADD      SP,SP,#+404
   \   0000013A   0xBD00             POP      {PC}             ;; return

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H
   \   00000004   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000014   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000024   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000034   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000044   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000054   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000064   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000074   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000084   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   00000094   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000A4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000B4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
    653          
    654          
    655          
    656          
    657          
    658          
    659          
    660          
    661          /*******************确定电感最大最小值**********************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    662          void Inductor_Check(void)
    663          {
   \                     Inductor_Check: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    664            //起始电感值滤波:确定最低电感值
    665          if(AD_valu[0]<500&&AD_valu[1]<500&&AD_valu[2]<500)
   \   00000002   0x....             LDR      R0,??DataTable6_2
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x21FA             MOVS     R1,#+250
   \   00000008   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   0000000A   0x4288             CMP      R0,R1
   \   0000000C   0xDA4D             BGE      ??Inductor_Check_0
   \   0000000E   0x....             LDR      R0,??DataTable6_2
   \   00000010   0x6840             LDR      R0,[R0, #+4]
   \   00000012   0x21FA             MOVS     R1,#+250
   \   00000014   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   00000016   0x4288             CMP      R0,R1
   \   00000018   0xDA47             BGE      ??Inductor_Check_0
   \   0000001A   0x....             LDR      R0,??DataTable6_2
   \   0000001C   0x6880             LDR      R0,[R0, #+8]
   \   0000001E   0x21FA             MOVS     R1,#+250
   \   00000020   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   00000022   0x4288             CMP      R0,R1
   \   00000024   0xDA41             BGE      ??Inductor_Check_0
    666              {
    667                if(AD_valu[0]-AD_valu[1]<5&&AD_valu[0]-AD_valu[2]<5&&AD_valu[1]-AD_valu[2]<5&&
    668                AD_valu[0]-AD_valu[1]>-5&&AD_valu[0]-AD_valu[2]>-5&&AD_valu[1]-AD_valu[2]>-5)
   \   00000026   0x....             LDR      R0,??DataTable6_2
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x....             LDR      R1,??DataTable6_2
   \   0000002C   0x6849             LDR      R1,[R1, #+4]
   \   0000002E   0x1A40             SUBS     R0,R0,R1
   \   00000030   0x2805             CMP      R0,#+5
   \   00000032   0xDA3A             BGE      ??Inductor_Check_0
   \   00000034   0x....             LDR      R0,??DataTable6_2
   \   00000036   0x6800             LDR      R0,[R0, #+0]
   \   00000038   0x....             LDR      R1,??DataTable6_2
   \   0000003A   0x6889             LDR      R1,[R1, #+8]
   \   0000003C   0x1A40             SUBS     R0,R0,R1
   \   0000003E   0x2805             CMP      R0,#+5
   \   00000040   0xDA33             BGE      ??Inductor_Check_0
   \   00000042   0x....             LDR      R0,??DataTable6_2
   \   00000044   0x6840             LDR      R0,[R0, #+4]
   \   00000046   0x....             LDR      R1,??DataTable6_2
   \   00000048   0x6889             LDR      R1,[R1, #+8]
   \   0000004A   0x1A40             SUBS     R0,R0,R1
   \   0000004C   0x2805             CMP      R0,#+5
   \   0000004E   0xDA2C             BGE      ??Inductor_Check_0
   \   00000050   0x....             LDR      R0,??DataTable6_2
   \   00000052   0x6800             LDR      R0,[R0, #+0]
   \   00000054   0x....             LDR      R1,??DataTable6_2
   \   00000056   0x6849             LDR      R1,[R1, #+4]
   \   00000058   0x1A40             SUBS     R0,R0,R1
   \   0000005A   0x2103             MOVS     R1,#+3
   \   0000005C   0x43C9             MVNS     R1,R1            ;; #-4
   \   0000005E   0x4288             CMP      R0,R1
   \   00000060   0xDB23             BLT      ??Inductor_Check_0
   \   00000062   0x....             LDR      R0,??DataTable6_2
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x....             LDR      R1,??DataTable6_2
   \   00000068   0x6889             LDR      R1,[R1, #+8]
   \   0000006A   0x1A40             SUBS     R0,R0,R1
   \   0000006C   0x2103             MOVS     R1,#+3
   \   0000006E   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000070   0x4288             CMP      R0,R1
   \   00000072   0xDB1A             BLT      ??Inductor_Check_0
   \   00000074   0x....             LDR      R0,??DataTable6_2
   \   00000076   0x6840             LDR      R0,[R0, #+4]
   \   00000078   0x....             LDR      R1,??DataTable6_2
   \   0000007A   0x6889             LDR      R1,[R1, #+8]
   \   0000007C   0x1A40             SUBS     R0,R0,R1
   \   0000007E   0x2103             MOVS     R1,#+3
   \   00000080   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000082   0x4288             CMP      R0,R1
   \   00000084   0xDB11             BLT      ??Inductor_Check_0
    669                   {
    670                      min_v[0]=AD_valu[0];
   \   00000086   0x....             LDR      R0,??DataTable6_2
   \   00000088   0x6800             LDR      R0,[R0, #+0]
   \   0000008A   0x.... 0x....      BL       __aeabi_i2f
   \   0000008E   0x....             LDR      R1,??DataTable6_3
   \   00000090   0x6008             STR      R0,[R1, #+0]
    671                      min_v[1]=AD_valu[1];
   \   00000092   0x....             LDR      R0,??DataTable6_2
   \   00000094   0x6840             LDR      R0,[R0, #+4]
   \   00000096   0x.... 0x....      BL       __aeabi_i2f
   \   0000009A   0x....             LDR      R1,??DataTable6_3
   \   0000009C   0x6048             STR      R0,[R1, #+4]
    672                      min_v[2]=AD_valu[2];
   \   0000009E   0x....             LDR      R0,??DataTable6_2
   \   000000A0   0x6880             LDR      R0,[R0, #+8]
   \   000000A2   0x.... 0x....      BL       __aeabi_i2f
   \   000000A6   0x....             LDR      R1,??DataTable6_3
   \   000000A8   0x6088             STR      R0,[R1, #+8]
    673                   }    
    674              }
    675          
    676          if(AD_valu[0]<500&&AD_valu[1]<500&&AD_valu[2]<500&&AD_valu[3]<500&&AD_valu[4]<500)
   \                     ??Inductor_Check_0: (+1)
   \   000000AA   0x....             LDR      R0,??DataTable6_2
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0x21FA             MOVS     R1,#+250
   \   000000B0   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000B2   0x4288             CMP      R0,R1
   \   000000B4   0xDB00             BLT      .+4
   \   000000B6   0xE086             B        ??Inductor_Check_1
   \   000000B8   0x....             LDR      R0,??DataTable6_2
   \   000000BA   0x6840             LDR      R0,[R0, #+4]
   \   000000BC   0x21FA             MOVS     R1,#+250
   \   000000BE   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000C0   0x4288             CMP      R0,R1
   \   000000C2   0xDB00             BLT      .+4
   \   000000C4   0xE07F             B        ??Inductor_Check_1
   \   000000C6   0x....             LDR      R0,??DataTable6_2
   \   000000C8   0x6880             LDR      R0,[R0, #+8]
   \   000000CA   0x21FA             MOVS     R1,#+250
   \   000000CC   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000CE   0x4288             CMP      R0,R1
   \   000000D0   0xDA79             BGE      ??Inductor_Check_1
   \   000000D2   0x....             LDR      R0,??DataTable6_2
   \   000000D4   0x68C0             LDR      R0,[R0, #+12]
   \   000000D6   0x21FA             MOVS     R1,#+250
   \   000000D8   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000DA   0x4288             CMP      R0,R1
   \   000000DC   0xDA73             BGE      ??Inductor_Check_1
   \   000000DE   0x....             LDR      R0,??DataTable6_2
   \   000000E0   0x6900             LDR      R0,[R0, #+16]
   \   000000E2   0x21FA             MOVS     R1,#+250
   \   000000E4   0x0049             LSLS     R1,R1,#+1        ;; #+500
   \   000000E6   0x4288             CMP      R0,R1
   \   000000E8   0xDA6D             BGE      ??Inductor_Check_1
    677              {
    678                if(AD_valu[0]-AD_valu[1]<5&&AD_valu[0]-AD_valu[2]<5&&AD_valu[1]-AD_valu[2]<5&&AD_valu[1]-AD_valu[3]<5&&AD_valu[1]-AD_valu[4]<5&&
    679                AD_valu[0]-AD_valu[1]>-5&&AD_valu[0]-AD_valu[2]>-5&&AD_valu[1]-AD_valu[2]>-5&&AD_valu[1]-AD_valu[3]>-5&&AD_valu[1]-AD_valu[4]>-5)
   \   000000EA   0x....             LDR      R0,??DataTable6_2
   \   000000EC   0x6800             LDR      R0,[R0, #+0]
   \   000000EE   0x....             LDR      R1,??DataTable6_2
   \   000000F0   0x6849             LDR      R1,[R1, #+4]
   \   000000F2   0x1A40             SUBS     R0,R0,R1
   \   000000F4   0x2805             CMP      R0,#+5
   \   000000F6   0xDA66             BGE      ??Inductor_Check_1
   \   000000F8   0x....             LDR      R0,??DataTable6_2
   \   000000FA   0x6800             LDR      R0,[R0, #+0]
   \   000000FC   0x....             LDR      R1,??DataTable6_2
   \   000000FE   0x6889             LDR      R1,[R1, #+8]
   \   00000100   0x1A40             SUBS     R0,R0,R1
   \   00000102   0x2805             CMP      R0,#+5
   \   00000104   0xDA5F             BGE      ??Inductor_Check_1
   \   00000106   0x....             LDR      R0,??DataTable6_2
   \   00000108   0x6840             LDR      R0,[R0, #+4]
   \   0000010A   0x....             LDR      R1,??DataTable6_2
   \   0000010C   0x6889             LDR      R1,[R1, #+8]
   \   0000010E   0x1A40             SUBS     R0,R0,R1
   \   00000110   0x2805             CMP      R0,#+5
   \   00000112   0xDA58             BGE      ??Inductor_Check_1
   \   00000114   0x....             LDR      R0,??DataTable6_2
   \   00000116   0x6840             LDR      R0,[R0, #+4]
   \   00000118   0x....             LDR      R1,??DataTable6_2
   \   0000011A   0x68C9             LDR      R1,[R1, #+12]
   \   0000011C   0x1A40             SUBS     R0,R0,R1
   \   0000011E   0x2805             CMP      R0,#+5
   \   00000120   0xDA51             BGE      ??Inductor_Check_1
   \   00000122   0x....             LDR      R0,??DataTable6_2
   \   00000124   0x6840             LDR      R0,[R0, #+4]
   \   00000126   0x....             LDR      R1,??DataTable6_2
   \   00000128   0x6909             LDR      R1,[R1, #+16]
   \   0000012A   0x1A40             SUBS     R0,R0,R1
   \   0000012C   0x2805             CMP      R0,#+5
   \   0000012E   0xDA4A             BGE      ??Inductor_Check_1
   \   00000130   0x....             LDR      R0,??DataTable6_2
   \   00000132   0x6800             LDR      R0,[R0, #+0]
   \   00000134   0x....             LDR      R1,??DataTable6_2
   \   00000136   0x6849             LDR      R1,[R1, #+4]
   \   00000138   0x1A40             SUBS     R0,R0,R1
   \   0000013A   0x2103             MOVS     R1,#+3
   \   0000013C   0x43C9             MVNS     R1,R1            ;; #-4
   \   0000013E   0x4288             CMP      R0,R1
   \   00000140   0xDB41             BLT      ??Inductor_Check_1
   \   00000142   0x....             LDR      R0,??DataTable6_2
   \   00000144   0x6800             LDR      R0,[R0, #+0]
   \   00000146   0x....             LDR      R1,??DataTable6_2
   \   00000148   0x6889             LDR      R1,[R1, #+8]
   \   0000014A   0x1A40             SUBS     R0,R0,R1
   \   0000014C   0x2103             MOVS     R1,#+3
   \   0000014E   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000150   0x4288             CMP      R0,R1
   \   00000152   0xDB38             BLT      ??Inductor_Check_1
   \   00000154   0x....             LDR      R0,??DataTable6_2
   \   00000156   0x6840             LDR      R0,[R0, #+4]
   \   00000158   0x....             LDR      R1,??DataTable6_2
   \   0000015A   0x6889             LDR      R1,[R1, #+8]
   \   0000015C   0x1A40             SUBS     R0,R0,R1
   \   0000015E   0x2103             MOVS     R1,#+3
   \   00000160   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000162   0x4288             CMP      R0,R1
   \   00000164   0xDB2F             BLT      ??Inductor_Check_1
   \   00000166   0x....             LDR      R0,??DataTable6_2
   \   00000168   0x6840             LDR      R0,[R0, #+4]
   \   0000016A   0x....             LDR      R1,??DataTable6_2
   \   0000016C   0x68C9             LDR      R1,[R1, #+12]
   \   0000016E   0x1A40             SUBS     R0,R0,R1
   \   00000170   0x2103             MOVS     R1,#+3
   \   00000172   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000174   0x4288             CMP      R0,R1
   \   00000176   0xDB26             BLT      ??Inductor_Check_1
   \   00000178   0x....             LDR      R0,??DataTable6_2
   \   0000017A   0x6840             LDR      R0,[R0, #+4]
   \   0000017C   0x....             LDR      R1,??DataTable6_2
   \   0000017E   0x6909             LDR      R1,[R1, #+16]
   \   00000180   0x1A40             SUBS     R0,R0,R1
   \   00000182   0x2103             MOVS     R1,#+3
   \   00000184   0x43C9             MVNS     R1,R1            ;; #-4
   \   00000186   0x4288             CMP      R0,R1
   \   00000188   0xDB1D             BLT      ??Inductor_Check_1
    680                   {
    681                      min_v[0]=AD_valu[0];
   \   0000018A   0x....             LDR      R0,??DataTable6_2
   \   0000018C   0x6800             LDR      R0,[R0, #+0]
   \   0000018E   0x.... 0x....      BL       __aeabi_i2f
   \   00000192   0x....             LDR      R1,??DataTable6_3
   \   00000194   0x6008             STR      R0,[R1, #+0]
    682                      min_v[1]=AD_valu[1];
   \   00000196   0x....             LDR      R0,??DataTable6_2
   \   00000198   0x6840             LDR      R0,[R0, #+4]
   \   0000019A   0x.... 0x....      BL       __aeabi_i2f
   \   0000019E   0x....             LDR      R1,??DataTable6_3
   \   000001A0   0x6048             STR      R0,[R1, #+4]
    683                      min_v[2]=AD_valu[2];
   \   000001A2   0x....             LDR      R0,??DataTable6_2
   \   000001A4   0x6880             LDR      R0,[R0, #+8]
   \   000001A6   0x.... 0x....      BL       __aeabi_i2f
   \   000001AA   0x....             LDR      R1,??DataTable6_3
   \   000001AC   0x6088             STR      R0,[R1, #+8]
    684                      min_v[3]=AD_valu[3];
   \   000001AE   0x....             LDR      R0,??DataTable6_2
   \   000001B0   0x68C0             LDR      R0,[R0, #+12]
   \   000001B2   0x.... 0x....      BL       __aeabi_i2f
   \   000001B6   0x....             LDR      R1,??DataTable6_3
   \   000001B8   0x60C8             STR      R0,[R1, #+12]
    685                      min_v[4]=AD_valu[4];
   \   000001BA   0x....             LDR      R0,??DataTable6_2
   \   000001BC   0x6900             LDR      R0,[R0, #+16]
   \   000001BE   0x.... 0x....      BL       __aeabi_i2f
   \   000001C2   0x....             LDR      R1,??DataTable6_3
   \   000001C4   0x6108             STR      R0,[R1, #+16]
    686                   }    
    687              }
    688          
    689            for(int i=0;i<5;i++)
   \                     ??Inductor_Check_1: (+1)
   \   000001C6   0x2200             MOVS     R2,#+0
   \                     ??Inductor_Check_2: (+1)
   \   000001C8   0x2A05             CMP      R2,#+5
   \   000001CA   0xDA0E             BGE      ??Inductor_Check_3
    690            {
    691               if( min_v[i]>499)
   \   000001CC   0x....             LDR      R0,??DataTable6_3
   \   000001CE   0x2104             MOVS     R1,#+4
   \   000001D0   0x4351             MULS     R1,R2,R1
   \   000001D2   0x5840             LDR      R0,[R0, R1]
   \   000001D4   0x....             LDR      R1,??DataTable6_4  ;; 0x43f98001
   \   000001D6   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000001DA   0xD804             BHI      ??Inductor_Check_4
    692                   min_v[i]=499;
   \   000001DC   0x....             LDR      R0,??DataTable6_5  ;; 0x43f98000
   \   000001DE   0x....             LDR      R1,??DataTable6_3
   \   000001E0   0x2304             MOVS     R3,#+4
   \   000001E2   0x4353             MULS     R3,R2,R3
   \   000001E4   0x50C8             STR      R0,[R1, R3]
    693            }
   \                     ??Inductor_Check_4: (+1)
   \   000001E6   0x1C52             ADDS     R2,R2,#+1
   \   000001E8   0xE7EE             B        ??Inductor_Check_2
    694          //电感最大值确定：防止实际最大电感值偏大
    695          if(Circle_Flag==0)
   \                     ??Inductor_Check_3: (+1)
   \   000001EA   0x....             LDR      R0,??DataTable6_6
   \   000001EC   0x6800             LDR      R0,[R0, #+0]
   \   000001EE   0x2800             CMP      R0,#+0
    696            {
    697               if(AD_inductor[1]<90)
    698               {
    699          //        if(AD_valu[0]>max_v[0]) max_v[0]=AD_valu[0];//避免差值变大
    700          //        if(AD_valu[2]>max_v[2]) max_v[2]=AD_valu[2];
    701          //        if(AD_valu[3]>max_v[3]) max_v[3]=AD_valu[3];
    702          //        if(AD_valu[4]>max_v[4]) max_v[4]=AD_valu[4];
    703               }
    704            }
    705          }
   \                     ??Inductor_Check_5: (+1)
   \   000001F0   0xBD01             POP      {R0,PC}          ;; return
    706          //电感最小值确定：防止实际最大电感值偏小？没想出来
    707          
    708          
    709          ///取绝对值

   \                                 In section .text, align 2, keep-with-next
    710          uint16 abs_i(int value)
    711          {
   \                     abs_i: (+1)
   \   00000000   0xB500             PUSH     {LR}
    712              if(value<0)
   \   00000002   0x2800             CMP      R0,#+0
   \   00000004   0xD501             BPL      ??abs_i_0
    713                value=-value;
   \   00000006   0x4241             RSBS     R1,R0,#+0
   \   00000008   0x0008             MOVS     R0,R1
    714              return value;
   \                     ??abs_i_0: (+1)
   \   0000000A   0xB280             UXTH     R0,R0
   \   0000000C   0xBD00             POP      {PC}             ;; return
    715          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0:
   \   00000000   0x........         DC32     AD_hall

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_1:
   \   00000000   0x........         DC32     Stop_Plan_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_2:
   \   00000000   0x451C4000         DC32     0x451c4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_3:
   \   00000000   0x........         DC32     Stop_ms

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_4:
   \   00000000   0x00002711         DC32     0x2711

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable0_5:
   \   00000000   0x........         DC32     Stop_OK

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     Stop_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     Circle_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     Circle_Inductor_M1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     Circle_Inductor_LR1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     Circle_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     Circle_Count_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x42200000         DC32     0x42200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     Circle_R_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     Circle_L_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     Circle_Inductor_M2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     AD_inductor_Shuzhi_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x........         DC32     AD_inductor_Shuzhi_Min

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     Circle_Inductor_M3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x........         DC32     Circle_Error_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     Circle_L_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x........         DC32     Circle_Turn_Old_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x........         DC32     Circle_R_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x........         DC32     Circle_Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   0x........         DC32     Circle_L_Finish_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   0x........         DC32     Circle_R_Finish_Count

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   0x........         DC32     Circle_Finish_Count_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   0x........         DC32     Circle_Count2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_25:
   \   00000000   0x........         DC32     Circle_Count_Out_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_26:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_27:
   \   00000000   0x........         DC32     Circle_Count6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_28:
   \   00000000   0x........         DC32     Circle_Count6_Max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     AD_2_max

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x........         DC32     Chazhi_Last

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x........         DC32     RefAd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0xC1F00000         DC32     0xc1f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \   00000000   0x42200000         DC32     0x42200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_8:
   \   00000000   0xC2C80000         DC32     0xc2c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x........         DC32     Chazhi_Max_New

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x........         DC32     Chazhi_Chucun

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     Chazhi_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     Chazhi_Rate

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     Road_Remember

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     Road_Remember+0xC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     StraightRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     StraightRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     WindingRoad_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x42DC0000         DC32     0x42dc0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x420C0000         DC32     0x420c0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x42200001         DC32     0x42200001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     StraightRoad_Old

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x........         DC32     WindingRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     WindingRoad_Right

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x41700000         DC32     0x41700000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     WindingRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     WindingRoad_Left_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     WindingRoad_Right_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     StraightRoad

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     Road_Remember+0xC4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     WindingRoad_Left

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x41700001         DC32     0x41700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     StraightRoad_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     AD_valu

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     min_v

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x43F98001         DC32     0x43f98001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x43F98000         DC32     0x43f98000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     Circle_Flag
    716          
    717          
    718          
    719          /************************************************************************************************************************************************************************************************************************************
    720          检测弯道还是直道
    721          5.6、 弯道策略
    722          电科：电磁组前瞻较小， S 道处理较困难， S 道的处理的好坏对整体速度有较大
    723          的影响。 处理方法如下：初始化一个容量为 50 的数组，记录每次的弯曲度，动
    724          态更新数组。然后对 50 个数据求绝对值和和代数和,如果代数和绝对值很小，
    725          则车在直道，如果代数和和绝对值和较小，但是前 20 个数据较大，则可以判定
    726          小车在出弯，如果代数和和绝对值和较小，后 20 较大，则判定小车在入弯，如
    727          果代数和很小，但绝对值和很大，则在 s 弯道。经过调试， 虽然有一点滞后性，
    728          还可以继续完善。但是这个算法可以非常好的处理弯道。
    729          
    730          北科：对过弯速度的处理方式确定为：
    731          入弯时急减速，以得到足够的调整时间，获得正确的转向角度；在弯道内适当
    732          提速，并保持角度不变，为出弯时的加速节约时间；出弯时，先准确判断标志，
    733          然后加速，虽然会耗费一些时间，但是面对连续变向弯道可以减少判断出错的
    734          概率，保证行驶状态的稳定性，而且弯道内的有限加速对后面的提速也有很大
    735          的帮助。综合考虑用可以接收的额外时间换回行驶稳定性还是值得的
    736          ******************************************************************************************************************************/
    737          /*void Small_S(void)
    738          {
    739          int Chazhi_i=0;
    740          float Chazhi_wandao[50]={0};
    741           float    Chazhi_he=0,Chazhi_he_before=0,Chazhi_he_after=0,
    742               Chazhi_abs=0,     
    743               Chazhi_he_before_flag = 0,
    744               Chazhi_he_after_flag  = 0,
    745               Chazhi_he_flag        = 0,
    746               Chazhi_abs_flag       =0;
    747          
    748                for(Chazhi_i = 0;Chazhi_i < 50; Chazhi_i++)   //将所有更新的数据往前移1位
    749            {
    750                Chazhi_wandao[Chazhi_i] = Chazhi_wandao[Chazhi_i+1];
    751            }
    752            Road_Remember[49] = Chazhi;	//该值为电感检测值-100~100
    753               
    754          //     Chazhi_i++;
    755          //  Chazhi_wandao[Chazhi_i] = Chazhi;
    756          //  if(Chazhi_i >= 50)
    757          //  {
    758          //    Chazhi_i = 0;
    759            
    760              for (int Chazhi_j = 1;Chazhi_j <= 50;Chazhi_j++)
    761              {   
    762          //取50个的电感值的代数和
    763                Chazhi_he += Chazhi_wandao[Chazhi_j];
    764          //取前20的值,
    765                if(Chazhi_j == 20)
    766                Chazhi_he_before = Chazhi_he;
    767          //取后20的值,最新值
    768                if(Chazhi_j >=31&&Chazhi_j <= 50)
    769                  Chazhi_he_after  += Chazhi_wandao[Chazhi_j];
    770              }
    771          
    772          //取50个电感值的绝对值和
    773              for (int Chazhi_j = 1;Chazhi_j <= 50;Chazhi_j++)
    774              { Chazhi_abs  += abs_f(Chazhi_wandao[Chazhi_j]);}
    775            }
    776            
    777          //  Chazhi_he_before_flag = Chazhi_he_before;
    778          //  Chazhi_he_after_flag  = Chazhi_he_after;
    779          //  Chazhi_he_flag        = Chazhi_he;
    780          //  Chazhi_abs_flag       = Chazhi_abs;
    781          //  
    782          //
    783          //  Chazhi_he_before = 0;
    784          //  Chazhi_he_after  = 0;
    785          //  Chazhi_he        = 0;
    786          //  Chazhi_abs       = 0;
    787          
    788          */
    789          //void Test_RoadInfo2(void) 
    790          //{
    791          //  StraightRoad_Old = StraightRoad;
    792          //   
    793          //  for(int8_t i = 0;i <M-1; i++)   //将所有更新的数据往前移1位
    794          //  {
    795          //      Road_Remember2[i] = Road_Remember[i+1];
    796          //  }
    797          //  Road_Remember2[M-1] = Chazhi;	//该值为电感检测值-100~100
    798          //  
    799          //  for(int8_t i = 0;i<20;i++)  
    800          //  {
    801          //      Abs_old_Chazhi+= abs_f(Road_Remember2[i]);
    802          //      Alg_old_Chazhi+=Road_Remember2[i];
    803          //  }
    804          //  for(int8_t i = 30;i<M;i++)  
    805          //  {
    806          //      Abs_new_Chazhi+= abs_f(Road_Remember2[i]);
    807          //      Alg_new_Chazhi+=Road_Remember2[i];
    808          //  }
    809          //   for(int8_t i = 20;i<30;i++)  
    810          //  {
    811          //      Abs_sum_Chazhi+= abs_f(Road_Remember2[i]);
    812          //      Alg_sum_Chazhi+=Road_Remember2[i];
    813          //  }
    814          //  
    815          //  Abs_sum_Chazhi+=Abs_new_Chazhi+Abs_old_Chazhi;
    816          //  Alg_sum_Chazhi+=Alg_new_Chazhi+Alg_old_Chazhi;
    817          //  
    818          //  Chazhi_Acc_Zhi=250,//50*5
    819          //  Chazhi_Acc_Wan=400,//20*20
    820          //
    821          //  if(Abs_sum_Chazhi<Chazhi_Acc_Zhi&&Alg_sum_Chazhi<Chazhi_Acc_Zhi&&Alg_sum_Chazhi>-Chazhi_Acc_Zhi)
    822          //  {
    823          //       StraightRoad_Flag = 1;
    824          //  }
    825          //  
    826          //   if(Abs_new_Chazhi>Chazhi_Acc_Wan&&Alg_new_Chazhi>Chazhi_Acc_Wan)
    827          //  {
    828          //      WindingRoad_Left_Flag = 1;
    829          //  } 
    830          //  if(Abs_new_Chazhi>Chazhi_Acc_Wan&&Alg_new_Chazhi<-Chazhi_Acc_Wan)
    831          //  {
    832          //      WindingRoad_Right_Flag = 1;
    833          //  }
    834          //  
    835          //  if(Abs_old_Chazhi<Chazhi_Acc_Wan&&Alg_old_Chazhi>Chazhi_Acc_Wan&&Alg_new_Chazhi<-Chazhi_Acc_Wan)
    836          //  {
    837          //      WindingRoad_Left_Flag = 1;
    838          //  }
    839          
    840          //  
    841          ////  StraightRoad=0;;//小车直走次数
    842          ////  WindingRoad_Left = 0;WindingRoad_Right = 0;//小车左转,右转次数
    843          //  
    844          //  for(int8_t i = 0;i < 100; i++)
    845          //  {        
    846          //    if(Road_Remember[i] > -40 && Road_Remember[i] < 40)	//在-35~35范围内，保证差值与位置的线性关系
    847          //    {
    848          //      StraightRoad++;		//判断直道稳定性，分别列出一百组信号
    849          //    }
    850          // //else if(g_AD_Remember[i] > -45 && g_AD_Remember[i] < 45)				//在-35~35范围内，保证Mid_AD_value与位置的线性关系
    851          // //{
    852          // //  StraightRoad2++;		//判断直道稳定性，分别列出一百组信号
    853          // //}		
    854          //    else if(Road_Remember[i] >= -300 && Road_Remember[i] <= -40)//100,38
    855          //   {
    856          //     WindingRoad_Right++;		//判断弯道稳定性---右转累加
    857          //   }
    858          //   else if(Road_Remember[i] >= 40 && Road_Remember[i] <= 300)
    859          //   {
    860          //      WindingRoad_Left++;		//判断弯道稳定性---左转累加
    861          //   }
    862          //    
    863          //  }
    864          //  StraightRoad_Flag = 0;//直道标志
    865          //  WindingRoad_Left_Flag = 0,WindingRoad_Right_Flag = 0;//左转,右转标志                 
    866          //  if(StraightRoad >= 95)
    867          //  {
    868          //  StraightRoad_Flag = 1;
    869          //  }
    870          //  if(WindingRoad_Left >= 5)//50
    871          //  {
    872          //    WindingRoad_Left_Flag = 1;
    873          //  }
    874          //  if(WindingRoad_Right >= 5)
    875          //  {
    876          //    WindingRoad_Right_Flag = 1;
    877          //  }       
    878          //}
    879          //void Test_Huandao()
    880          //{
    881          ////  状态      右     中     左   右竖  左竖 
    882          ////  最大      2000  1600   2000  2000  2000
    883          ////                               400(13)   400(13)    
    884          ////  正常      825   1600   825   170(10)   170(10)
    885          ////  环岛两 个环切线滤波
    886          ////  if(AD_inductor[0]>45&&AD_inductor[1]>80&&AD_inductor[2]>45)//中
    887          ////    Chazhi=Chazhi/10;
    888          ////  if(AD_inductor[1]>75&&(AD_inductor[0]>75||AD_inductor[2]>75))//电磁线在俩电感之间时不行
    889          ////    Chazhi=Chazhi/10; 
    890          ////   if(Circle_Flag>0)
    891          ////   {
    892          ////      if(AD_inductor[1]>105&&AD_inductor[1]<Circle_inductor_Max)//识别进入到环岛双线之前之后
    893          ////         {
    894          //////       Chazhi = (int16)(AD_inductor[2] - AD_inductor[0]); 
    895          //////       Chazhi=0; 
    896          ////           if(AD_inductor[3]>AD_inductor[4]) //100       
    897          ////              Circle_R_Count++; 
    898          ////           if(AD_inductor[4]>AD_inductor[3]) //100       
    899          ////              Circle_L_Count++;    
    900          ////    }
    901          ////   }  
    902          //                     //100
    903          ////    if(AD_inductor[1]>120&&AD_inductor[1]<Circle_inductor_Mid2)//识别进入到环岛双线之前之后
    904          ////    {
    905          //////       Chazhi = (int16)(AD_inductor[2] - AD_inductor[0]); 
    906          //////       Chazhi=0; 
    907          ////       if(AD_inductor[0]>90) //100       
    908          ////         Circle_R_Count++; 
    909          ////       if(AD_inductor[2]>90)  //100      
    910          ////         Circle_L_Count++;    
    911          ////    }
    912          ////    
    913          ////     if(AD_inductor[0]>70&&AD_inductor[1]>90&&AD_inductor[2]>70||
    914          ////        AD_inductor[1]>85&&(AD_inductor[0]>80||AD_inductor[2]>80))//中
    915          //  //2000,100;2500,125;3000,150;3500,175
    916          //  if(Circle_Flag==0)//处于检测圆环双线状态
    917          //  {
    918          //    
    919          ////       if(AD_inductor[1]>130&&AD_inductor[1]<170)
    920          ////          {
    921          //////            if(AD_inductor[0]>AD_inductor[2]+30) //100       
    922          //////              Circle_R_Count++; 
    923          //////             if(AD_inductor[2]>AD_inductor[0]+30) //100       
    924          //////              Circle_L_Count++; 
    925          //////          
    926          ////          }
    927          //    
    928          //    
    929          //      if(AD_inductor[1]>Circle_Inductor_value1)
    930          //      {
    931          //              Circle_Count++;//环岛双线计数   
    932          //              if(Circle_Count>Circle_Count_Max)
    933          //              {
    934          //                  Circle_Flag=1; //进入环岛双线
    935          //                  Circle_Count=0;
    936          //              }
    937          //      }
    938          //  }
    939          //  
    940          //  
    941          //  if(Circle_Flag==1)//检测到圆环双线，进入到检测离开圆环双线
    942          //  {
    943          //        if(AD_inductor[1]<Circle_Inductor_value2)      
    944          //                Circle_Count2++;//离开环岛双线计数
    945          //        
    946          //         if(AD_inductor[3]>AD_inductor_Shuzhi_Max&&AD_inductor[4]<AD_inductor_Shuzhi_Min) //100       
    947          //          Circle_R_Count++; 
    948          //         if(AD_inductor[4]>AD_inductor_Shuzhi_Max&&AD_inductor[3]<AD_inductor_Shuzhi_Min) //100       
    949          //          Circle_L_Count++; 
    950          //         
    951          // //会出现提前转弯，与滞后转弯后强制出环转冲突，导致提前转弯一直旋转        
    952          ////      if(Circle_L_Count>Circle_Turn_Count||Circle_R_Count>Circle_Turn_Count)//转弯计数达到上限，进入转弯时刻
    953          ////         Circle_Flag=3;//转弯识别结束该转弯了
    954          //         
    955          //         
    956          //         
    957          //         
    958          //        if(Circle_Count2>Circle_Count2_Max)
    959          //
    960          //        {
    961          //             Circle_Flag=2; //离开环岛双线标志
    962          //             Circle_Count2=0;
    963          //        }
    964          //
    965          //  }
    966          //
    967          //   if(Circle_Flag==2)//已经检测到离开圆环双线，开始转弯计数
    968          //   {
    969          //       if(AD_inductor[3]>AD_inductor[4]) //100       
    970          //          Circle_R_Count++; 
    971          //       if(AD_inductor[4]>AD_inductor[3]) //100       
    972          //          Circle_L_Count++;
    973          ////       if(AD_inductor[0]>AD_inductor[2]) //100       
    974          ////          Circle_R_Count++; 
    975          ////       if(AD_inductor[2]>AD_inductor[0]) //100       
    976          ////          Circle_L_Count++; 
    977          ////   
    978          //       
    979          //    //同上解释，可通过计算速度时间路程来使用
    980          ////       if(Circle_L_Count>Circle_Turn_Count2||Circle_R_Count>Circle_Turn_Count2)//转弯计数达到上限，进入转弯时刻
    981          ////                    Circle_Flag=3;//转弯识别结束该转弯了
    982          //
    983          //       if(AD_inductor[1]<Circle_Inductor_value3)//150
    984          //        {
    985          //////          Circle_Count3++;//圆环转弯计数，累加为了避免遇到误判，环岛双线提前结束
    986          //////          if(Circle_Count3>Circle_Count3_Max)
    987          //////          {
    988          //////          Circle_Count3=0;
    989          //             Circle_Flag=3;//转弯识别结束该转弯了
    990          //////          }
    991          //        }
    992          //   }
    993          //   
    994          //   if(Circle_Flag==3)//开始转弯
    995          //   {      
    996          //      if(Circle_Error_Flag==0)//防止左/右转后因为电感值变反而引发右/左转，
    997          //      {
    998          //         if(Circle_L_Count>Circle_R_Count)
    999          //         {
   1000          //          Circle_L_Count=0;
   1001          //          Circle_R_Count=0;
   1002          //          
   1003          //           Circle_L_Flag=1;
   1004          //           
   1005          //           Circle_Turn_Old_Flag=2;
   1006          //           
   1007          //           Circle_Error_Flag=2;
   1008          //         }
   1009          //         else
   1010          //         {
   1011          //            Circle_L_Count=0;
   1012          //            Circle_R_Count=0;
   1013          //          
   1014          //            Circle_R_Flag=1;
   1015          //            
   1016          //             Circle_Turn_Old_Flag=1;
   1017          //            
   1018          //            Circle_Error_Flag=1;
   1019          //         }           
   1020          //      }
   1021          //   }
   1022          //
   1023          //
   1024          //      if(Circle_L_Flag==1)
   1025          //      {
   1026          //          Chazhi = 43.5;
   1027          //          
   1028          //          Circle_L_Finish_Count++;
   1029          //          LED_2_ON;
   1030          //          BUZZER_ON;
   1031          //      }
   1032          //      if(Circle_R_Flag==1)
   1033          //      {
   1034          //           Chazhi =-43.5;//47=70度,43.5=65
   1035          //           Circle_R_Finish_Count++;      
   1036          //           LED_1_ON;
   1037          //                     BUZZER_ON;
   1038          //
   1039          //      }
   1040          //    
   1041          //
   1042          //    if(Circle_L_Finish_Count>Circle_Finish_Count_Max||Circle_R_Finish_Count>Circle_Finish_Count_Max)//圆环转弯结束
   1043          //    {
   1044          //      Circle_Count=0;
   1045          //      Circle_Count2=0;
   1046          //      Circle_L_Finish_Count=0;
   1047          //      Circle_R_Finish_Count=0;
   1048          //      Circle_L_Count=0;
   1049          //      Circle_R_Count=0;
   1050          //      
   1051          //      Circle_L_Flag=0;
   1052          //      Circle_R_Flag=0;
   1053          //     Circle_Flag=4;
   1054          //                          BUZZER_OFF;
   1055          //     Circle_Count_Out_Flag=1;//避免强制转弯迟,造成进环后反方向出赛道
   1056          //
   1057          //    }
   1058          //  
   1059          // /*仅用电感150左右转弯，还会出现帅的提前转弯反转，故屏蔽
   1060          //  基本不会出现太滞后转弯,所以屏蔽，一旦出现提前转弯，和太滞后转弯的强制差值一样，导致一直在内旋转
   1061          //  
   1062          //  */ 
   1063          ////    if(Circle_Count_Out_Flag==1)
   1064          ////    {
   1065          ////        Circle_Count_Out++;
   1066          ////        if(Circle_Count_Out>Circle_Count_Out_Max)
   1067          ////        {
   1068          ////            Circle_Count_Out=0;
   1069          ////            Circle_Count_Out_Flag=0;
   1070          ////        }
   1071          ////        
   1072          ////        if(Circle_Turn_Old_Flag==2)//左转进弯
   1073          ////        {
   1074          ////           if(Chazhi)
   1075          ////           if(Chazhi<-40)
   1076          ////            Chazhi=-Chazhi;     
   1077          ////         }
   1078          ////      
   1079          ////         if(Circle_Turn_Old_Flag==1)//右转进弯
   1080          ////         {
   1081          ////             
   1082          ////            if(Chazhi>50)
   1083          ////               Circle_Count_Out__Wai_Flag=1;
   1084          ////            if(Chazhi>50)
   1085          ////               Circle_Count_Out__Wai_Flag=1;             
   1086          ////         if(Chazhi>40)
   1087          ////            Chazhi=-Chazhi;     
   1088          ////         }
   1089          ////      
   1090          ////     }
   1091          //  
   1092          //  
   1093          //    if(Circle_Flag==4)//圆环强制转弯结束,进入圆环行驶检测
   1094          //   {
   1095          //        if(AD_inductor[1]<Circle_Inductor_value4)
   1096          //      {
   1097          //              Circle_Count4++;//环岛双线计数   
   1098          //              if(Circle_Count4>Circle_Count4_Max)
   1099          //              {
   1100          //                  Circle_Flag=5; //出环岛双线标志
   1101          //                  Circle_Count4=0;
   1102          //              }
   1103          //      }
   1104          //   }
   1105          //     
   1106          //  
   1107          //   if(Circle_Flag==5)//圆环正规行驶结束束,进入检测出圆环双线
   1108          //   {
   1109          //        if(AD_inductor[1]>Circle_Inductor_value5)
   1110          //      {
   1111          //              Circle_Count5++;//环岛双线计数   
   1112          //              if(Circle_Count5>Circle_Count5_Max)
   1113          //              {
   1114          //                  Circle_Flag=6; //出环岛双线标志
   1115          //                  Circle_Count5=0;
   1116          //              }
   1117          //      }
   1118          //   }
   1119          //     
   1120          // 
   1121          ////   if(Circle_Flag==6)//标志6暂定时间3s
   1122          ////   {
   1123          ////     
   1124          //////     if(AD_inductor[1]>?)
   1125          ////     if(AD_inductor[1]>100)
   1126          ////     {
   1127          //////     if(AD_inductor[2]>?)
   1128          ////     
   1129          ////     Circle_Turn_Again_Counter++;
   1130          ////     if(Circle_Turn_Again_Counter>Circle_Turn_Again_Counter_Max)
   1131          ////     {
   1132          ////        Circle_Turn_Again_Prevent_Flag=0;
   1133          ////     }
   1134          ////     else
   1135          ////     {
   1136          ////       Circle_Turn_Again_Prevent_Flag=1;
   1137          ////     }
   1138          ////     
   1139          ////     if(Circle_Turn_Again_Prevent_Flag==1)
   1140          ////     {
   1141          ////         if(Circle_Turn_Old_Flag==2)//左转进弯预防差值60
   1142          ////         {
   1143          ////           if(Chazhi>30)
   1144          ////            Chazhi=-Chazhi/2;     
   1145          ////         }
   1146          ////      
   1147          ////        if(Circle_Turn_Old_Flag==1)//右转进弯预防差值-60
   1148          ////        {
   1149          ////            if(Chazhi<-30)
   1150          ////            Chazhi=-Chazhi/2;     
   1151          ////        }
   1152          ////     }
   1153          ////   }
   1154          ////   }
   1155          //  
   1156          //  
   1157          //
   1158          //  if(Circle_Flag==6)
   1159          //  {
   1160          //      if(AD_inductor[1]<Circle_Inductor_value6)
   1161          //      {
   1162          //        Circle_Count6++;
   1163          //        if(Circle_Count6>Circle_Count6_Max)
   1164          //        {
   1165          //        Circle_Flag=0;
   1166          //        Circle_Error_Flag=0;//转弯误判解除
   1167          //        }
   1168          //      }
   1169          //  }
   1170          //
   1171          ////   if(Circle_Error_Flag==1||Circle_Error_Flag==2)//防止误判计数
   1172          ////      {
   1173          ////         Circle_Error_Count++;
   1174          ////         if(Circle_Error_Count>Circle_Error_Count_Max)
   1175          ////         {
   1176          ////            Circle_Error_Flag=0;//转弯误判解除
   1177          ////            Circle_Error_Count=0;
   1178          //////                 Circle_Flag=0;
   1179          ////         }      
   1180          ////      }   
   1181          //
   1182          //}
   1183          //
   1184          //
   1185          //

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   Hall
         8   -> ADC_Once
         8   -> __aeabi_ui2f
         8 __aeabi_cfcmpeq
         8 __aeabi_cfcmple
       8   Inductor_Check
         8   -> __aeabi_i2f
         8 __aeabi_cfrcmple
      24   Inductor_analyse
        24   -> Inductor_Check
        24   -> Read_ADC
        24   -> __aeabi_fadd
        24   -> __aeabi_fdiv
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
        24   -> abs_inductor
        24 __aeabi_cfcmple
        24 __aeabi_cfrcmple
     424   Small_S
       424   -> GpioSet
       424   -> __aeabi_memclr4
       424   -> abs_f
       424 __aeabi_cfcmple
       424 __aeabi_cfrcmple
       8   Test_Huandao
         8   -> GpioSet
         8   -> __aeabi_fadd
         8   -> __aeabi_i2f
         8 __aeabi_cfcmple
       8   Test_RoadInfo
         8   -> abs_f
         8 __aeabi_cfcmple
     408   Test_RoadInfo_Shuzhi
       408   -> __aeabi_memclr4
       408 __aeabi_cfcmple
       408 __aeabi_cfrcmple
       4   abs_i


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable0
       4  ??DataTable0_1
       4  ??DataTable0_2
       4  ??DataTable0_3
       4  ??DataTable0_4
       4  ??DataTable0_5
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_20
       4  ??DataTable1_21
       4  ??DataTable1_22
       4  ??DataTable1_23
       4  ??DataTable1_24
       4  ??DataTable1_25
       4  ??DataTable1_26
       4  ??DataTable1_27
       4  ??DataTable1_28
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable2_8
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_2
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_2
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable6_4
       4  ??DataTable6_5
       4  ??DataTable6_6
     400  ?_0
     200  ?_1
     200  ?_2
       4  AD_0_max
       4  AD_1_max
       4  AD_2_max
       4  AD_3_max
       4  AD_MAX_NUM
      60  AD_V
       4  AD_hall
      20  AD_inductor
       4  AD_inductor_Huan
      20  AD_inductor_Last
       4  AD_inductor_Shuzhi_Max
       4  AD_inductor_Shuzhi_Min
      20  AD_sum
      20  AD_valu
       4  Abs_new_Chazhi
       4  Abs_old_Chazhi
       4  Abs_sum_Chazhi
       4  Add_AD_value
       4  Alg_new_Chazhi
       4  Alg_old_Chazhi
       4  Alg_sum_Chazhi
       4  Chazhi
      80  Chazhi_Chucun
       4  Chazhi_Last
       4  Chazhi_Max
       4  Chazhi_Max_New
       4  Chazhi_Min
       4  Chazhi_Old
       4  Circle_Chazhi
       4  Circle_Count
       4  Circle_Count2
       4  Circle_Count2_Max
       4  Circle_Count3
       4  Circle_Count3_Max
       4  Circle_Count4
       4  Circle_Count4_Max
       4  Circle_Count5
       4  Circle_Count5_Max
       4  Circle_Count6
       4  Circle_Count6_Max
       4  Circle_Count_Max
       4  Circle_Count_Out
       4  Circle_Count_Out_Flag
       4  Circle_Count_Out_Max
       4  Circle_Error_Count
       4  Circle_Error_Count_Max
       4  Circle_Error_Flag
       4  Circle_Finish_Count_Max
       4  Circle_Flag
       4  Circle_Inductor_LR1
       4  Circle_Inductor_M1
       4  Circle_Inductor_M2
       4  Circle_Inductor_M3
       4  Circle_Inductor_value2
       4  Circle_Inductor_value3
       4  Circle_Inductor_value4
       4  Circle_Inductor_value5
       4  Circle_Inductor_value6
       4  Circle_L_Count
       4  Circle_L_Finish_Count
       4  Circle_L_Flag
       4  Circle_R_Count
       4  Circle_R_Finish_Count
       4  Circle_R_Flag
       4  Circle_Turn_Again_Counter
       4  Circle_Turn_Again_Counter_Max
       4  Circle_Turn_Again_Prevent_Flag
       4  Circle_Turn_Count
       4  Circle_Turn_Count2
       4  Circle_Turn_Old_Flag
       4  Circle_inductor_Max
       4  Circle_inductor_Max2
       4  Circle_inductor_Mid
       4  Circle_inductor_Mid2
       4  Circle_inductor_Min
       4  Circle_inductor_Min2
     128  Hall
     498  Inductor_Check
    1374  Inductor_analyse
      16  Position_transit
       4  Rate_Count
       4  Rate_Flag
       4  RefAd
     200  Road_Remember
     200  Road_Remember2
       4  Slope_AD_1
     338  Small_S
       4  Stop_Flag
       4  Stop_OK
       4  Stop_Plan_Flag
       4  Stop_ms
       4  StraightRoad
       4  StraightRoad2
       4  StraightRoad_Flag
       4  StraightRoad_Old
     700  Test_Huandao
     192  Test_RoadInfo
     316  Test_RoadInfo_Shuzhi
       4  WindingRoad
       4  WindingRoad_Flag
       4  WindingRoad_Left
       4  WindingRoad_Left_Flag
       4  WindingRoad_Right
       4  WindingRoad_Right_Flag
      14  abs_i
      52  ad_valu
       4  chazhi_old
       2  max_old
      20  max_v
       4  max_value
      20  min_v
       1  position
       4  position_back
       2  position_last
      20  sensor_to_one
       4  sensor_to_one_Huan

 
   912 bytes in section .bss
   209 bytes in section .data
   800 bytes in section .rodata
 3 872 bytes in section .text
 
 3 872 bytes of CODE  memory
   800 bytes of CONST memory
 1 121 bytes of DATA  memory

Errors: none
Warnings: 1
