###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        29/Jul/2018  11:48:07
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\三轮比赛\7.29-sc\user\C\XS_ZS.c
#    Command line =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\user\C\XS_ZS.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -lB
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -o
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\device\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\user\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\lib\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\coreSupport\ -On
#    List file    =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\XS_ZS.lst
#    Object file  =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\XS_ZS.o
#
###############################################################################

H:\智能车程序2018\三轮比赛\7.29-sc\user\C\XS_ZS.c
      1          #include "Variable.h"
      2          #include "common.h"
      3          #include "allHead.h"
      4          

   \                                 In section .bss, align 1
      5          char uart_flag = 0;
   \                     uart_flag:
   \   00000000                      DS8 1
      6          /*显示名称*/

   \                                 In section .text, align 2, keep-with-next
      7          void OLED_Inductor_Static(void)
      8          {
   \                     OLED_Inductor_Static: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
      9            OLED_DisplaytinyStr(1, 0, "Righ:");
   \   00000002   0x....             LDR      R2,??DataTable4
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       OLED_DisplaytinyStr
     10            OLED_DisplaytinyStr(1, 1, "Midd:");
   \   0000000C   0x....             LDR      R2,??DataTable4_1
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       OLED_DisplaytinyStr
     11            OLED_DisplaytinyStr(1, 2, "Left:");
   \   00000016   0x....             LDR      R2,??DataTable4_2
   \   00000018   0x2102             MOVS     R1,#+2
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       OLED_DisplaytinyStr
     12            OLED_DisplaytinyStr(1, 4, "Ri_V:");
   \   00000020   0x....             LDR      R2,??DataTable4_3
   \   00000022   0x2104             MOVS     R1,#+4
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       OLED_DisplaytinyStr
     13            OLED_DisplaytinyStr(1, 5, "Le_V:");
   \   0000002A   0x....             LDR      R2,??DataTable4_4
   \   0000002C   0x2105             MOVS     R1,#+5
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0x.... 0x....      BL       OLED_DisplaytinyStr
     14            OLED_DisplaytinyStr(1, 7, "Chzh:");
   \   00000034   0x....             LDR      R2,??DataTable4_5
   \   00000036   0x2107             MOVS     R1,#+7
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      BL       OLED_DisplaytinyStr
     15          }
   \   0000003E   0xBD01             POP      {R0,PC}          ;; return
     16          
     17          //显示数据动态

   \                                 In section .text, align 2, keep-with-next
     18          void OLED_Inductor_Dynamic(void)
     19          {
   \                     OLED_Inductor_Dynamic: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     20            /*----------比赛---------------------------*/  
     21            OLED_DisplayFloat(5,5,AD_inductor[0], 1); 
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x....             LDR      R0,??DataTable4_6
   \   00000006   0x6802             LDR      R2,[R0, #+0]
   \   00000008   0x2105             MOVS     R1,#+5
   \   0000000A   0x2005             MOVS     R0,#+5
   \   0000000C   0x.... 0x....      BL       OLED_DisplayFloat
     22            
     23            OLED_DisplayFloat(5,6,AD_inductor[1], 1); 
   \   00000010   0x2301             MOVS     R3,#+1
   \   00000012   0x....             LDR      R0,??DataTable4_6
   \   00000014   0x6842             LDR      R2,[R0, #+4]
   \   00000016   0x2106             MOVS     R1,#+6
   \   00000018   0x2005             MOVS     R0,#+5
   \   0000001A   0x.... 0x....      BL       OLED_DisplayFloat
     24            
     25            OLED_DisplayFloat(5,7,AD_inductor[2],1); 
   \   0000001E   0x2301             MOVS     R3,#+1
   \   00000020   0x....             LDR      R0,??DataTable4_6
   \   00000022   0x6882             LDR      R2,[R0, #+8]
   \   00000024   0x2107             MOVS     R1,#+7
   \   00000026   0x2005             MOVS     R0,#+5
   \   00000028   0x.... 0x....      BL       OLED_DisplayFloat
     26            
     27          
     28            OLED_DisplayFloat(60,5,AD_inductor[3], 1); 
   \   0000002C   0x2301             MOVS     R3,#+1
   \   0000002E   0x....             LDR      R0,??DataTable4_6
   \   00000030   0x68C2             LDR      R2,[R0, #+12]
   \   00000032   0x2105             MOVS     R1,#+5
   \   00000034   0x203C             MOVS     R0,#+60
   \   00000036   0x.... 0x....      BL       OLED_DisplayFloat
     29            
     30          
     31            OLED_DisplayFloat(60,6,AD_inductor[4], 1); 
   \   0000003A   0x2301             MOVS     R3,#+1
   \   0000003C   0x....             LDR      R0,??DataTable4_6
   \   0000003E   0x6902             LDR      R2,[R0, #+16]
   \   00000040   0x2106             MOVS     R1,#+6
   \   00000042   0x203C             MOVS     R0,#+60
   \   00000044   0x.... 0x....      BL       OLED_DisplayFloat
     32            
     33            OLED_Int16(60, 7, Chazhi);
   \   00000048   0x....             LDR      R0,??DataTable4_7
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x.... 0x....      BL       __aeabi_f2iz
   \   00000050   0x0002             MOVS     R2,R0
   \   00000052   0xB212             SXTH     R2,R2
   \   00000054   0x2107             MOVS     R1,#+7
   \   00000056   0x203C             MOVS     R0,#+60
   \   00000058   0x.... 0x....      BL       OLED_Int16
     34            OLED_Int16(60,7,gyr_angle_speed); 
   \   0000005C   0x....             LDR      R0,??DataTable5_11
   \   0000005E   0x6800             LDR      R0,[R0, #+0]
   \   00000060   0x.... 0x....      BL       __aeabi_f2iz
   \   00000064   0x0002             MOVS     R2,R0
   \   00000066   0xB212             SXTH     R2,R2
   \   00000068   0x2107             MOVS     R1,#+7
   \   0000006A   0x203C             MOVS     R0,#+60
   \   0000006C   0x.... 0x....      BL       OLED_Int16
     35          //  
     36            
     37            
     38            
     39          //  OLED_Int16(40, 0, AD_valu[0]);
     40          //  OLED_DisplayFloat(80,0,AD_inductor[0], 3); 
     41          //  
     42          //  OLED_Int16(40, 1, AD_valu[1]);
     43          //  OLED_DisplayFloat(80,1,AD_inductor[1], 3); 
     44          //  
     45          //  OLED_Int16(40, 2, AD_valu[2]);
     46          //  OLED_DisplayFloat(80,2,AD_inductor[2], 3); 
     47          //  
     48          //  OLED_Int16(40, 4, AD_valu[3]);
     49          //  OLED_DisplayFloat(80,4,AD_inductor[3], 3); 
     50          //  
     51          //  OLED_Int16(40, 5, AD_valu[4]);
     52          //  OLED_DisplayFloat(80,5,AD_inductor[4], 3); 
     53          //  
     54          //  OLED_DisplayFloat(60,6,Chazhi, 3); 
     55          /*
     56              OLED_Int16(2, 5, AD_valu[0]);
     57            OLED_DisplayFloat(35,5,AD_inductor[0], 1); 
     58            
     59            OLED_Int16(2, 6, AD_valu[1]);
     60            OLED_DisplayFloat(35,6,AD_inductor[1], 1); 
     61            
     62            OLED_Int16(2, 7, AD_valu[2]);
     63            OLED_DisplayFloat(35,7,AD_inductor[2],1); 
     64            
     65          //  OLED_Int16(75, 5, AD_valu[3]);
     66          //  OLED_DisplayFloat(75,5,speed_L, 1); 
     67            OLED_DisplayFloat(110,5,AD_inductor[3], 1); 
     68            
     69          //  OLED_Int16(75, 6, AD_valu[4]);
     70          //  OLED_DisplayFloat(75,6,speed_R, 1); 
     71            OLED_DisplayFloat(110,6,AD_inductor[4], 1); 
     72          //  
     73          //  OLED_DisplayFloat(60,7,Chazhi, 3); 
     74            OLED_Int16(75, 7, Chazhi);
     75            OLED_DisplayFloat(110,7,gyr_angle_speed, 3); 
     76          
     77            */
     78            
     79          //  OLED_DisplayFloat(1,7,Circle_Flag, 0); 
     80          //  OLED_DisplayFloat(1,7,angle, 0); 
     81          //  OLED_DisplayFloat(60,7,Chazhi_Rate, 3); 
     82          }
   \   00000070   0xBD01             POP      {R0,PC}          ;; return
     83          
     84          
     85          
     86          
     87          
     88          
     89          
     90          
     91          /*显示名称*/

   \                                 In section .text, align 2, keep-with-next
     92          void OLED_Speed_Static(void)
     93          {
   \                     OLED_Speed_Static: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
     94          //  OLED_DisplaytinyStr(1, 0, "Chzh:");
     95            OLED_DisplaytinyStr(1, 0, "ChBi:");
   \   00000002   0x....             LDR      R2,??DataTable4_8
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x2001             MOVS     R0,#+1
   \   00000008   0x.... 0x....      BL       OLED_DisplaytinyStr
     96            OLED_DisplaytinyStr(1, 1, "Angl:");
   \   0000000C   0x....             LDR      R2,??DataTable4_9
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       OLED_DisplaytinyStr
     97            OLED_DisplaytinyStr(1, 3, "S_L:");
   \   00000016   0x....             LDR      R2,??DataTable4_10
   \   00000018   0x2103             MOVS     R1,#+3
   \   0000001A   0x2001             MOVS     R0,#+1
   \   0000001C   0x.... 0x....      BL       OLED_DisplaytinyStr
     98            OLED_DisplaytinyStr(1, 4, "S_R:");
   \   00000020   0x....             LDR      R2,??DataTable4_11
   \   00000022   0x2104             MOVS     R1,#+4
   \   00000024   0x2001             MOVS     R0,#+1
   \   00000026   0x.... 0x....      BL       OLED_DisplaytinyStr
     99            
    100          //OLED_DisplaytinyStr(1, 5, "S_ZC:");
    101          //OLED_DisplaytinyStr(1, 7, "S_RC:");
    102          OLED_DisplaytinyStr(1, 7, "S:");
   \   0000002A   0x....             ADR      R2,??DataTable5_12  ;; 0x53, 0x3A, 0x00, 0x00
   \   0000002C   0x2107             MOVS     R1,#+7
   \   0000002E   0x2001             MOVS     R0,#+1
   \   00000030   0x.... 0x....      BL       OLED_DisplaytinyStr
    103          }
   \   00000034   0xBD01             POP      {R0,PC}          ;; return
    104          
    105          
    106          //显示数据

   \                                 In section .text, align 2, keep-with-next
    107          void OLED_Speed_Dynamic(void)
    108          {
   \                     OLED_Speed_Dynamic: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    109            
    110          //  OLED_DisplayFloat(40,1,wgy, 3);//255
    111          //  OLED_DisplayFloat(40,2,gy, 3);//-1
    112          //  OLED_DisplayFloat(40,3,gyro_y, 3);//-1哦了吗                                                                                                         
    113          ////  OLED_DisplayFloat(40,3,gyr_angle_speed, 3);
    114          ////  OLED_DisplayFloat(40,5,gyr_angle, 3);
    115          //  OLED_DisplayFloat(40,2,Speed_I_lntegral_L, 3);
    116          //  OLED_DisplayFloat(40,5,Speed_I_lntegral_R, 3);
    117          //  OLED_DisplayFloat(40,0,Chazhi, 3);   
    118          //    OLED_DisplayFloat(40,0,Chasu_Bili, 3);   
    119          //    OLED_DisplayFloat(40,1,angle, 3); 
    120          ////  
    121          //  OLED_DisplayFloat(40,1,Direction_Control_Output_L, 3); 
    122          //  OLED_DisplayFloat(40,2,Direction_Control_Output_R, 3); 
    123          //  OLED_DisplayFloat(40,1,speed_set_L, 3); 
    124          //  OLED_DisplayFloat(40,2,speed_set_R, 3);
    125          //  OLED_DisplayFloat(40,3,Speed_Error_L, 3); 
    126          //  OLED_DisplayFloat(40,4,Speed_Error_R, 3); 
    127          //  
    128                OLED_DisplayFloat(40,5,speed_L, 1); 
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x....             LDR      R0,??DataTable5
   \   00000006   0x6802             LDR      R2,[R0, #+0]
   \   00000008   0x2105             MOVS     R1,#+5
   \   0000000A   0x2028             MOVS     R0,#+40
   \   0000000C   0x.... 0x....      BL       OLED_DisplayFloat
    129            OLED_DisplayFloat(40,6,speed_R, 1); 
   \   00000010   0x2301             MOVS     R3,#+1
   \   00000012   0x....             LDR      R0,??DataTable5_13
   \   00000014   0x6802             LDR      R2,[R0, #+0]
   \   00000016   0x2106             MOVS     R1,#+6
   \   00000018   0x2028             MOVS     R0,#+40
   \   0000001A   0x.... 0x....      BL       OLED_DisplayFloat
    130          //    OLED_DisplayFloat(40,5,speed_set, 3); 
    131          //    OLED_DisplayFloat(40,6,Chazhi_Rate, 3); 
    132          
    133          
    134          }
   \   0000001E   0xBD01             POP      {R0,PC}          ;; return
    135          

   \                                 In section .text, align 2, keep-with-next
    136          void UART_Send(void)
    137          {
   \                     UART_Send: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    138               uart_flag++;     
   \   00000002   0x....             LDR      R0,??DataTable5_1
   \   00000004   0x7800             LDRB     R0,[R0, #+0]
   \   00000006   0x1C40             ADDS     R0,R0,#+1
   \   00000008   0x....             LDR      R1,??DataTable5_1
   \   0000000A   0x7008             STRB     R0,[R1, #+0]
    139              if(uart_flag ==1)
   \   0000000C   0x....             LDR      R0,??DataTable5_1
   \   0000000E   0x7800             LDRB     R0,[R0, #+0]
   \   00000010   0x2801             CMP      R0,#+1
   \   00000012   0xD10C             BNE      ??UART_Send_0
    140              {   
    141                 uart_flag = 0;
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x....             LDR      R1,??DataTable5_1
   \   00000018   0x7008             STRB     R0,[R1, #+0]
    142          ///////////////////////////陀螺仪////////////////////////////////////////////////////////////////////
    143          //        UART_SendFloat(wgz,1);  
    144          //        UART_SendFloat(gz,1);  
    145          //        UART_SendFloat(gyro_z,1);  
    146          //        UART_SendFloat(gyr_offset__z_average,1);  
    147          //        UART_SendFloat(gyr_angle_speed,1);  
    148          //        UART_SendFloat(gyr_angle_speed_static,1);  
    149          //        UART_SendFloat(gyr_angle,1); 
    150                 
    151          //        UART_SendFloat(gyro_x,1);  
    152          //        UART_SendFloat(gyr_offset__x_average,1); 
    153          //        UART_SendFloat(gyr_angle_speed_up,1);  
    154          //        UART_SendFloat(gyr_angle_up,1); 
    155          //          UART_Send_String("................\r\n");
    156          ///////////////////////////电感////////////////////////////////////////////////////////////////////
    157          
    158          // UART_Send_String(".........实际电感值.......\r\n");      
    159          //     for(int i = 0;i < 3;i++)
    160          //    {
    161          //         UART_SendFloat(AD_valu[i],1);
    162          ////            UART_SendFloat(AD_inductor[i],1);  
    163          
    164          //    }
    165          // UART_Send_String("........归一化电感值........\r\n");
    166          //
    167          //       for(int i = 0;i < 5;i++)
    168          //    {
    169          //      UART_SendFloat(AD_inductor[i],1);  
    170          //   }
    171          //
    172          //         UART_SendFloat(position,1);
    173          //
    174          //             UART_SendFloat(Chazhi,1);
    175          //           UART_Send_String("................\r\n");
    176          
    177          //             UART_SendFloat(Speed_I_lntegral_L,1);
    178          //             UART_SendFloat(Speed_I_lntegral_R,1);
    179          //             UART_SendFloat(Chazhi_Rate,1);
    180          //             UART_SendFloat(angle,1);
    181          //                            UART_SendFloat(position,1);
    182          
    183          //          UART_Send_String("................\r\n");
    184          //////     UART_Send_String("差值，速度设定，速度\r\n");
    185               UART_SendFloat(speed_L,1);
   \   0000001A   0x2101             MOVS     R1,#+1
   \   0000001C   0x....             LDR      R0,??DataTable5
   \   0000001E   0x6800             LDR      R0,[R0, #+0]
   \   00000020   0x.... 0x....      BL       UART_SendFloat
    186               UART_SendFloat(speed_R,1);
   \   00000024   0x2101             MOVS     R1,#+1
   \   00000026   0x....             LDR      R0,??DataTable5_13
   \   00000028   0x6800             LDR      R0,[R0, #+0]
   \   0000002A   0x.... 0x....      BL       UART_SendFloat
    187          //     UART_SendFloat(speed_set,1);
    188                 
    189          //     UART_SendFloat(Motor_Out_R_Temp,1);
    190          //     UART_SendFloat(speed_R,1);
    191          //////     UART_Send_String("速度偏差，电机输出\r\n");
    192          //     UART_SendFloat(Speed_Error_L,1);     
    193          //     UART_SendFloat(Speed_Error_R,1);
    194          //     UART_SendFloat(Motor_Out_L,1);
    195          //     UART_SendFloat(Motor_Out_R,1);
    196          //     UART_SendFloat(speed_car,1);
    197          //     UART_SendFloat(E_speed,1);
    198          //     UART_SendFloat(Speed_Control_Output,1);
    199          //    }      
    200          //         UART_Send_String("................\r\n");
    201          
    202              //    for(i = 0;i < 3;i ++)
    203          //    {
    204          //      UART_SendFloat(AD_valu[i],1);
    205          //    }
    206              
    207          //    UART_SendFloat(Direction_Control_Output,1);
    208          //    
    209          //    
    210             
    211          //    for(i = 0;i < 2;i ++)
    212          //    {
    213          //      UART_SendFloat(Position_transit[i],1);
    214          //    }    
    215          //    
    216          //    for(i = 0;i < 3;i ++)
    217          //    {
    218          //      UART_SendFloat(AD_inductor[i],1);
    219          //    }
    220          
    221              
    222          
    223              } 
    224          }
   \                     ??UART_Send_0: (+1)
   \   0000002E   0xBD01             POP      {R0,PC}          ;; return
    225          

   \                                 In section .text, align 2, keep-with-next
    226          void KEY(void)
    227          {
   \                     KEY: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
    228              switch (KEY_Scan())
   \   00000002   0x.... 0x....      BL       KEY_Scan
   \   00000006   0x2801             CMP      R0,#+1
   \   00000008   0xD00A             BEQ      ??KEY_0
   \   0000000A   0xD200             BCS      .+4
   \   0000000C   0xE0E1             B        ??KEY_1
   \   0000000E   0x2803             CMP      R0,#+3
   \   00000010   0xD061             BEQ      ??KEY_2
   \   00000012   0xD333             BCC      ??KEY_3
   \   00000014   0x2805             CMP      R0,#+5
   \   00000016   0xD100             BNE      .+4
   \   00000018   0xE0C3             B        ??KEY_4
   \   0000001A   0xD200             BCS      .+4
   \   0000001C   0xE08F             B        ??KEY_5
   \   0000001E   0xE0D8             B        ??KEY_1
    229          {
    230              case 1: /* ------------------------------ 上 */
    231                  KEY_sta = !KEY_sta;//控制状态OLED是否更新
   \                     ??KEY_0: (+1)
   \   00000020   0x....             LDR      R0,??DataTable5_10
   \   00000022   0x7800             LDRB     R0,[R0, #+0]
   \   00000024   0x2800             CMP      R0,#+0
   \   00000026   0xD103             BNE      ??KEY_6
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x....             LDR      R1,??DataTable5_10
   \   0000002C   0x7008             STRB     R0,[R1, #+0]
   \   0000002E   0xE002             B        ??KEY_7
   \                     ??KEY_6: (+1)
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x....             LDR      R1,??DataTable5_10
   \   00000034   0x7008             STRB     R0,[R1, #+0]
    232                  switch (menuSelect)
   \                     ??KEY_7: (+1)
   \   00000036   0x....             LDR      R0,??DataTable5_14
   \   00000038   0x7800             LDRB     R0,[R0, #+0]
   \   0000003A   0x2801             CMP      R0,#+1
   \   0000003C   0xD004             BEQ      ??KEY_8
   \   0000003E   0xD31C             BCC      ??KEY_9
   \   00000040   0x2803             CMP      R0,#+3
   \   00000042   0xD012             BEQ      ??KEY_10
   \   00000044   0xD309             BCC      ??KEY_11
   \   00000046   0xE018             B        ??KEY_9
    233                  {
    234                   
    235                  case MENU:
    236                      Chasu_Bili += 1;
   \                     ??KEY_8: (+1)
   \   00000048   0x....             LDR      R0,??DataTable5_6
   \   0000004A   0x6801             LDR      R1,[R0, #+0]
   \   0000004C   0x20FE             MOVS     R0,#+254
   \   0000004E   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000050   0x.... 0x....      BL       __aeabi_fadd
   \   00000054   0x....             LDR      R1,??DataTable5_6
   \   00000056   0x6008             STR      R0,[R1, #+0]
    237                      break;
   \   00000058   0xE00F             B        ??KEY_12
    238          
    239                  case MENU_1:
    240                      angle += 10;
   \                     ??KEY_11: (+1)
   \   0000005A   0x....             LDR      R0,??DataTable5_7
   \   0000005C   0x6801             LDR      R1,[R0, #+0]
   \   0000005E   0x....             LDR      R0,??DataTable5_2  ;; 0x41200000
   \   00000060   0x.... 0x....      BL       __aeabi_fadd
   \   00000064   0x....             LDR      R1,??DataTable5_7
   \   00000066   0x6008             STR      R0,[R1, #+0]
    241                      break;
   \   00000068   0xE007             B        ??KEY_12
    242                      
    243                      case MENU_2:
    244                      speed_set += 10;
   \                     ??KEY_10: (+1)
   \   0000006A   0x....             LDR      R0,??DataTable5_9
   \   0000006C   0x6801             LDR      R1,[R0, #+0]
   \   0000006E   0x....             LDR      R0,??DataTable5_2  ;; 0x41200000
   \   00000070   0x.... 0x....      BL       __aeabi_fadd
   \   00000074   0x....             LDR      R1,??DataTable5_9
   \   00000076   0x6008             STR      R0,[R1, #+0]
    245                      break;
   \   00000078   0xE7FF             B        ??KEY_12
    246                   
    247          
    248          
    249                  default :
    250                      break;
    251                  }
    252                  break;
   \                     ??KEY_9: (+1)
   \                     ??KEY_12: (+1)
   \   0000007A   0xE0AA             B        ??KEY_13
    253              case 2: /* ------------------------------ 下 */
    254                  KEY_sta = !KEY_sta;//控制状态OLED是否更新
   \                     ??KEY_3: (+1)
   \   0000007C   0x....             LDR      R0,??DataTable5_10
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD103             BNE      ??KEY_14
   \   00000084   0x2001             MOVS     R0,#+1
   \   00000086   0x....             LDR      R1,??DataTable5_10
   \   00000088   0x7008             STRB     R0,[R1, #+0]
   \   0000008A   0xE002             B        ??KEY_15
   \                     ??KEY_14: (+1)
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x....             LDR      R1,??DataTable5_10
   \   00000090   0x7008             STRB     R0,[R1, #+0]
    255                  switch (menuSelect)
   \                     ??KEY_15: (+1)
   \   00000092   0x....             LDR      R0,??DataTable5_14
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x2801             CMP      R0,#+1
   \   00000098   0xD004             BEQ      ??KEY_16
   \   0000009A   0xD31B             BCC      ??KEY_17
   \   0000009C   0x2803             CMP      R0,#+3
   \   0000009E   0xD011             BEQ      ??KEY_18
   \   000000A0   0xD308             BCC      ??KEY_19
   \   000000A2   0xE017             B        ??KEY_17
    256                  {
    257                 case MENU:
    258                      Chasu_Bili -= 1;
   \                     ??KEY_16: (+1)
   \   000000A4   0x....             LDR      R0,??DataTable5_6
   \   000000A6   0x6801             LDR      R1,[R0, #+0]
   \   000000A8   0x....             LDR      R0,??DataTable5_8  ;; 0xbf800000
   \   000000AA   0x.... 0x....      BL       __aeabi_fadd
   \   000000AE   0x....             LDR      R1,??DataTable5_6
   \   000000B0   0x6008             STR      R0,[R1, #+0]
    259                      break;
   \   000000B2   0xE00F             B        ??KEY_20
    260          
    261                  case MENU_1:
    262                      angle -= 10;
   \                     ??KEY_19: (+1)
   \   000000B4   0x....             LDR      R0,??DataTable5_7
   \   000000B6   0x6801             LDR      R1,[R0, #+0]
   \   000000B8   0x....             LDR      R0,??DataTable5_3  ;; 0xc1200000
   \   000000BA   0x.... 0x....      BL       __aeabi_fadd
   \   000000BE   0x....             LDR      R1,??DataTable5_7
   \   000000C0   0x6008             STR      R0,[R1, #+0]
    263                      break;
   \   000000C2   0xE007             B        ??KEY_20
    264                      
    265                 case MENU_2:
    266                      speed_set -= 10;
   \                     ??KEY_18: (+1)
   \   000000C4   0x....             LDR      R0,??DataTable5_9
   \   000000C6   0x6801             LDR      R1,[R0, #+0]
   \   000000C8   0x....             LDR      R0,??DataTable5_3  ;; 0xc1200000
   \   000000CA   0x.... 0x....      BL       __aeabi_fadd
   \   000000CE   0x....             LDR      R1,??DataTable5_9
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    267                      break;
   \   000000D2   0xE7FF             B        ??KEY_20
    268                   
    269          
    270          
    271                  default :
    272                      break;
    273                  }
    274                          break;
   \                     ??KEY_17: (+1)
   \                     ??KEY_20: (+1)
   \   000000D4   0xE07D             B        ??KEY_13
    275          
    276                  
    277                   case 3: /* ------------------------------ 下 */
    278                  KEY_sta = !KEY_sta;//控制状态OLED是否更新
   \                     ??KEY_2: (+1)
   \   000000D6   0x....             LDR      R0,??DataTable5_10
   \   000000D8   0x7800             LDRB     R0,[R0, #+0]
   \   000000DA   0x2800             CMP      R0,#+0
   \   000000DC   0xD103             BNE      ??KEY_21
   \   000000DE   0x2001             MOVS     R0,#+1
   \   000000E0   0x....             LDR      R1,??DataTable5_10
   \   000000E2   0x7008             STRB     R0,[R1, #+0]
   \   000000E4   0xE002             B        ??KEY_22
   \                     ??KEY_21: (+1)
   \   000000E6   0x2000             MOVS     R0,#+0
   \   000000E8   0x....             LDR      R1,??DataTable5_10
   \   000000EA   0x7008             STRB     R0,[R1, #+0]
    279                  switch (menuSelect)
   \                     ??KEY_22: (+1)
   \   000000EC   0x....             LDR      R0,??DataTable5_14
   \   000000EE   0x7800             LDRB     R0,[R0, #+0]
   \   000000F0   0x2801             CMP      R0,#+1
   \   000000F2   0xD004             BEQ      ??KEY_23
   \   000000F4   0xD322             BCC      ??KEY_24
   \   000000F6   0x2803             CMP      R0,#+3
   \   000000F8   0xD017             BEQ      ??KEY_25
   \   000000FA   0xD30D             BCC      ??KEY_26
   \   000000FC   0xE01E             B        ??KEY_24
    280                  {
    281                 case MENU:
    282                      Chasu_Bili += 0.1;
   \                     ??KEY_23: (+1)
   \   000000FE   0x....             LDR      R0,??DataTable5_6
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x.... 0x....      BL       __aeabi_f2d
   \   00000106   0x....             ADR      R2,??DataTable5_4
   \   00000108   0xCA0C             LDM      R2,{R2,R3}
   \   0000010A   0x.... 0x....      BL       __aeabi_dadd
   \   0000010E   0x.... 0x....      BL       __aeabi_d2f
   \   00000112   0x....             LDR      R1,??DataTable5_6
   \   00000114   0x6008             STR      R0,[R1, #+0]
    283                      break;
   \   00000116   0xE011             B        ??KEY_27
    284          
    285                  case MENU_1:
    286                      angle += 1;
   \                     ??KEY_26: (+1)
   \   00000118   0x....             LDR      R0,??DataTable5_7
   \   0000011A   0x6801             LDR      R1,[R0, #+0]
   \   0000011C   0x20FE             MOVS     R0,#+254
   \   0000011E   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000120   0x.... 0x....      BL       __aeabi_fadd
   \   00000124   0x....             LDR      R1,??DataTable5_7
   \   00000126   0x6008             STR      R0,[R1, #+0]
    287                      break;
   \   00000128   0xE008             B        ??KEY_27
    288                      
    289                   case MENU_2:
    290                      speed_set += 1;
   \                     ??KEY_25: (+1)
   \   0000012A   0x....             LDR      R0,??DataTable5_9
   \   0000012C   0x6801             LDR      R1,[R0, #+0]
   \   0000012E   0x20FE             MOVS     R0,#+254
   \   00000130   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000132   0x.... 0x....      BL       __aeabi_fadd
   \   00000136   0x....             LDR      R1,??DataTable5_9
   \   00000138   0x6008             STR      R0,[R1, #+0]
    291                      break;
   \   0000013A   0xE7FF             B        ??KEY_27
    292                   
    293                  default :
    294                      break;
    295                  }
    296                          break;
   \                     ??KEY_24: (+1)
   \                     ??KEY_27: (+1)
   \   0000013C   0xE049             B        ??KEY_13
    297          
    298                  
    299                    case 4: /* ------------------------------ 下 */
    300                  KEY_sta = !KEY_sta;//控制状态OLED是否更新
   \                     ??KEY_5: (+1)
   \   0000013E   0x....             LDR      R0,??DataTable5_10
   \   00000140   0x7800             LDRB     R0,[R0, #+0]
   \   00000142   0x2800             CMP      R0,#+0
   \   00000144   0xD103             BNE      ??KEY_28
   \   00000146   0x2001             MOVS     R0,#+1
   \   00000148   0x....             LDR      R1,??DataTable5_10
   \   0000014A   0x7008             STRB     R0,[R1, #+0]
   \   0000014C   0xE002             B        ??KEY_29
   \                     ??KEY_28: (+1)
   \   0000014E   0x2000             MOVS     R0,#+0
   \   00000150   0x....             LDR      R1,??DataTable5_10
   \   00000152   0x7008             STRB     R0,[R1, #+0]
    301                  switch (menuSelect)
   \                     ??KEY_29: (+1)
   \   00000154   0x....             LDR      R0,??DataTable5_14
   \   00000156   0x7800             LDRB     R0,[R0, #+0]
   \   00000158   0x2801             CMP      R0,#+1
   \   0000015A   0xD004             BEQ      ??KEY_30
   \   0000015C   0xD320             BCC      ??KEY_31
   \   0000015E   0x2803             CMP      R0,#+3
   \   00000160   0xD016             BEQ      ??KEY_32
   \   00000162   0xD30D             BCC      ??KEY_33
   \   00000164   0xE01C             B        ??KEY_31
    302                  {
    303                 case MENU:
    304                      Chasu_Bili -= 0.1;
   \                     ??KEY_30: (+1)
   \   00000166   0x....             LDR      R0,??DataTable5_6
   \   00000168   0x6800             LDR      R0,[R0, #+0]
   \   0000016A   0x.... 0x....      BL       __aeabi_f2d
   \   0000016E   0x....             ADR      R2,??DataTable5_5
   \   00000170   0xCA0C             LDM      R2,{R2,R3}
   \   00000172   0x.... 0x....      BL       __aeabi_dadd
   \   00000176   0x.... 0x....      BL       __aeabi_d2f
   \   0000017A   0x....             LDR      R1,??DataTable5_6
   \   0000017C   0x6008             STR      R0,[R1, #+0]
    305                      break;
   \   0000017E   0xE00F             B        ??KEY_34
    306          
    307                  case MENU_1:
    308                      angle -= 1;
   \                     ??KEY_33: (+1)
   \   00000180   0x....             LDR      R0,??DataTable5_7
   \   00000182   0x6801             LDR      R1,[R0, #+0]
   \   00000184   0x....             LDR      R0,??DataTable5_8  ;; 0xbf800000
   \   00000186   0x.... 0x....      BL       __aeabi_fadd
   \   0000018A   0x....             LDR      R1,??DataTable5_7
   \   0000018C   0x6008             STR      R0,[R1, #+0]
    309                      break;
   \   0000018E   0xE007             B        ??KEY_34
    310                      
    311                 case MENU_2:
    312                      speed_set -= 1;
   \                     ??KEY_32: (+1)
   \   00000190   0x....             LDR      R0,??DataTable5_9
   \   00000192   0x6801             LDR      R1,[R0, #+0]
   \   00000194   0x....             LDR      R0,??DataTable5_8  ;; 0xbf800000
   \   00000196   0x.... 0x....      BL       __aeabi_fadd
   \   0000019A   0x....             LDR      R1,??DataTable5_9
   \   0000019C   0x6008             STR      R0,[R1, #+0]
    313                      break;
   \   0000019E   0xE7FF             B        ??KEY_34
    314                   
    315                  default :
    316                      break;
    317                  }
    318                          break;
   \                     ??KEY_31: (+1)
   \                     ??KEY_34: (+1)
   \   000001A0   0xE017             B        ??KEY_13
    319          
    320                  
    321                  case 5: /* ------------------------------ 中 */
    322                  KEY_sta = !KEY_sta;
   \                     ??KEY_4: (+1)
   \   000001A2   0x....             LDR      R0,??DataTable5_10
   \   000001A4   0x7800             LDRB     R0,[R0, #+0]
   \   000001A6   0x2800             CMP      R0,#+0
   \   000001A8   0xD103             BNE      ??KEY_35
   \   000001AA   0x2001             MOVS     R0,#+1
   \   000001AC   0x....             LDR      R1,??DataTable5_10
   \   000001AE   0x7008             STRB     R0,[R1, #+0]
   \   000001B0   0xE002             B        ??KEY_36
   \                     ??KEY_35: (+1)
   \   000001B2   0x2000             MOVS     R0,#+0
   \   000001B4   0x....             LDR      R1,??DataTable5_10
   \   000001B6   0x7008             STRB     R0,[R1, #+0]
    323          //        KEY_menuChange = !KEY_menuChange;
    324                  if (++menuSelect > 3)//logo 和 菜单显示只一次
   \                     ??KEY_36: (+1)
   \   000001B8   0x....             LDR      R0,??DataTable5_14
   \   000001BA   0x7800             LDRB     R0,[R0, #+0]
   \   000001BC   0x1C40             ADDS     R0,R0,#+1
   \   000001BE   0x....             LDR      R1,??DataTable5_14
   \   000001C0   0x7008             STRB     R0,[R1, #+0]
   \   000001C2   0x....             LDR      R0,??DataTable5_14
   \   000001C4   0x7800             LDRB     R0,[R0, #+0]
   \   000001C6   0x2804             CMP      R0,#+4
   \   000001C8   0xDB02             BLT      ??KEY_37
    325                  {
    326                      menuSelect = MENU;
   \   000001CA   0x2001             MOVS     R0,#+1
   \   000001CC   0x....             LDR      R1,??DataTable5_14
   \   000001CE   0x7008             STRB     R0,[R1, #+0]
    327                  }
    328                  break;
   \                     ??KEY_37: (+1)
   \   000001D0   0xE7FF             B        ??KEY_13
    329          
    330              default :
    331                  break;
    332              }
    333              if(menuSelect ==MENU) 
   \                     ??KEY_1: (+1)
   \                     ??KEY_13: (+1)
   \   000001D2   0x....             LDR      R0,??DataTable5_14
   \   000001D4   0x7800             LDRB     R0,[R0, #+0]
   \   000001D6   0x2801             CMP      R0,#+1
   \   000001D8   0xD104             BNE      ??KEY_38
    334                    LED_1_ON
   \   000001DA   0x2100             MOVS     R1,#+0
   \   000001DC   0x2031             MOVS     R0,#+49
   \   000001DE   0x.... 0x....      BL       GpioSet
   \   000001E2   0xE003             B        ??KEY_39
    335          //        OLED_DisplaytinyStr(80, 0, "Ch");
    336              else
    337                   LED_1_OFF
   \                     ??KEY_38: (+1)
   \   000001E4   0x2101             MOVS     R1,#+1
   \   000001E6   0x2031             MOVS     R0,#+49
   \   000001E8   0x.... 0x....      BL       GpioSet
    338          //        OLED_DisplaytinyStr(80, 0, "No");
    339              
    340              if(menuSelect ==MENU_1) 
   \                     ??KEY_39: (+1)
   \   000001EC   0x....             LDR      R0,??DataTable5_14
   \   000001EE   0x7800             LDRB     R0,[R0, #+0]
   \   000001F0   0x2802             CMP      R0,#+2
   \   000001F2   0xD104             BNE      ??KEY_40
    341                          LED_2_ON
   \   000001F4   0x2100             MOVS     R1,#+0
   \   000001F6   0x2032             MOVS     R0,#+50
   \   000001F8   0x.... 0x....      BL       GpioSet
   \   000001FC   0xE003             B        ??KEY_41
    342          //        OLED_DisplaytinyStr(80, 1, "Ch");
    343              else
    344                         LED_2_OFF
   \                     ??KEY_40: (+1)
   \   000001FE   0x2101             MOVS     R1,#+1
   \   00000200   0x2032             MOVS     R0,#+50
   \   00000202   0x.... 0x....      BL       GpioSet
    345          //        OLED_DisplaytinyStr(80, 1, "No");
    346              
    347          //    if(menuSelect ==MENU_2) 
    348          ////                LED_3_ON
    349          ////        OLED_DisplaytinyStr(80, 7, "Ch");
    350          //    else
    351          //               LED_3_OFF
    352          //        OLED_DisplaytinyStr(80, 7, "No");
    353          
    354          }       
   \                     ??KEY_41: (+1)
   \   00000206   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x........         DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x........         DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x........         DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x........         DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x........         DC32     AD_inductor

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     Chazhi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x........         DC32     speed_L

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x........         DC32     uart_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x41200000         DC32     0x41200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0xC1200000         DC32     0xc1200000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x9999999A         DC32     0x9999999A,0x3FB99999
   \              0x3FB99999   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x9999999A         DC32     0x9999999A,0xBFB99999
   \              0xBFB99999   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x........         DC32     Chasu_Bili

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x........         DC32     angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     speed_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     KEY_sta

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     gyr_angle_speed

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x53 0x3A          DC8      0x53, 0x3A, 0x00, 0x00
   \              0x00 0x00    

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     speed_R

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     menuSelect

   \                                 In section .rodata, align 4
   \                     ?_0:
   \   00000000   0x52 0x69          DC8 "Righ:"
   \              0x67 0x68    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_1:
   \   00000000   0x4D 0x69          DC8 "Midd:"
   \              0x64 0x64    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_2:
   \   00000000   0x4C 0x65          DC8 "Left:"
   \              0x66 0x74    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_3:
   \   00000000   0x52 0x69          DC8 "Ri_V:"
   \              0x5F 0x56    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_4:
   \   00000000   0x4C 0x65          DC8 "Le_V:"
   \              0x5F 0x56    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_5:
   \   00000000   0x43 0x68          DC8 "Chzh:"
   \              0x7A 0x68    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_6:
   \   00000000   0x43 0x68          DC8 "ChBi:"
   \              0x42 0x69    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_7:
   \   00000000   0x41 0x6E          DC8 "Angl:"
   \              0x67 0x6C    
   \              0x3A 0x00    
   \   00000006   0x00 0x00          DC8 0, 0

   \                                 In section .rodata, align 4
   \                     ?_8:
   \   00000000   0x53 0x5F          DC8 "S_L:"
   \              0x4C 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \                     ?_9:
   \   00000000   0x53 0x5F          DC8 "S_R:"
   \              0x52 0x3A    
   \              0x00         
   \   00000005   0x00 0x00          DC8 0, 0, 0
   \              0x00         

   \                                 In section .rodata, align 4
   \   00000000   0x53 0x3A          DC8 "S:"
   \              0x00         
   \   00000003   0x00               DC8 0
    355                  
    356                  
    357                  
    358                  
    359                  
    360                  
    361                  
    362                  
    363                  
    364                  
    365                  
    366          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   KEY
         8   -> GpioSet
         8   -> KEY_Scan
         8   -> __aeabi_d2f
         8   -> __aeabi_dadd
         8   -> __aeabi_f2d
         8   -> __aeabi_fadd
       8   OLED_Inductor_Dynamic
         8   -> OLED_DisplayFloat
         8   -> OLED_Int16
         8   -> __aeabi_f2iz
       8   OLED_Inductor_Static
         8   -> OLED_DisplaytinyStr
       8   OLED_Speed_Dynamic
         8   -> OLED_DisplayFloat
       8   OLED_Speed_Static
         8   -> OLED_DisplaytinyStr
       8   UART_Send
         8   -> UART_SendFloat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_2
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_2
       4  ??DataTable5_3
       8  ??DataTable5_4
       8  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       8  ?_0
       8  ?_1
       4  ?_10
       8  ?_2
       8  ?_3
       8  ?_4
       8  ?_5
       8  ?_6
       8  ?_7
       8  ?_8
       8  ?_9
     520  KEY
     114  OLED_Inductor_Dynamic
      64  OLED_Inductor_Static
      32  OLED_Speed_Dynamic
      54  OLED_Speed_Static
      48  UART_Send
       1  uart_flag

 
   1 byte  in section .bss
  84 bytes in section .rodata
 948 bytes in section .text
 
 948 bytes of CODE  memory
  84 bytes of CONST memory
   1 byte  of DATA  memory

Errors: none
Warnings: 2
