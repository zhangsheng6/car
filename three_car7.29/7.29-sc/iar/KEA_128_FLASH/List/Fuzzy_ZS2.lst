###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        29/Jul/2018  00:37:57
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\三轮比赛\7.29-sc\user\C\Fuzzy_ZS2.c
#    Command line =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\user\C\Fuzzy_ZS2.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -lB
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -o
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\device\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\user\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\lib\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\coreSupport\ -On
#    List file    =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\Fuzzy_ZS2.lst
#    Object file  =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\Fuzzy_ZS2.o
#
###############################################################################

H:\智能车程序2018\三轮比赛\7.29-sc\user\C\Fuzzy_ZS2.c
      1          #include "Fuzzy_ZS2.h"
      2          #include "allHead.h"
      3          //extern float speed_set; 
      4          //二维模糊控制系统
      5          //输入：差值，速度，陀螺仪x
      6          //输出：方向P,D,陀螺仪D
      7          //速度=左加右/2
      8          
      9          //输入小车的实际速度与陀螺仪Y轴数据，控制输出方向P
     10          //float speed_set_Low,speed_set_Mid,speed_set_High;
     11          //float  Angle_E[3]  = {5,10,15};   //小车速度
     12          //float  Gyro_E[3] = {10,15,30};	   //角速度数据
     13          //float  Shell_P[3]  = {10,15,40};  //外层比例控制系数
     14          //隶属语言值             0           1         
     15          //                      20           40        60
     16          //float Speed_E[3]={speed_set-50,speed_set-30,speed_set-10 };   //小车速度

   \                                 In section .data, align 4
     17          float Speed_E[5]={30,40,50,60,70 };   //小车速度
   \                     Speed_E:
   \   00000000   0x41F00000         DC32 41F00000H, 42200000H, 42480000H, 42700000H, 428C0000H
   \              0x42200000   
   \              0x42480000   
   \              0x42700000   
   \              0x428C0000   

   \                                 In section .data, align 4
     18          float Chazhi_E[5]={30,45,60,75,95};	   //角速度数据
   \                     Chazhi_E:
   \   00000000   0x41F00000         DC32 41F00000H, 42340000H, 42700000H, 42960000H, 42BE0000H
   \              0x42340000   
   \              0x42700000   
   \              0x42960000   
   \              0x42BE0000   

   \                                 In section .data, align 4
     19          float Shell_P[5]={180,220,260,300,380};  //外层比例控制系数
   \                     Shell_P:
   \   00000000   0x43340000         DC32 43340000H, 435C0000H, 43820000H, 43960000H, 43BE0000H
   \              0x435C0000   
   \              0x43820000   
   \              0x43960000   
   \              0x43BE0000   
     20          
     21          //由于所测数据均为单向数据，故规则表拟定为单向
     22          //  int rule2[3][3]=
     23          //        {       
     24          //          {2,1,0},
     25          //          {1,1,0},
     26          //          {0,0,0},    
     27          //        };
     28          //          {0,1,2},              //30
     29          //          {1,1,2},              //45
     30          //          {2,2,2},              //90

   \                                 In section .data, align 4
     31           int rule2[5][5]=
   \                     rule2:
   \   00000000   0x00000000         DC32 0, 1, 2, 3, 4, 1, 1, 2, 3, 4, 2, 2, 3, 3, 4, 3, 3, 3, 4, 4, 4, 4
   \              0x00000001   
   \              0x00000002   
   \              0x00000003   
   \              0x00000004   
   \              0x00000001   
   \              0x00000001   
   \              0x00000002   
   \              0x00000003   
   \              0x00000004   
   \              0x00000002   
   \              0x00000002   
   \              0x00000003   
   \              0x00000003   
   \              0x00000004   
   \              0x00000003   
   \              0x00000003   
   \              0x00000003   
   \              0x00000004   
   \              0x00000004   
   \              0x00000004   
   \              0x00000004   
   \   00000058   0x00000004         DC32 4, 4, 4
   \              0x00000004   
   \              0x00000004   
     32                  {
     33          //  速度  10 20 30 40 60   
     34          //                             差值      
     35                    {0,1,2,3 ,4},              //30
     36                    {1,1,2,3 ,4},              //45
     37                    {2,2,3,3 ,4},              //60
     38                    {3,3,3,4 ,4},              //75
     39                    {4,4,4,4 ,4},              //90
     40                    
     41                    
     42                    
     43                  };                    
     44          
     45          
     46           
     47          //float Fuzzy_Shell_P(float E_angle,float E_gyro)

   \                                 In section .text, align 4, keep-with-next
     48          float Fuzzy_Shell_P(float speed_car,float Chazhi)
     49          {
   \                     Fuzzy_Shell_P: (+1)
   \   00000000   0xB5F3             PUSH     {R0,R1,R4-R7,LR}
   \   00000002   0xB08D             SUB      SP,SP,#+52
     50          //  float  angle_err=0,gyro_err=0;
     51            float  Speed_abs=0,Chazhi_abs=0;
   \   00000004   0x2000             MOVS     R0,#+0
   \   00000006   0x900B             STR      R0,[SP, #+44]
   \   00000008   0x2700             MOVS     R7,#+0
     52            int speed_N=0,Chazhi_N=0; //隶属语言值，该语言值为X轴档位
   \   0000000A   0x2600             MOVS     R6,#+0
   \   0000000C   0x2500             MOVS     R5,#+0
     53            int  num=0;
   \   0000000E   0x2400             MOVS     R4,#+0
     54            float fuzzy_P=0;
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x9005             STR      R0,[SP, #+20]
     55             //记录隶属函数的输出值
     56            float  Speed_Fzy[2] ={0.0,0.0};
   \   00000014   0xA803             ADD      R0,SP,#+12
   \   00000016   0x2100             MOVS     R1,#+0
   \   00000018   0x2200             MOVS     R2,#+0
   \   0000001A   0xC006             STM      R0!,{R1,R2}
   \   0000001C   0x3808             SUBS     R0,R0,#+8
     57            float  Chazhi_Fzy[2] ={0.0,0.0};
   \   0000001E   0xA801             ADD      R0,SP,#+4
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x2200             MOVS     R2,#+0
   \   00000024   0xC006             STM      R0!,{R1,R2}
   \   00000026   0x3808             SUBS     R0,R0,#+8
     58          
     59            float  Shell_P_Fzy[5] ={0.0,0.0,0.0,0.0,0.0};
   \   00000028   0xA806             ADD      R0,SP,#+24
   \   0000002A   0x2114             MOVS     R1,#+20
   \   0000002C   0x.... 0x....      BL       __aeabi_memclr4
     60            // /*----- 数据更新-----*/
     61            // Shell_P[1]  = P_Direction_low;
     62            // Shell_P[2]  = P_Direction_high;
     63          
     64          
     65            //将数据取绝对值，数据的正负仅代表左右	
     66          //	ABS_val(E_angle,angle_err);
     67          //	ABS_val(E_gyro,gyro_err);
     68            Chazhi_abs=abs_f(Chazhi);
   \   00000030   0x980E             LDR      R0,[SP, #+56]
   \   00000032   0x.... 0x....      BL       abs_f
   \   00000036   0x0007             MOVS     R7,R0
     69          //  Speed_abs=abs_f(speed_car);
     70            /*-----   Angle 隶属函数描述-----*/
     71          	if(speed_car<Speed_E[0]) //速度<0档
   \   00000038   0x980D             LDR      R0,[SP, #+52]
   \   0000003A   0x49CB             LDR      R1,??Fuzzy_Shell_P_0
   \   0000003C   0x6809             LDR      R1,[R1, #+0]
   \   0000003E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000042   0xD205             BCS      ??Fuzzy_Shell_P_1
     72          	{
     73          		Speed_Fzy[0] =1.0;//速度低的隶属度为1
   \   00000044   0x20FE             MOVS     R0,#+254
   \   00000046   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000048   0x9003             STR      R0,[SP, #+12]
     74          		speed_N = 0;//速度20
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x0006             MOVS     R6,R0
   \   0000004E   0xE06B             B        ??Fuzzy_Shell_P_2
     75          	}
     76          	else if(speed_car<Speed_E[1])  //0档<速度<1档
   \                     ??Fuzzy_Shell_P_1: (+1)
   \   00000050   0x980D             LDR      R0,[SP, #+52]
   \   00000052   0x49C5             LDR      R1,??Fuzzy_Shell_P_0
   \   00000054   0x6849             LDR      R1,[R1, #+4]
   \   00000056   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000005A   0xD213             BCS      ??Fuzzy_Shell_P_3
     77          	{//  为速度低的隶属度=1挡速度-速度/1挡速度-0挡速度
     78          		Speed_Fzy[0] = (Speed_E[1]-speed_car)/(Speed_E[1]-Speed_E[0]);
   \   0000005C   0x48C2             LDR      R0,??Fuzzy_Shell_P_0
   \   0000005E   0x6840             LDR      R0,[R0, #+4]
   \   00000060   0x990D             LDR      R1,[SP, #+52]
   \   00000062   0x.... 0x....      BL       __aeabi_fsub
   \   00000066   0x9000             STR      R0,[SP, #+0]
   \   00000068   0x48BF             LDR      R0,??Fuzzy_Shell_P_0
   \   0000006A   0x6840             LDR      R0,[R0, #+4]
   \   0000006C   0x49BE             LDR      R1,??Fuzzy_Shell_P_0
   \   0000006E   0x6809             LDR      R1,[R1, #+0]
   \   00000070   0x.... 0x....      BL       __aeabi_fsub
   \   00000074   0x0001             MOVS     R1,R0
   \   00000076   0x9800             LDR      R0,[SP, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fdiv
   \   0000007C   0x9003             STR      R0,[SP, #+12]
     79          		speed_N = 0;//速度20
   \   0000007E   0x2000             MOVS     R0,#+0
   \   00000080   0x0006             MOVS     R6,R0
   \   00000082   0xE051             B        ??Fuzzy_Shell_P_2
     80          	}
     81          	else if(speed_car<Speed_E[2])  //1档<速度<2档
   \                     ??Fuzzy_Shell_P_3: (+1)
   \   00000084   0x980D             LDR      R0,[SP, #+52]
   \   00000086   0x49B8             LDR      R1,??Fuzzy_Shell_P_0
   \   00000088   0x6889             LDR      R1,[R1, #+8]
   \   0000008A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000008E   0xD213             BCS      ??Fuzzy_Shell_P_4
     82          	{//  为速度低(40)的隶属度=60-速度/60-40
     83          		Speed_Fzy[0] = (Speed_E[2]-speed_car)/(Speed_E[2]-Speed_E[1]);
   \   00000090   0x48B5             LDR      R0,??Fuzzy_Shell_P_0
   \   00000092   0x6880             LDR      R0,[R0, #+8]
   \   00000094   0x990D             LDR      R1,[SP, #+52]
   \   00000096   0x.... 0x....      BL       __aeabi_fsub
   \   0000009A   0x9000             STR      R0,[SP, #+0]
   \   0000009C   0x48B2             LDR      R0,??Fuzzy_Shell_P_0
   \   0000009E   0x6880             LDR      R0,[R0, #+8]
   \   000000A0   0x49B1             LDR      R1,??Fuzzy_Shell_P_0
   \   000000A2   0x6849             LDR      R1,[R1, #+4]
   \   000000A4   0x.... 0x....      BL       __aeabi_fsub
   \   000000A8   0x0001             MOVS     R1,R0
   \   000000AA   0x9800             LDR      R0,[SP, #+0]
   \   000000AC   0x.... 0x....      BL       __aeabi_fdiv
   \   000000B0   0x9003             STR      R0,[SP, #+12]
     84          		speed_N = 1;//速度40
   \   000000B2   0x2001             MOVS     R0,#+1
   \   000000B4   0x0006             MOVS     R6,R0
   \   000000B6   0xE037             B        ??Fuzzy_Shell_P_2
     85          	}
     86                  
     87                  else if(speed_car<Speed_E[3])  //2档<速度<3档
   \                     ??Fuzzy_Shell_P_4: (+1)
   \   000000B8   0x980D             LDR      R0,[SP, #+52]
   \   000000BA   0x49AB             LDR      R1,??Fuzzy_Shell_P_0
   \   000000BC   0x68C9             LDR      R1,[R1, #+12]
   \   000000BE   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000C2   0xD213             BCS      ??Fuzzy_Shell_P_5
     88          	{//  为速度低(40)的隶属度=60-速度/60-40
     89          		Speed_Fzy[0] = (Speed_E[3]-speed_car)/(Speed_E[3]-Speed_E[2]);
   \   000000C4   0x48A8             LDR      R0,??Fuzzy_Shell_P_0
   \   000000C6   0x68C0             LDR      R0,[R0, #+12]
   \   000000C8   0x990D             LDR      R1,[SP, #+52]
   \   000000CA   0x.... 0x....      BL       __aeabi_fsub
   \   000000CE   0x9000             STR      R0,[SP, #+0]
   \   000000D0   0x48A5             LDR      R0,??Fuzzy_Shell_P_0
   \   000000D2   0x68C0             LDR      R0,[R0, #+12]
   \   000000D4   0x49A4             LDR      R1,??Fuzzy_Shell_P_0
   \   000000D6   0x6889             LDR      R1,[R1, #+8]
   \   000000D8   0x.... 0x....      BL       __aeabi_fsub
   \   000000DC   0x0001             MOVS     R1,R0
   \   000000DE   0x9800             LDR      R0,[SP, #+0]
   \   000000E0   0x.... 0x....      BL       __aeabi_fdiv
   \   000000E4   0x9003             STR      R0,[SP, #+12]
     90          		speed_N = 2;//速度40
   \   000000E6   0x2002             MOVS     R0,#+2
   \   000000E8   0x0006             MOVS     R6,R0
   \   000000EA   0xE01D             B        ??Fuzzy_Shell_P_2
     91          	}
     92                  
     93                   else if(speed_car<Speed_E[4])  //3档<速度<4档
   \                     ??Fuzzy_Shell_P_5: (+1)
   \   000000EC   0x980D             LDR      R0,[SP, #+52]
   \   000000EE   0x499E             LDR      R1,??Fuzzy_Shell_P_0
   \   000000F0   0x6909             LDR      R1,[R1, #+16]
   \   000000F2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000F6   0xD213             BCS      ??Fuzzy_Shell_P_6
     94          	{//  为速度低(40)的隶属度=60-速度/60-40
     95          		Speed_Fzy[0] = (Speed_E[4]-speed_car)/(Speed_E[4]-Speed_E[3]);
   \   000000F8   0x489B             LDR      R0,??Fuzzy_Shell_P_0
   \   000000FA   0x6900             LDR      R0,[R0, #+16]
   \   000000FC   0x990D             LDR      R1,[SP, #+52]
   \   000000FE   0x.... 0x....      BL       __aeabi_fsub
   \   00000102   0x9000             STR      R0,[SP, #+0]
   \   00000104   0x4898             LDR      R0,??Fuzzy_Shell_P_0
   \   00000106   0x6900             LDR      R0,[R0, #+16]
   \   00000108   0x4997             LDR      R1,??Fuzzy_Shell_P_0
   \   0000010A   0x68C9             LDR      R1,[R1, #+12]
   \   0000010C   0x.... 0x....      BL       __aeabi_fsub
   \   00000110   0x0001             MOVS     R1,R0
   \   00000112   0x9800             LDR      R0,[SP, #+0]
   \   00000114   0x.... 0x....      BL       __aeabi_fdiv
   \   00000118   0x9003             STR      R0,[SP, #+12]
     96          		speed_N = 3;//速度40
   \   0000011A   0x2003             MOVS     R0,#+3
   \   0000011C   0x0006             MOVS     R6,R0
   \   0000011E   0xE003             B        ??Fuzzy_Shell_P_2
     97          	}
     98                  
     99          	else//速度>4档
    100          	{//速度低隶属度
    101          		Speed_Fzy[0] =0;//4
   \                     ??Fuzzy_Shell_P_6: (+1)
   \   00000120   0x2000             MOVS     R0,#+0
   \   00000122   0x9003             STR      R0,[SP, #+12]
    102          		speed_N =3;//速度40
   \   00000124   0x2003             MOVS     R0,#+3
   \   00000126   0x0006             MOVS     R6,R0
    103          	}
    104          	Speed_Fzy[1] = 1.0 - Speed_Fzy[0];//隶属速度高函数输出值
   \                     ??Fuzzy_Shell_P_2: (+1)
   \   00000128   0x9803             LDR      R0,[SP, #+12]
   \   0000012A   0x.... 0x....      BL       __aeabi_f2d
   \   0000012E   0x0002             MOVS     R2,R0
   \   00000130   0x000B             MOVS     R3,R1
   \   00000132   0x2000             MOVS     R0,#+0
   \   00000134   0x498D             LDR      R1,??Fuzzy_Shell_P_0+0x4  ;; 0x3ff00000
   \   00000136   0x.... 0x....      BL       __aeabi_dsub
   \   0000013A   0x.... 0x....      BL       __aeabi_d2f
   \   0000013E   0x9004             STR      R0,[SP, #+16]
    105          
    106                  
    107            /*----- Pre_dirr 变化隶属函数描述-----*/
    108             if(Chazhi_abs<Chazhi_E[0])//差值<0挡//当陀螺仪Y轴数据小于40时，对应三角隶属函数的隶属度为1，方向量度模糊等级为0级
   \   00000140   0x0038             MOVS     R0,R7
   \   00000142   0x498B             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   00000144   0x6809             LDR      R1,[R1, #+0]
   \   00000146   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000014A   0xD205             BCS      ??Fuzzy_Shell_P_7
    109          	{
    110          		Chazhi_Fzy[0] =1;
   \   0000014C   0x20FE             MOVS     R0,#+254
   \   0000014E   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000150   0x9001             STR      R0,[SP, #+4]
    111          		Chazhi_N = 0;
   \   00000152   0x2000             MOVS     R0,#+0
   \   00000154   0x0005             MOVS     R5,R0
   \   00000156   0xE06B             B        ??Fuzzy_Shell_P_8
    112          	}//差值<60,
    113          	else if(Chazhi_abs<Chazhi_E[1])//0挡<差值<1挡//当陀螺仪Y轴数据小于70时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为0级，此时为40三角形的右边一半
   \                     ??Fuzzy_Shell_P_7: (+1)
   \   00000158   0x0038             MOVS     R0,R7
   \   0000015A   0x4985             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   0000015C   0x6849             LDR      R1,[R1, #+4]
   \   0000015E   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000162   0xD213             BCS      ??Fuzzy_Shell_P_9
    114          	{
    115          		Chazhi_Fzy[0] = (Chazhi_E[1] - Chazhi_abs)/(Chazhi_E[1]-Chazhi_E[0]);
   \   00000164   0x4882             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   00000166   0x6840             LDR      R0,[R0, #+4]
   \   00000168   0x0039             MOVS     R1,R7
   \   0000016A   0x.... 0x....      BL       __aeabi_fsub
   \   0000016E   0x9000             STR      R0,[SP, #+0]
   \   00000170   0x487F             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   00000172   0x6840             LDR      R0,[R0, #+4]
   \   00000174   0x497E             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   00000176   0x6809             LDR      R1,[R1, #+0]
   \   00000178   0x.... 0x....      BL       __aeabi_fsub
   \   0000017C   0x0001             MOVS     R1,R0
   \   0000017E   0x9800             LDR      R0,[SP, #+0]
   \   00000180   0x.... 0x....      BL       __aeabi_fdiv
   \   00000184   0x9001             STR      R0,[SP, #+4]
    116          		Chazhi_N = 0 ;
   \   00000186   0x2000             MOVS     R0,#+0
   \   00000188   0x0005             MOVS     R5,R0
   \   0000018A   0xE051             B        ??Fuzzy_Shell_P_8
    117          	}
    118          	else if(Chazhi_abs<Chazhi_E[2])//1挡<差值<2挡//当陀螺仪Y轴数据小于160时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为1级，此时为70三角形的左边一半
   \                     ??Fuzzy_Shell_P_9: (+1)
   \   0000018C   0x0038             MOVS     R0,R7
   \   0000018E   0x4978             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   00000190   0x6889             LDR      R1,[R1, #+8]
   \   00000192   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000196   0xD213             BCS      ??Fuzzy_Shell_P_10
    119          	{
    120          		Chazhi_Fzy[0] = (Chazhi_E[2] - Chazhi_abs)/(Chazhi_E[2]-Chazhi_E[1]);
   \   00000198   0x4875             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   0000019A   0x6880             LDR      R0,[R0, #+8]
   \   0000019C   0x0039             MOVS     R1,R7
   \   0000019E   0x.... 0x....      BL       __aeabi_fsub
   \   000001A2   0x9000             STR      R0,[SP, #+0]
   \   000001A4   0x4872             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   000001A6   0x6880             LDR      R0,[R0, #+8]
   \   000001A8   0x4971             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   000001AA   0x6849             LDR      R1,[R1, #+4]
   \   000001AC   0x.... 0x....      BL       __aeabi_fsub
   \   000001B0   0x0001             MOVS     R1,R0
   \   000001B2   0x9800             LDR      R0,[SP, #+0]
   \   000001B4   0x.... 0x....      BL       __aeabi_fdiv
   \   000001B8   0x9001             STR      R0,[SP, #+4]
    121          		Chazhi_N = 1;
   \   000001BA   0x2001             MOVS     R0,#+1
   \   000001BC   0x0005             MOVS     R5,R0
   \   000001BE   0xE037             B        ??Fuzzy_Shell_P_8
    122          	}
    123             
    124             else if(Chazhi_abs<Chazhi_E[3])//2挡<差值<3挡//当陀螺仪Y轴数据小于160时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为1级，此时为70三角形的左边一半
   \                     ??Fuzzy_Shell_P_10: (+1)
   \   000001C0   0x0038             MOVS     R0,R7
   \   000001C2   0x496B             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   000001C4   0x68C9             LDR      R1,[R1, #+12]
   \   000001C6   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001CA   0xD213             BCS      ??Fuzzy_Shell_P_11
    125          	{
    126          		Chazhi_Fzy[0] = (Chazhi_E[3] - Chazhi_abs)/(Chazhi_E[3]-Chazhi_E[2]);
   \   000001CC   0x4868             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   000001CE   0x68C0             LDR      R0,[R0, #+12]
   \   000001D0   0x0039             MOVS     R1,R7
   \   000001D2   0x.... 0x....      BL       __aeabi_fsub
   \   000001D6   0x9000             STR      R0,[SP, #+0]
   \   000001D8   0x4865             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   000001DA   0x68C0             LDR      R0,[R0, #+12]
   \   000001DC   0x4964             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   000001DE   0x6889             LDR      R1,[R1, #+8]
   \   000001E0   0x.... 0x....      BL       __aeabi_fsub
   \   000001E4   0x0001             MOVS     R1,R0
   \   000001E6   0x9800             LDR      R0,[SP, #+0]
   \   000001E8   0x.... 0x....      BL       __aeabi_fdiv
   \   000001EC   0x9001             STR      R0,[SP, #+4]
    127          		Chazhi_N = 2;
   \   000001EE   0x2002             MOVS     R0,#+2
   \   000001F0   0x0005             MOVS     R5,R0
   \   000001F2   0xE01D             B        ??Fuzzy_Shell_P_8
    128          	}
    129             
    130             else if(Chazhi_abs<Chazhi_E[4])//3挡<差值<4挡//当陀螺仪Y轴数据小于160时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为1级，此时为70三角形的左边一半
   \                     ??Fuzzy_Shell_P_11: (+1)
   \   000001F4   0x0038             MOVS     R0,R7
   \   000001F6   0x495E             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   000001F8   0x6909             LDR      R1,[R1, #+16]
   \   000001FA   0x.... 0x....      BL       __aeabi_cfcmple
   \   000001FE   0xD213             BCS      ??Fuzzy_Shell_P_12
    131          	{
    132          		Chazhi_Fzy[0] = (Chazhi_E[4] - Chazhi_abs)/(Chazhi_E[4]-Chazhi_E[3]);
   \   00000200   0x485B             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   00000202   0x6900             LDR      R0,[R0, #+16]
   \   00000204   0x0039             MOVS     R1,R7
   \   00000206   0x.... 0x....      BL       __aeabi_fsub
   \   0000020A   0x9000             STR      R0,[SP, #+0]
   \   0000020C   0x4858             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   0000020E   0x6900             LDR      R0,[R0, #+16]
   \   00000210   0x4957             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   00000212   0x68C9             LDR      R1,[R1, #+12]
   \   00000214   0x.... 0x....      BL       __aeabi_fsub
   \   00000218   0x0001             MOVS     R1,R0
   \   0000021A   0x9800             LDR      R0,[SP, #+0]
   \   0000021C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000220   0x9001             STR      R0,[SP, #+4]
    133          		Chazhi_N = 3;
   \   00000222   0x2003             MOVS     R0,#+3
   \   00000224   0x0005             MOVS     R5,R0
   \   00000226   0xE003             B        ??Fuzzy_Shell_P_8
    134          	}
    135             
    136          	else//差值>4挡                     //当陀螺仪Y轴数据大于160时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为1级，此时为70三角形的右边一半
    137          	{
    138          		Chazhi_Fzy[0] =0.0;
   \                     ??Fuzzy_Shell_P_12: (+1)
   \   00000228   0x2000             MOVS     R0,#+0
   \   0000022A   0x9001             STR      R0,[SP, #+4]
    139          		Chazhi_N = 3;
   \   0000022C   0x2003             MOVS     R0,#+3
   \   0000022E   0x0005             MOVS     R5,R0
    140          	}
    141          	//一个数据在三角形隶属度函数中对应着两个相邻三角形中的隶属度，两个隶属度和为1
    142          	Chazhi_Fzy[1] = 1.0 - Chazhi_Fzy[0];
   \                     ??Fuzzy_Shell_P_8: (+1)
   \   00000230   0x9801             LDR      R0,[SP, #+4]
   \   00000232   0x.... 0x....      BL       __aeabi_f2d
   \   00000236   0x0002             MOVS     R2,R0
   \   00000238   0x000B             MOVS     R3,R1
   \   0000023A   0x2000             MOVS     R0,#+0
   \   0000023C   0x494B             LDR      R1,??Fuzzy_Shell_P_0+0x4  ;; 0x3ff00000
   \   0000023E   0x.... 0x....      BL       __aeabi_dsub
   \   00000242   0x.... 0x....      BL       __aeabi_d2f
   \   00000246   0x9002             STR      R0,[SP, #+8]
    143          
    144          	/*查询模糊规则表：求比例*/
    145          //查表的时候不单单查询一个规则，而是向右向下拓展成一个规则正方形查询
    146          //num：规则表数字,
    147          //eg:速度30，差值45，Chazhi_N=0，speed_N=0
    148          	num =rule2[Chazhi_N][speed_N];
   \   00000248   0x484A             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   0000024A   0x2114             MOVS     R1,#+20
   \   0000024C   0x4369             MULS     R1,R5,R1
   \   0000024E   0x1840             ADDS     R0,R0,R1
   \   00000250   0x2104             MOVS     R1,#+4
   \   00000252   0x4371             MULS     R1,R6,R1
   \   00000254   0x5840             LDR      R0,[R0, R1]
   \   00000256   0x0004             MOVS     R4,R0
    149          	Shell_P_Fzy[num] += Chazhi_Fzy[0]*Speed_Fzy[0];//0.5
   \   00000258   0x9901             LDR      R1,[SP, #+4]
   \   0000025A   0x9803             LDR      R0,[SP, #+12]
   \   0000025C   0x.... 0x....      BL       __aeabi_fmul
   \   00000260   0x0001             MOVS     R1,R0
   \   00000262   0xA806             ADD      R0,SP,#+24
   \   00000264   0x2204             MOVS     R2,#+4
   \   00000266   0x4362             MULS     R2,R4,R2
   \   00000268   0x5880             LDR      R0,[R0, R2]
   \   0000026A   0x.... 0x....      BL       __aeabi_fadd
   \   0000026E   0xA906             ADD      R1,SP,#+24
   \   00000270   0x2204             MOVS     R2,#+4
   \   00000272   0x4362             MULS     R2,R4,R2
   \   00000274   0x5088             STR      R0,[R1, R2]
    150          
    151          	num =rule2[Chazhi_N+1][speed_N];
   \   00000276   0x483F             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   00000278   0x2114             MOVS     R1,#+20
   \   0000027A   0x4369             MULS     R1,R5,R1
   \   0000027C   0x1840             ADDS     R0,R0,R1
   \   0000027E   0x2104             MOVS     R1,#+4
   \   00000280   0x4371             MULS     R1,R6,R1
   \   00000282   0x1840             ADDS     R0,R0,R1
   \   00000284   0x6940             LDR      R0,[R0, #+20]
   \   00000286   0x0004             MOVS     R4,R0
    152          	Shell_P_Fzy[num] += Chazhi_Fzy[1]*Speed_Fzy[0];
   \   00000288   0x9902             LDR      R1,[SP, #+8]
   \   0000028A   0x9803             LDR      R0,[SP, #+12]
   \   0000028C   0x.... 0x....      BL       __aeabi_fmul
   \   00000290   0x0001             MOVS     R1,R0
   \   00000292   0xA806             ADD      R0,SP,#+24
   \   00000294   0x2204             MOVS     R2,#+4
   \   00000296   0x4362             MULS     R2,R4,R2
   \   00000298   0x5880             LDR      R0,[R0, R2]
   \   0000029A   0x.... 0x....      BL       __aeabi_fadd
   \   0000029E   0xA906             ADD      R1,SP,#+24
   \   000002A0   0x2204             MOVS     R2,#+4
   \   000002A2   0x4362             MULS     R2,R4,R2
   \   000002A4   0x5088             STR      R0,[R1, R2]
    153          
    154          	num =rule2[Chazhi_N][speed_N+1];
   \   000002A6   0x4833             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   000002A8   0x2114             MOVS     R1,#+20
   \   000002AA   0x4369             MULS     R1,R5,R1
   \   000002AC   0x1840             ADDS     R0,R0,R1
   \   000002AE   0x2104             MOVS     R1,#+4
   \   000002B0   0x4371             MULS     R1,R6,R1
   \   000002B2   0x1840             ADDS     R0,R0,R1
   \   000002B4   0x6840             LDR      R0,[R0, #+4]
   \   000002B6   0x0004             MOVS     R4,R0
    155          	Shell_P_Fzy[num] += Chazhi_Fzy[0]*Speed_Fzy[1];
   \   000002B8   0x9901             LDR      R1,[SP, #+4]
   \   000002BA   0x9804             LDR      R0,[SP, #+16]
   \   000002BC   0x.... 0x....      BL       __aeabi_fmul
   \   000002C0   0x0001             MOVS     R1,R0
   \   000002C2   0xA806             ADD      R0,SP,#+24
   \   000002C4   0x2204             MOVS     R2,#+4
   \   000002C6   0x4362             MULS     R2,R4,R2
   \   000002C8   0x5880             LDR      R0,[R0, R2]
   \   000002CA   0x.... 0x....      BL       __aeabi_fadd
   \   000002CE   0xA906             ADD      R1,SP,#+24
   \   000002D0   0x2204             MOVS     R2,#+4
   \   000002D2   0x4362             MULS     R2,R4,R2
   \   000002D4   0x5088             STR      R0,[R1, R2]
    156          
    157          	num =rule2[Chazhi_N+1][speed_N+1];
   \   000002D6   0x4827             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   000002D8   0x2114             MOVS     R1,#+20
   \   000002DA   0x4369             MULS     R1,R5,R1
   \   000002DC   0x1840             ADDS     R0,R0,R1
   \   000002DE   0x2104             MOVS     R1,#+4
   \   000002E0   0x4371             MULS     R1,R6,R1
   \   000002E2   0x1840             ADDS     R0,R0,R1
   \   000002E4   0x6980             LDR      R0,[R0, #+24]
   \   000002E6   0x0004             MOVS     R4,R0
    158          	Shell_P_Fzy[num] += Chazhi_Fzy[1]*Speed_Fzy[1];
   \   000002E8   0x9902             LDR      R1,[SP, #+8]
   \   000002EA   0x9804             LDR      R0,[SP, #+16]
   \   000002EC   0x.... 0x....      BL       __aeabi_fmul
   \   000002F0   0x0001             MOVS     R1,R0
   \   000002F2   0xA806             ADD      R0,SP,#+24
   \   000002F4   0x2204             MOVS     R2,#+4
   \   000002F6   0x4362             MULS     R2,R4,R2
   \   000002F8   0x5880             LDR      R0,[R0, R2]
   \   000002FA   0x.... 0x....      BL       __aeabi_fadd
   \   000002FE   0xA906             ADD      R1,SP,#+24
   \   00000300   0x2204             MOVS     R2,#+4
   \   00000302   0x4362             MULS     R2,R4,R2
   \   00000304   0x5088             STR      R0,[R1, R2]
    159          
    160          	/*面积中心法解模糊*/
    161          	fuzzy_P=Shell_P_Fzy[0]*Shell_P[0]+Shell_P_Fzy[1]*Shell_P[1]+Shell_P_Fzy[2]*Shell_P[2]
    162                          +Shell_P_Fzy[3]*Shell_P[3]+Shell_P_Fzy[4]*Shell_P[4];
   \   00000306   0x9906             LDR      R1,[SP, #+24]
   \   00000308   0x481B             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   0000030A   0x6800             LDR      R0,[R0, #+0]
   \   0000030C   0x.... 0x....      BL       __aeabi_fmul
   \   00000310   0x0001             MOVS     R1,R0
   \   00000312   0x9100             STR      R1,[SP, #+0]
   \   00000314   0x9907             LDR      R1,[SP, #+28]
   \   00000316   0x4818             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   00000318   0x6840             LDR      R0,[R0, #+4]
   \   0000031A   0x.... 0x....      BL       __aeabi_fmul
   \   0000031E   0x9900             LDR      R1,[SP, #+0]
   \   00000320   0x.... 0x....      BL       __aeabi_fadd
   \   00000324   0x0001             MOVS     R1,R0
   \   00000326   0x9100             STR      R1,[SP, #+0]
   \   00000328   0x9908             LDR      R1,[SP, #+32]
   \   0000032A   0x4813             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   0000032C   0x6880             LDR      R0,[R0, #+8]
   \   0000032E   0x.... 0x....      BL       __aeabi_fmul
   \   00000332   0x9900             LDR      R1,[SP, #+0]
   \   00000334   0x.... 0x....      BL       __aeabi_fadd
   \   00000338   0x0001             MOVS     R1,R0
   \   0000033A   0x9100             STR      R1,[SP, #+0]
   \   0000033C   0x9909             LDR      R1,[SP, #+36]
   \   0000033E   0x480E             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   00000340   0x68C0             LDR      R0,[R0, #+12]
   \   00000342   0x.... 0x....      BL       __aeabi_fmul
   \   00000346   0x9900             LDR      R1,[SP, #+0]
   \   00000348   0x.... 0x....      BL       __aeabi_fadd
   \   0000034C   0x0001             MOVS     R1,R0
   \   0000034E   0x9100             STR      R1,[SP, #+0]
   \   00000350   0x990A             LDR      R1,[SP, #+40]
   \   00000352   0x4809             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   00000354   0x6900             LDR      R0,[R0, #+16]
   \   00000356   0x.... 0x....      BL       __aeabi_fmul
   \   0000035A   0x9900             LDR      R1,[SP, #+0]
   \   0000035C   0x.... 0x....      BL       __aeabi_fadd
   \   00000360   0x9005             STR      R0,[SP, #+20]
    163            return(fuzzy_P);
   \   00000362   0x9805             LDR      R0,[SP, #+20]
   \   00000364   0xB00F             ADD      SP,SP,#+60
   \   00000366   0xBDF0             POP      {R4-R7,PC}       ;; return
   \                     ??Fuzzy_Shell_P_0:
   \   00000368   0x........         DC32     Speed_E
   \   0000036C   0x3FF00000         DC32     0x3ff00000
   \   00000370   0x........         DC32     Chazhi_E
   \   00000374   0x........         DC32     rule2
   \   00000378   0x........         DC32     Shell_P
    164          }

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H, 0H
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H, 0H
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H, 0H, 0H, 0H, 0H
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      80   Fuzzy_Shell_P
        80   -> __aeabi_d2f
        80   -> __aeabi_dsub
        80   -> __aeabi_f2d
        80   -> __aeabi_fadd
        80   -> __aeabi_fdiv
        80   -> __aeabi_fmul
        80   -> __aeabi_fsub
        80   -> __aeabi_memclr4
        80   -> abs_f
        80 __aeabi_cfcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?_0
       8  ?_1
      20  ?_2
      20  Chazhi_E
     892  Fuzzy_Shell_P
      20  Shell_P
      20  Speed_E
     100  rule2

 
 160 bytes in section .data
  36 bytes in section .rodata
 892 bytes in section .text
 
 892 bytes of CODE  memory
  36 bytes of CONST memory
 160 bytes of DATA  memory

Errors: none
Warnings: 1
