###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        29/Jul/2018  00:38:01
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  H:\智能车程序2018\三轮比赛\7.29-sc\user\C\L3G4200D_ZS.c
#    Command line =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\user\C\L3G4200D_ZS.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -lCN
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -lB
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\ -o
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\ --no_cse
#        --no_unroll --no_inline --no_code_motion --no_tbaa --no_clustering
#        --no_scheduling --debug --endian=little --cpu=Cortex-M0+ -e --fpu=None
#        --dlib_config F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\device\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\user\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\lib\H\ -I
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\..\system\coreSupport\ -On
#    List file    =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\List\L3G4200D_ZS.lst
#    Object file  =  
#        H:\智能车程序2018\三轮比赛\7.29-sc\iar\KEA_128_FLASH\Obj\L3G4200D_ZS.o
#
###############################################################################

H:\智能车程序2018\三轮比赛\7.29-sc\user\C\L3G4200D_ZS.c
      1          #include "Variable.h"
      2          #include "common.h"
      3          #include "allHead.h"
      4          #include "L3G4200D_ZS.h"
      5          
      6          #define INTEGRAL_TIME_CONSTANT 0.005        //积分时间
      7          
      8          //----------------------------陀螺仪--------------------------------------------

   \                                 In section .bss, align 4
      9          float gyr_angle_speed,gyr_angle_speed_up,//陀螺仪角速度
   \                     gyr_angle_speed:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     gyr_angle_speed_up:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     10                gyr_angle_speed_static=3,//陀螺仪静止时的角速度
   \                     gyr_angle_speed_static:
   \   00000000   0x40400000         DC32 40400000H

   \                                 In section .bss, align 4
     11                gyr_angle_speed_static_sum,//陀螺仪静止时的角速度总和
   \                     gyr_angle_speed_static_sum:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     12                gyr_angle = 0, gyr_angle_up = 0,//陀螺仪角度
   \                     gyr_angle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     gyr_angle_up:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     13                gyr_angle_static=1,//陀螺仪静止时的角度误差,4min
   \                     gyr_angle_static:
   \   00000000   0x3F800000         DC32 3F800000H
     14           

   \                                 In section .data, align 4
     15          gyr_offset_x = 18.8;//陀螺仪x轴偏移量0.85
   \                     gyr_offset_x:
   \   00000000   0x41966666         DC32 41966666H
     16          

   \                                 In section .data, align 4
     17          float gyr_offset_y =-6.000;//陀螺仪y轴偏移量
   \                     gyr_offset_y:
   \   00000000   0xC0C00000         DC32 0C0C00000H

   \                                 In section .data, align 4
     18          float gyr_offset_z =21.24,gyr_offset_z_sum=0;//陀螺仪z轴偏移量
   \                     gyr_offset_z:
   \   00000000   0x41A9EB85         DC32 41A9EB85H

   \                                 In section .bss, align 4
   \                     gyr_offset_z_sum:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     19          int   gg=0;
   \                     gg:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     20          float gyr_offset__z_sum=0;//陀螺仪z轴静态偏移量总和；
   \                     gyr_offset__z_sum:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     21          float gyr_offset__z_average=0;//陀螺仪z轴静态偏移量平均值；
   \                     gyr_offset__z_average:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     22          float gyr_offset__x_sum=0;//陀螺仪z轴静态偏移量总和；
   \                     gyr_offset__x_sum:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     23          float gyr_offset__x_average=0;//陀螺仪z轴静态偏移量平均值；
   \                     gyr_offset__x_average:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     24          int zs=0;
   \                     zs:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     25          int sure_time=0;
   \                     sure_time:
   \   00000000                      DS8 4
     26          
     27          /*****************陀螺仪测车角速度,角度******************************************************************
     28            未滤波4分钟产生10度
     29            滤波后4分钟产生1度
     30            小车转90度，陀螺仪测得45度
     31            过普通弯道，陀螺仪测得45度
     32            小车过圆圈弯道，实际车转过了270度,
     33                            陀螺仪测得了136度
     34            小车转过弯后，会显示已转角度，直立车的直立环可直接通过陀螺仪解算后
     35          的角度给P,使其直立。直立环是为了让陀螺仪显示的角度一直为0度。但三轮
     36          车转弯与其不同，并不是让陀螺仪显示角度为0度。之前想让其显示角度抑制
     37          漂移，但是在过圆环弯道时，显示角度已达到了135度。
     38            故未想到用陀螺仪测得的角度抑制漂移。
     39            用陀螺仪测得的大角速度抑制其漂移
     40          *********************************************************************************/

   \                                 In section .text, align 4, keep-with-next
     41          void Gyro_ZS()
     42          { 
   \                     Gyro_ZS: (+1)
   \   00000000   0xB5D0             PUSH     {R4,R6,R7,LR}
     43           int offset_flag=0;
   \   00000002   0x2400             MOVS     R4,#+0
     44          //陀螺仪Z,Y轴数据读取
     45            L3G4200_Read();
   \   00000004   0x.... 0x....      BL       L3G4200_Read
     46          //  if(++sure_time<101)//2.5*100=250ms
     47          //    gyr_offset_z_sum+=gyro_z;
     48          //  else
     49          //    offset_flag=1;
     50          //  
     51          //  if(offset_flag==1)
     52          //  {
     53          //      gyr_offset_z=gyr_offset_z_sum/100;
     54          //      offset_flag=2;
     55          //  }
     56            if(sure_time<100)//2.5*100=250ms
   \   00000008   0x484E             LDR      R0,??Gyro_ZS_0+0x4
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0x2864             CMP      R0,#+100
   \   0000000E   0xDA10             BGE      ??Gyro_ZS_1
     57            {
     58              sure_time++;
   \   00000010   0x484C             LDR      R0,??Gyro_ZS_0+0x4
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x1C40             ADDS     R0,R0,#+1
   \   00000016   0x494B             LDR      R1,??Gyro_ZS_0+0x4
   \   00000018   0x6008             STR      R0,[R1, #+0]
     59              gyr_offset_z_sum+=gyro_z;
   \   0000001A   0x484D             LDR      R0,??Gyro_ZS_0+0x10
   \   0000001C   0x2100             MOVS     R1,#+0
   \   0000001E   0x5E40             LDRSH    R0,[R0, R1]
   \   00000020   0x.... 0x....      BL       __aeabi_i2f
   \   00000024   0x4948             LDR      R1,??Gyro_ZS_0+0x8
   \   00000026   0x6809             LDR      R1,[R1, #+0]
   \   00000028   0x.... 0x....      BL       __aeabi_fadd
   \   0000002C   0x4946             LDR      R1,??Gyro_ZS_0+0x8
   \   0000002E   0x6008             STR      R0,[R1, #+0]
   \   00000030   0xE001             B        ??Gyro_ZS_2
     60            }
     61            else
     62              offset_flag=1;
   \                     ??Gyro_ZS_1: (+1)
   \   00000032   0x2001             MOVS     R0,#+1
   \   00000034   0x0004             MOVS     R4,R0
     63            
     64            if(offset_flag==1)
   \                     ??Gyro_ZS_2: (+1)
   \   00000036   0x2C01             CMP      R4,#+1
   \   00000038   0xD108             BNE      ??Gyro_ZS_3
     65            {
     66                gyr_offset_z=gyr_offset_z_sum/100;
   \   0000003A   0x4843             LDR      R0,??Gyro_ZS_0+0x8
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x4943             LDR      R1,??Gyro_ZS_0+0xC  ;; 0x42c80000
   \   00000040   0x.... 0x....      BL       __aeabi_fdiv
   \   00000044   0x4943             LDR      R1,??Gyro_ZS_0+0x14
   \   00000046   0x6008             STR      R0,[R1, #+0]
     67                offset_flag=2;
   \   00000048   0x2002             MOVS     R0,#+2
   \   0000004A   0x0004             MOVS     R4,R0
     68            }
     69          //陀螺仪角速度=(陀螺仪z轴数据-陀螺仪z轴静态偏移量)*陀螺仪比例系数
     70            gyr_angle_speed=((float)gyro_z-gyr_offset_z)*gyr_ratio; //角速度，度/秒
   \                     ??Gyro_ZS_3: (+1)
   \   0000004C   0x4840             LDR      R0,??Gyro_ZS_0+0x10
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x5E40             LDRSH    R0,[R0, R1]
   \   00000052   0x.... 0x....      BL       __aeabi_i2f
   \   00000056   0x493F             LDR      R1,??Gyro_ZS_0+0x14
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x.... 0x....      BL       __aeabi_fsub
   \   0000005E   0x.... 0x....      BL       __aeabi_f2d
   \   00000062   0xA23E             ADR      R2,??Gyro_ZS_0+0x1C
   \   00000064   0xCA0C             LDM      R2,{R2,R3}
   \   00000066   0x.... 0x....      BL       __aeabi_dmul
   \   0000006A   0x.... 0x....      BL       __aeabi_d2f
   \   0000006E   0x493E             LDR      R1,??Gyro_ZS_0+0x28
   \   00000070   0x6008             STR      R0,[R1, #+0]
     71            gyr_angle_speed_up=((float)gyro_x-gyr_offset_x)*gyr_ratio; //角速度，度/秒
   \   00000072   0x4843             LDR      R0,??Gyro_ZS_0+0x40
   \   00000074   0x2100             MOVS     R1,#+0
   \   00000076   0x5E40             LDRSH    R0,[R0, R1]
   \   00000078   0x.... 0x....      BL       __aeabi_i2f
   \   0000007C   0x4936             LDR      R1,??Gyro_ZS_0+0x18
   \   0000007E   0x6809             LDR      R1,[R1, #+0]
   \   00000080   0x.... 0x....      BL       __aeabi_fsub
   \   00000084   0x.... 0x....      BL       __aeabi_f2d
   \   00000088   0xA234             ADR      R2,??Gyro_ZS_0+0x1C
   \   0000008A   0xCA0C             LDM      R2,{R2,R3}
   \   0000008C   0x.... 0x....      BL       __aeabi_dmul
   \   00000090   0x.... 0x....      BL       __aeabi_d2f
   \   00000094   0x4936             LDR      R1,??Gyro_ZS_0+0x30
   \   00000096   0x6008             STR      R0,[R1, #+0]
     72          
     73          //陀螺仪角速度静态滤波，代替加速度计
     74            if(abs_f(gyr_angle_speed)<gyr_angle_speed_static)
   \   00000098   0x4833             LDR      R0,??Gyro_ZS_0+0x28
   \   0000009A   0x6800             LDR      R0,[R0, #+0]
   \   0000009C   0x.... 0x....      BL       abs_f
   \   000000A0   0x4930             LDR      R1,??Gyro_ZS_0+0x24
   \   000000A2   0x6809             LDR      R1,[R1, #+0]
   \   000000A4   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000A8   0xD202             BCS      ??Gyro_ZS_4
     75            {
     76              gyr_angle_speed=0;
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x492E             LDR      R1,??Gyro_ZS_0+0x28
   \   000000AE   0x6008             STR      R0,[R1, #+0]
     77            }
     78          /* 1 先验估计 -----------------------------------------------------------  */
     79          //根据上一次车体角度估计本次角度
     80          //现在的角度 = 上次的角度 + (陀螺仪所测角速度 - 静态偏移)*陀螺仪采样周期
     81          //car_angle += (gyr_angle_speed-gyro_error) * INTEGRAL_TIME_CONSTANT;
     82          //     之前的角度偏差由卡尔额曼滤波和加速度计获得
     83            gyr_angle += gyr_angle_speed * INTEGRAL_TIME_CONSTANT;
   \                     ??Gyro_ZS_4: (+1)
   \   000000B0   0x482E             LDR      R0,??Gyro_ZS_0+0x2C
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x.... 0x....      BL       __aeabi_f2d
   \   000000B8   0x0006             MOVS     R6,R0
   \   000000BA   0x000F             MOVS     R7,R1
   \   000000BC   0x482A             LDR      R0,??Gyro_ZS_0+0x28
   \   000000BE   0x6800             LDR      R0,[R0, #+0]
   \   000000C0   0x.... 0x....      BL       __aeabi_f2d
   \   000000C4   0xA22B             ADR      R2,??Gyro_ZS_0+0x34
   \   000000C6   0xCA0C             LDM      R2,{R2,R3}
   \   000000C8   0x.... 0x....      BL       __aeabi_dmul
   \   000000CC   0x0032             MOVS     R2,R6
   \   000000CE   0x003B             MOVS     R3,R7
   \   000000D0   0x.... 0x....      BL       __aeabi_dadd
   \   000000D4   0x.... 0x....      BL       __aeabi_d2f
   \   000000D8   0x4924             LDR      R1,??Gyro_ZS_0+0x2C
   \   000000DA   0x6008             STR      R0,[R1, #+0]
     84            gyr_angle_up += gyr_angle_speed_up * INTEGRAL_TIME_CONSTANT;
   \   000000DC   0x4827             LDR      R0,??Gyro_ZS_0+0x3C
   \   000000DE   0x6800             LDR      R0,[R0, #+0]
   \   000000E0   0x.... 0x....      BL       __aeabi_f2d
   \   000000E4   0x0006             MOVS     R6,R0
   \   000000E6   0x000F             MOVS     R7,R1
   \   000000E8   0x4821             LDR      R0,??Gyro_ZS_0+0x30
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0x.... 0x....      BL       __aeabi_f2d
   \   000000F0   0xA220             ADR      R2,??Gyro_ZS_0+0x34
   \   000000F2   0xCA0C             LDM      R2,{R2,R3}
   \   000000F4   0x.... 0x....      BL       __aeabi_dmul
   \   000000F8   0x0032             MOVS     R2,R6
   \   000000FA   0x003B             MOVS     R3,R7
   \   000000FC   0x.... 0x....      BL       __aeabi_dadd
   \   00000100   0x.... 0x....      BL       __aeabi_d2f
   \   00000104   0x491D             LDR      R1,??Gyro_ZS_0+0x3C
   \   00000106   0x6008             STR      R0,[R1, #+0]
     85           
     86          //  if(gyr_angle>gyr_angle_static||gyr_angle<-gyr_angle_static)
     87          //  {角度确定
     88          //     Direction_Angle=gyr_angle;
     89          //  }
     90            
     91            
     92            
     93          //  uart_sendware_float(car_angle,acc_angle,car_angle_speed,0);
     94          
     95          //确定陀螺仪Z轴静态偏移量值程序,可采集4.3min平均值
     96          //  gg++;
     97          //  gyr_offset__z_sum+=gyro_z;
     98          //  gyr_offset__z_average=gyr_offset__z_sum/gg;
     99            
    100            gg++;
   \   00000108   0x481E             LDR      R0,??Gyro_ZS_0+0x44
   \   0000010A   0x6800             LDR      R0,[R0, #+0]
   \   0000010C   0x1C40             ADDS     R0,R0,#+1
   \   0000010E   0x491D             LDR      R1,??Gyro_ZS_0+0x44
   \   00000110   0x6008             STR      R0,[R1, #+0]
    101            gyr_offset__x_sum+=gyro_x;
   \   00000112   0x481B             LDR      R0,??Gyro_ZS_0+0x40
   \   00000114   0x2100             MOVS     R1,#+0
   \   00000116   0x5E40             LDRSH    R0,[R0, R1]
   \   00000118   0x.... 0x....      BL       __aeabi_i2f
   \   0000011C   0x491A             LDR      R1,??Gyro_ZS_0+0x48
   \   0000011E   0x6809             LDR      R1,[R1, #+0]
   \   00000120   0x.... 0x....      BL       __aeabi_fadd
   \   00000124   0x4918             LDR      R1,??Gyro_ZS_0+0x48
   \   00000126   0x6008             STR      R0,[R1, #+0]
    102            gyr_offset__x_average=gyr_offset__x_sum/gg;
   \   00000128   0x4816             LDR      R0,??Gyro_ZS_0+0x44
   \   0000012A   0x6800             LDR      R0,[R0, #+0]
   \   0000012C   0x.... 0x....      BL       __aeabi_i2f
   \   00000130   0x0001             MOVS     R1,R0
   \   00000132   0x4815             LDR      R0,??Gyro_ZS_0+0x48
   \   00000134   0x6800             LDR      R0,[R0, #+0]
   \   00000136   0x.... 0x....      BL       __aeabi_fdiv
   \   0000013A   0x4901             LDR      R1,??Gyro_ZS_0
   \   0000013C   0x6008             STR      R0,[R1, #+0]
    103          //确定陀螺仪Z轴静态角速度平均值程序，可采集4.3min平均值，0.038
    104          //  gg++;
    105          //  gyr_angle_speed_static_sum+=gyr_angle_speed;
    106          //  gyr_angle_speed_static=gyr_angle_speed_static_sum/gg;
    107          //确定陀螺仪Z轴静态角速度最大值程序，0.89
    108          //  if(gyr_angle_speed_static<gyr_angle_speed)
    109          //    gyr_angle_speed_static=gyr_angle_speed;
    110          }
   \   0000013E   0xBDD0             POP      {R4,R6,R7,PC}    ;; return
   \                     ??Gyro_ZS_0:
   \   00000140   0x........         DC32     gyr_offset__x_average
   \   00000144   0x........         DC32     sure_time
   \   00000148   0x........         DC32     gyr_offset_z_sum
   \   0000014C   0x42C80000         DC32     0x42c80000
   \   00000150   0x........         DC32     gyro_z
   \   00000154   0x........         DC32     gyr_offset_z
   \   00000158   0x........         DC32     gyr_offset_x
   \   0000015C   0xB22D0E56         DC32     0xB22D0E56,0xBFA7EF9D
   \              0xBFA7EF9D   
   \   00000164   0x........         DC32     gyr_angle_speed_static
   \   00000168   0x........         DC32     gyr_angle_speed
   \   0000016C   0x........         DC32     gyr_angle
   \   00000170   0x........         DC32     gyr_angle_speed_up
   \   00000174   0x47AE147B         DC32     0x47AE147B,0x3F747AE1
   \              0x3F747AE1   
   \   0000017C   0x........         DC32     gyr_angle_up
   \   00000180   0x........         DC32     gyro_x
   \   00000184   0x........         DC32     gg
   \   00000188   0x........         DC32     gyr_offset__x_sum
    111          //直立车
    112          //角度输出=P*陀螺仪角度偏差+D*陀螺仪角速度
    113          //Angle_Out = P_angle*angle_E + D_angle*car_angle_speed;
    114          
    115          
    116          
    117          
    118          
    119          
    120          
    121          
    122          
    123          
    124          
    125          
    126          
    127          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   Gyro_ZS
        16   -> L3G4200_Read
        16   -> __aeabi_d2f
        16   -> __aeabi_dadd
        16   -> __aeabi_dmul
        16   -> __aeabi_f2d
        16   -> __aeabi_fadd
        16   -> __aeabi_fdiv
        16   -> __aeabi_fsub
        16   -> __aeabi_i2f
        16   -> abs_f
        16 __aeabi_cfcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     396  Gyro_ZS
       4  gg
       4  gyr_angle
       4  gyr_angle_speed
       4  gyr_angle_speed_static
       4  gyr_angle_speed_static_sum
       4  gyr_angle_speed_up
       4  gyr_angle_static
       4  gyr_angle_up
       4  gyr_offset__x_average
       4  gyr_offset__x_sum
       4  gyr_offset__z_average
       4  gyr_offset__z_sum
       4  gyr_offset_x
       4  gyr_offset_y
       4  gyr_offset_z
       4  gyr_offset_z_sum
       4  sure_time
       4  zs

 
  52 bytes in section .bss
  20 bytes in section .data
 396 bytes in section .text
 
 396 bytes of CODE memory
  72 bytes of DATA memory

Errors: none
Warnings: none
