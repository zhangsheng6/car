###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        28/Sep/2018  18:58:00
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\user\C\Direction_Control.c
#    Command line =  
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\user\C\Direction_Control.c -D
#        IAR -D TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -D DA_OLED -lCN
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\List\ -lB
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\List\ -o
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\device\H\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\user\H\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\system\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\lib\H\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\system\coreSupport\
#        -Ol
#    List file    =  
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\List\Direction_Control.lst
#    Object file  =  
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\Obj\Direction_Control.o
#
###############################################################################

I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\user\C\Direction_Control.c
      1          #include "Direction_Control.h"
      2          #include "Variable.h"
      3          //---------------------------------方向控制-------------------------------------
      4          
      5          //----------------------------陀螺仪--------------------------------------------

   \                                 In section .data, align 4
      6          float gyr_offset_y =-4.000;//陀螺仪x,y轴偏移量
   \                     gyr_offset_y:
   \   00000000   0xC0800000         DC32 0C0800000H
      7          

   \                                 In section .bss, align 4
      8          float Direction_Control_Output = 0.0;
   \                     Direction_Control_Output:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
      9          uint8 Direction_Control_Period = 0;
   \                     Direction_Control_Period:
   \   00000000                      DS8 1
     10          //#define DIRECTION_CONTROL_PERIOD 50

   \                                 In section .bss, align 1
     11          char Direction_flag = 0;
   \                     Direction_flag:
   \   00000000                      DS8 1
     12          
     13          //float P_Direction1=40,D_Direction1=20.5;		//低速
     14          //float P_Direction2=40,D_Direction2=20.5;		//中速
     15          //float P_Direction3=173,D_Direction3=145.5;		//快速
     16          

   \                                 In section .bss, align 4
     17          float P_Direction = 0,D_Direction = 20.5;
   \                     P_Direction:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
   \                     D_Direction:
   \   00000000   0x41A40000         DC32 41A40000H

   \                                 In section .data, align 4
     18          float turn_spd = 0.5;
   \                     turn_spd:
   \   00000000   0x3F000000         DC32 3F000000H

   \                                 In section .data, align 4
     19          float P_Direction_high = 74, P_Direction_low = 70;
   \                     P_Direction_high:
   \   00000000   0x42940000         DC32 42940000H

   \                                 In section .data, align 4
   \                     P_Direction_low:
   \   00000000   0x428C0000         DC32 428C0000H
     20          //float P_Direction_temp = 140;

   \                                 In section .data, align 4
     21          float K = 0.85;
   \                     K:
   \   00000000   0x3F59999A         DC32 3F59999AH
     22          //float Direction_Control = 0.0, Direction_Control_Last = 0.0,Direction_Control_Err=0.0;

   \                                 In section .bss, align 4
     23          float Direction_angle=0.0;
   \                     Direction_angle:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     24          float P_Dir_agl =55;
   \                     P_Dir_agl:
   \   00000000   0x425C0000         DC32 425C0000H

   \                                 In section .bss, align 8
     25          double Road_Err_D=0;	          //偏差的微分
   \                     Road_Err_D:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     26          float P_Direction_change;
   \                     P_Direction_change:
   \   00000000                      DS8 4
     27          
     28          

   \                                 In section .text, align 4, keep-with-next
     29          void Direction_Controler(void)
     30          {
   \                     Direction_Controler: (+1)
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
     31            float road_err_D_Tmp;
     32            static float Chazhi_last;
     33           
     34            road_err_D_Tmp =Chazhi_last -  Chazhi;
   \   00000002   0x484E             LDR      R0,??Direction_Controler_0+0x40
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0x494C             LDR      R1,??Direction_Controler_0+0x3C
   \   00000008   0x6809             LDR      R1,[R1, #+0]
   \   0000000A   0x.... 0x....      BL       __aeabi_fsub
   \   0000000E   0x0004             MOVS     R4,R0
     35            Road_Err_D = (1-K)*Road_Err_D + K*road_err_D_Tmp;
   \   00000010   0x20FE             MOVS     R0,#+254
   \   00000012   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   00000014   0x493A             LDR      R1,??Direction_Controler_0+0x4
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x.... 0x....      BL       __aeabi_fsub
   \   0000001C   0x.... 0x....      BL       __aeabi_f2d
   \   00000020   0x4A42             LDR      R2,??Direction_Controler_0+0x30
   \   00000022   0xCA0C             LDM      R2,{R2,R3}
   \   00000024   0x.... 0x....      BL       __aeabi_dmul
   \   00000028   0x0006             MOVS     R6,R0
   \   0000002A   0x000F             MOVS     R7,R1
   \   0000002C   0x4834             LDR      R0,??Direction_Controler_0+0x4
   \   0000002E   0x6800             LDR      R0,[R0, #+0]
   \   00000030   0x0021             MOVS     R1,R4
   \   00000032   0x.... 0x....      BL       __aeabi_fmul
   \   00000036   0x.... 0x....      BL       __aeabi_f2d
   \   0000003A   0x0032             MOVS     R2,R6
   \   0000003C   0x003B             MOVS     R3,R7
   \   0000003E   0x.... 0x....      BL       __aeabi_dadd
   \   00000042   0x4A3A             LDR      R2,??Direction_Controler_0+0x30
   \   00000044   0xC203             STM      R2!,{R0,R1}
   \   00000046   0x3A08             SUBS     R2,R2,#+8
     36            
     37          //  if(Direction_angle <= 0) Direction_angle = -Direction_angle;
     38          //  P_Direction = 110 + speed_car*15 + Direction_angle*0.5;
     39            
     40            if( speed_car>turn_spd )     P_Direction = P_Direction_high;
   \   00000048   0x482E             LDR      R0,??Direction_Controler_0+0x8
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0x492E             LDR      R1,??Direction_Controler_0+0xC
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000054   0xD204             BCS      ??Direction_Controler_1
   \   00000056   0x482D             LDR      R0,??Direction_Controler_0+0x10
   \   00000058   0x6800             LDR      R0,[R0, #+0]
   \   0000005A   0x492D             LDR      R1,??Direction_Controler_0+0x14
   \   0000005C   0x6008             STR      R0,[R1, #+0]
   \   0000005E   0xE003             B        ??Direction_Controler_2
     41            else                         P_Direction = P_Direction_low;
   \                     ??Direction_Controler_1: (+1)
   \   00000060   0x482C             LDR      R0,??Direction_Controler_0+0x18
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x492A             LDR      R1,??Direction_Controler_0+0x14
   \   00000066   0x6008             STR      R0,[R1, #+0]
     42            
     43          //  P_Direction = P_Direction_temp;
     44            Direction_angle = (gyro_y_valu - gyr_offset_y) * gyr_ratio;		//转角
   \                     ??Direction_Controler_2: (+1)
   \   00000068   0x482B             LDR      R0,??Direction_Controler_0+0x1C
   \   0000006A   0x6800             LDR      R0,[R0, #+0]
   \   0000006C   0x.... 0x....      BL       __aeabi_i2f
   \   00000070   0x492A             LDR      R1,??Direction_Controler_0+0x20
   \   00000072   0x6809             LDR      R1,[R1, #+0]
   \   00000074   0x.... 0x....      BL       __aeabi_fsub
   \   00000078   0x.... 0x....      BL       __aeabi_f2d
   \   0000007C   0xA228             ADR      R2,??Direction_Controler_0+0x24
   \   0000007E   0xCA0C             LDM      R2,{R2,R3}
   \   00000080   0x.... 0x....      BL       __aeabi_dmul
   \   00000084   0x.... 0x....      BL       __aeabi_d2f
   \   00000088   0x4929             LDR      R1,??Direction_Controler_0+0x34
   \   0000008A   0x6008             STR      R0,[R1, #+0]
     45            Direction_Control_Output=( -P_Direction * Chazhi)  + D_Direction*Road_Err_D + Direction_angle*P_Dir_agl;
   \   0000008C   0x4820             LDR      R0,??Direction_Controler_0+0x14
   \   0000008E   0x6801             LDR      R1,[R0, #+0]
   \   00000090   0x2080             MOVS     R0,#+128
   \   00000092   0x0600             LSLS     R0,R0,#+24       ;; #-2147483648
   \   00000094   0x4041             EORS     R1,R1,R0
   \   00000096   0x4828             LDR      R0,??Direction_Controler_0+0x3C
   \   00000098   0x6800             LDR      R0,[R0, #+0]
   \   0000009A   0x.... 0x....      BL       __aeabi_fmul
   \   0000009E   0x.... 0x....      BL       __aeabi_f2d
   \   000000A2   0x0004             MOVS     R4,R0
   \   000000A4   0x000D             MOVS     R5,R1
   \   000000A6   0x4820             LDR      R0,??Direction_Controler_0+0x2C
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x.... 0x....      BL       __aeabi_f2d
   \   000000AE   0x4A1F             LDR      R2,??Direction_Controler_0+0x30
   \   000000B0   0xCA0C             LDM      R2,{R2,R3}
   \   000000B2   0x.... 0x....      BL       __aeabi_dmul
   \   000000B6   0x0022             MOVS     R2,R4
   \   000000B8   0x002B             MOVS     R3,R5
   \   000000BA   0x.... 0x....      BL       __aeabi_dadd
   \   000000BE   0x0004             MOVS     R4,R0
   \   000000C0   0x000D             MOVS     R5,R1
   \   000000C2   0x481B             LDR      R0,??Direction_Controler_0+0x34
   \   000000C4   0x6801             LDR      R1,[R0, #+0]
   \   000000C6   0x481B             LDR      R0,??Direction_Controler_0+0x38
   \   000000C8   0x6800             LDR      R0,[R0, #+0]
   \   000000CA   0x.... 0x....      BL       __aeabi_fmul
   \   000000CE   0x.... 0x....      BL       __aeabi_f2d
   \   000000D2   0x0022             MOVS     R2,R4
   \   000000D4   0x002B             MOVS     R3,R5
   \   000000D6   0x.... 0x....      BL       __aeabi_dadd
   \   000000DA   0x.... 0x....      BL       __aeabi_d2f
   \   000000DE   0x4907             LDR      R1,??Direction_Controler_0
   \   000000E0   0x6008             STR      R0,[R1, #+0]
     46            Chazhi_last = Chazhi;
   \   000000E2   0x4815             LDR      R0,??Direction_Controler_0+0x3C
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x4915             LDR      R1,??Direction_Controler_0+0x40
   \   000000E8   0x6008             STR      R0,[R1, #+0]
     47            if(Direction_flag == 0) Direction_Control_Output = 0;
   \   000000EA   0x4815             LDR      R0,??Direction_Controler_0+0x44
   \   000000EC   0x7800             LDRB     R0,[R0, #+0]
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD102             BNE      ??Direction_Controler_3
   \   000000F2   0x2000             MOVS     R0,#+0
   \   000000F4   0x4901             LDR      R1,??Direction_Controler_0
   \   000000F6   0x6008             STR      R0,[R1, #+0]
     48          //  uart_sendware_float(P_Direction,Chazhi,speed_car,0);
     49          }
   \                     ??Direction_Controler_3: (+1)
   \   000000F8   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
   \   000000FA   0xBF00             Nop      
   \                     ??Direction_Controler_0:
   \   000000FC   0x........         DC32     Direction_Control_Output
   \   00000100   0x........         DC32     K
   \   00000104   0x........         DC32     turn_spd
   \   00000108   0x........         DC32     speed_car
   \   0000010C   0x........         DC32     P_Direction_high
   \   00000110   0x........         DC32     P_Direction
   \   00000114   0x........         DC32     P_Direction_low
   \   00000118   0x........         DC32     gyro_y_valu
   \   0000011C   0x........         DC32     gyr_offset_y
   \   00000120   0xB22D0E56         DC32     0xB22D0E56,0xBFA7EF9D
   \              0xBFA7EF9D   
   \   00000128   0x........         DC32     D_Direction
   \   0000012C   0x........         DC32     Road_Err_D
   \   00000130   0x........         DC32     Direction_angle
   \   00000134   0x........         DC32     P_Dir_agl
   \   00000138   0x........         DC32     Chazhi
   \   0000013C   0x........         DC32     ??Chazhi_last
   \   00000140   0x........         DC32     Direction_flag

   \                                 In section .bss, align 4
   \                     ??Chazhi_last:
   \   00000000                      DS8 4
     50          
     51          
     52          //void Direction_Controler(void)
     53          //{
     54          //    double road_err_D_Tmp = 0.0;	//偏差微分中间变量
     55          //    float  Chazhi_last;
     56          //    
     57          //    //一阶滤波
     58          //    road_err_D_Tmp =Chazhi - Chazh
     59          //    Road_Err_D = (1-K)*Road_Err_D + K*road_err_D_Tmp;
     60          //
     61          //    if( speed_car>turn_spd )     P_Direction = P_Direction_high;
     62          //    else                         P_Direction = P_Direction_low;
     63          //
     64          ////    Direction_angle = (gyro_y - gyr_offset_y) * gyr_ratio;		//转角
     65          //    Direction_Control_Output = P_Direction * Chazhi+ D_Direction*Road_Err_D ;//+ Direction_angle*P_Dir_agl;
     66          //    
     67          //    Chazhi_last = Chazhi;
     68          //    
     69          //    
     70          ////#if 0
     71          ////    //周期性控制方向
     72          ////    Direction_Control_Period++;
     73          ////    //---------------------------------------------------------------------------------------------------------------------
     74          ////    if (Direction_Control_Period>=DIRECTION_CONTROL_PERIOD)
     75          ////    {
     76          ////        Direction_Control_Period = 0;
     77          ////        Direction_Control_Last = Direction_Control;
     78          ////        //一阶滤波
     79          ////        road_err_D_Tmp = Road_Err[9]- Road_Err[0];
     80          ////        Road_Err_D = (1-K)*Road_Err_D + K*road_err_D_Tmp;
     81          ////
     82          ////        Direction_angle = (gyro_y - gyr_offset_y) * gyr_ratio;		//转角
     83          ////
     84          ////        Direction_Control = P_Direction * Road_Err[9] + D_Direction*Road_Err_D + Direction_angle*P_Dir_agl;
     85          ////        Direction_Control_Err = Direction_Control - Direction_Control_Last;
     86          ////    }
     87          ////    //---------------------------------------------------------------------------------------------------------------------
     88          ////
     89          ////    Direction_Control_Output = Direction_Control_Last + Direction_Control_Err*(Direction_Control_Period+1)/DIRECTION_CONTROL_PERIOD ;
     90          ////#endif
     91          //}
     92          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   Direction_Controler
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> __aeabi_fmul
        24   -> __aeabi_fsub
        24   -> __aeabi_i2f
        24 __aeabi_cfcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  Chazhi_last
       4  D_Direction
       4  Direction_Control_Output
       1  Direction_Control_Period
     324  Direction_Controler
       4  Direction_angle
       1  Direction_flag
       4  K
       4  P_Dir_agl
       4  P_Direction
       4  P_Direction_change
       4  P_Direction_high
       4  P_Direction_low
       8  Road_Err_D
       4  gyr_offset_y
       4  turn_spd

 
  30 bytes in section .bss
  28 bytes in section .data
 324 bytes in section .text
 
 324 bytes of CODE memory
  58 bytes of DATA memory

Errors: none
Warnings: none
