###############################################################################
#
# IAR ANSI C/C++ Compiler V7.40.2.8542/W32 for ARM        28/Sep/2018  18:58:00
# Copyright 1999-2015 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\user\C\Fuzzy.c
#    Command line =  
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\user\C\Fuzzy.c -D IAR -D
#        TWR_K60N512 -D _DLIB_FILE_DESCRIPTOR -D DA_OLED -lCN
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\List\ -lB
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\List\ -o
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\Obj\
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M0+ -e --fpu=None --dlib_config
#        F:\IAR安装包\arm\INC\c\DLib_Config_Normal.h -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\device\H\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\user\H\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\system\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\lib\H\ -I
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\..\system\coreSupport\
#        -Ol
#    List file    =  
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\List\Fuzzy.lst
#    Object file  =  
#        I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\iar\KEA_128_FLASH\Obj\Fuzzy.o
#
###############################################################################

I:\电磁程序-ZS\电磁直立-ZS\stand_ZS_9.28\user\C\Fuzzy.c
      1          #include "Fuzzy.h"
      2          //二维模糊控制系统
      3          //输入小车的实际速度与陀螺仪Y轴数据，控制输出方向P
      4          

   \                                 In section .data, align 4
      5          float  Angle_E[3]  = {5,10,15};   //小车速度
   \                     Angle_E:
   \   00000000   0x40A00000         DC32 40A00000H, 41200000H, 41700000H
   \              0x41200000   
   \              0x41700000   

   \                                 In section .data, align 4
      6          float  Gyro_E[3] = {10,15,30};	   //角速度数据
   \                     Gyro_E:
   \   00000000   0x41200000         DC32 41200000H, 41700000H, 41F00000H
   \              0x41700000   
   \              0x41F00000   

   \                                 In section .data, align 4
      7          float  Shell_P[3]  = {10,15,40};  //外层比例控制系数
   \                     Shell_P:
   \   00000000   0x41200000         DC32 41200000H, 41700000H, 42200000H
   \              0x41700000   
   \              0x42200000   
      8          
      9          //由于所测数据均为单向数据，故规则表拟定为单向

   \                                 In section .data, align 4
     10           int rule[3][3]=
   \                     rule:
   \   00000000   0x00000002         DC32 2, 1, 0, 1, 1, 0, 0, 0, 0
   \              0x00000001   
   \              0x00000000   
   \              0x00000001   
   \              0x00000001   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
   \              0x00000000   
     11                  {
     12                    {2,1,0},
     13                    {1,1,0},
     14                    {0,0,0},
     15                  };
     16          
     17          	
     18          

   \                                 In section .text, align 4, keep-with-next
     19          float Fuzzy_Shell_P(float E_angle,float E_gyro)
     20          {
   \                     Fuzzy_Shell_P: (+1)
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0xB089             SUB      SP,SP,#+36
     21            float  angle_err=0,gyro_err=0;
   \   00000004   0x2600             MOVS     R6,#+0
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x9000             STR      R0,[SP, #+0]
     22            int angle_N=0,gyro_N=0; //隶属语言值
   \   0000000A   0x2500             MOVS     R5,#+0
   \   0000000C   0x2400             MOVS     R4,#+0
     23            int  num=0;
   \   0000000E   0x2700             MOVS     R7,#+0
     24            float fuzzy_P=0;
   \   00000010   0x2000             MOVS     R0,#+0
     25             //记录隶属函数的输出值
     26            float  Angle_Fzy[2] ={0.0,0.0};
   \   00000012   0xA803             ADD      R0,SP,#+12
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x2200             MOVS     R2,#+0
   \   00000018   0xC006             STM      R0!,{R1,R2}
   \   0000001A   0x3808             SUBS     R0,R0,#+8
     27            float  Gyro_Fzy[2] ={0.0,0.0};
   \   0000001C   0xA801             ADD      R0,SP,#+4
   \   0000001E   0x2100             MOVS     R1,#+0
   \   00000020   0x2200             MOVS     R2,#+0
   \   00000022   0xC006             STM      R0!,{R1,R2}
   \   00000024   0x3808             SUBS     R0,R0,#+8
     28          
     29            float  Shell_P_Fzy[3] ={0.0,0.0,0.0};
   \   00000026   0xA805             ADD      R0,SP,#+20
   \   00000028   0x210C             MOVS     R1,#+12
   \   0000002A   0x.... 0x....      BL       __aeabi_memclr4
     30            // /*----- 数据更新-----*/
     31            // Shell_P[1]  = P_Direction_low;
     32            // Shell_P[2]  = P_Direction_high;
     33          
     34          
     35            //将数据取绝对值，数据的正负仅代表左右	
     36          //	ABS_val(E_angle,angle_err);
     37          //	ABS_val(E_gyro,gyro_err);
     38          
     39            /*-----   Angle 隶属函数描述-----*/
     40          	if(angle_err<Angle_E[0]) //1
   \   0000002E   0x0030             MOVS     R0,R6
   \   00000030   0x4984             LDR      R1,??Fuzzy_Shell_P_0
   \   00000032   0x6809             LDR      R1,[R1, #+0]
   \   00000034   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000038   0xD204             BCS      ??Fuzzy_Shell_P_1
     41          	{
     42          		Angle_Fzy[0] =1.0;
   \   0000003A   0x20FE             MOVS     R0,#+254
   \   0000003C   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   0000003E   0x9003             STR      R0,[SP, #+12]
     43          		angle_N = 0;
   \   00000040   0x2500             MOVS     R5,#+0
   \   00000042   0xE034             B        ??Fuzzy_Shell_P_2
     44          	}
     45          	else if(angle_err<Angle_E[1])  //2
   \                     ??Fuzzy_Shell_P_1: (+1)
   \   00000044   0x0030             MOVS     R0,R6
   \   00000046   0x497F             LDR      R1,??Fuzzy_Shell_P_0
   \   00000048   0x6849             LDR      R1,[R1, #+4]
   \   0000004A   0x.... 0x....      BL       __aeabi_cfcmple
   \   0000004E   0xD212             BCS      ??Fuzzy_Shell_P_3
     46          	{
     47          		Angle_Fzy[0] = (Angle_E[1]-angle_err)/(Angle_E[1]-Angle_E[0]);
   \   00000050   0x487C             LDR      R0,??Fuzzy_Shell_P_0
   \   00000052   0x6840             LDR      R0,[R0, #+4]
   \   00000054   0x0031             MOVS     R1,R6
   \   00000056   0x.... 0x....      BL       __aeabi_fsub
   \   0000005A   0x0004             MOVS     R4,R0
   \   0000005C   0x4879             LDR      R0,??Fuzzy_Shell_P_0
   \   0000005E   0x6840             LDR      R0,[R0, #+4]
   \   00000060   0x4978             LDR      R1,??Fuzzy_Shell_P_0
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0x.... 0x....      BL       __aeabi_fsub
   \   00000068   0x0001             MOVS     R1,R0
   \   0000006A   0x0020             MOVS     R0,R4
   \   0000006C   0x.... 0x....      BL       __aeabi_fdiv
   \   00000070   0x9003             STR      R0,[SP, #+12]
     48          		angle_N = 0;
   \   00000072   0x2500             MOVS     R5,#+0
   \   00000074   0xE01B             B        ??Fuzzy_Shell_P_2
     49          	}
     50          	else if(angle_err<Angle_E[2])  //3
   \                     ??Fuzzy_Shell_P_3: (+1)
   \   00000076   0x0030             MOVS     R0,R6
   \   00000078   0x4972             LDR      R1,??Fuzzy_Shell_P_0
   \   0000007A   0x6889             LDR      R1,[R1, #+8]
   \   0000007C   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000080   0xD212             BCS      ??Fuzzy_Shell_P_4
     51          	{
     52          		Angle_Fzy[0] = (Angle_E[2]-angle_err)/(Angle_E[2]-Angle_E[1]);
   \   00000082   0x4870             LDR      R0,??Fuzzy_Shell_P_0
   \   00000084   0x6880             LDR      R0,[R0, #+8]
   \   00000086   0x0031             MOVS     R1,R6
   \   00000088   0x.... 0x....      BL       __aeabi_fsub
   \   0000008C   0x0004             MOVS     R4,R0
   \   0000008E   0x486D             LDR      R0,??Fuzzy_Shell_P_0
   \   00000090   0x6880             LDR      R0,[R0, #+8]
   \   00000092   0x496C             LDR      R1,??Fuzzy_Shell_P_0
   \   00000094   0x6849             LDR      R1,[R1, #+4]
   \   00000096   0x.... 0x....      BL       __aeabi_fsub
   \   0000009A   0x0001             MOVS     R1,R0
   \   0000009C   0x0020             MOVS     R0,R4
   \   0000009E   0x.... 0x....      BL       __aeabi_fdiv
   \   000000A2   0x9003             STR      R0,[SP, #+12]
     53          		angle_N = 1;
   \   000000A4   0x2501             MOVS     R5,#+1
   \   000000A6   0xE002             B        ??Fuzzy_Shell_P_2
     54          	}
     55          	else
     56          	{
     57          		Angle_Fzy[0] =0;//4
   \                     ??Fuzzy_Shell_P_4: (+1)
   \   000000A8   0x2000             MOVS     R0,#+0
   \   000000AA   0x9003             STR      R0,[SP, #+12]
     58          		angle_N =1;
   \   000000AC   0x2501             MOVS     R5,#+1
     59          	}
     60          	Angle_Fzy[1] = 1.0 - Angle_Fzy[0];//隶属函数输出值
   \                     ??Fuzzy_Shell_P_2: (+1)
   \   000000AE   0x9803             LDR      R0,[SP, #+12]
   \   000000B0   0x.... 0x....      BL       __aeabi_f2d
   \   000000B4   0x0002             MOVS     R2,R0
   \   000000B6   0x000B             MOVS     R3,R1
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x4963             LDR      R1,??Fuzzy_Shell_P_0+0x4  ;; 0x3ff00000
   \   000000BC   0x.... 0x....      BL       __aeabi_dsub
   \   000000C0   0x.... 0x....      BL       __aeabi_d2f
   \   000000C4   0x9004             STR      R0,[SP, #+16]
     61          
     62            /*----- Pre_dirr 变化隶属函数描述-----*/
     63             if(gyro_err<Gyro_E[0])//当陀螺仪Y轴数据小于40时，对应三角隶属函数的隶属度为1，方向量度模糊等级为0级
   \   000000C6   0x9800             LDR      R0,[SP, #+0]
   \   000000C8   0x4960             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   000000CA   0x6809             LDR      R1,[R1, #+0]
   \   000000CC   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000D0   0xD204             BCS      ??Fuzzy_Shell_P_5
     64          	{
     65          		Gyro_Fzy[0] =1;
   \   000000D2   0x20FE             MOVS     R0,#+254
   \   000000D4   0x0580             LSLS     R0,R0,#+22       ;; #+1065353216
   \   000000D6   0x9001             STR      R0,[SP, #+4]
     66          		gyro_N = 0;
   \   000000D8   0x2400             MOVS     R4,#+0
   \   000000DA   0xE034             B        ??Fuzzy_Shell_P_6
     67          	}
     68          	else if(gyro_err<Gyro_E[1])//当陀螺仪Y轴数据小于70时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为0级，此时为40三角形的右边一半
   \                     ??Fuzzy_Shell_P_5: (+1)
   \   000000DC   0x9800             LDR      R0,[SP, #+0]
   \   000000DE   0x495B             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   000000E0   0x6849             LDR      R1,[R1, #+4]
   \   000000E2   0x.... 0x....      BL       __aeabi_cfcmple
   \   000000E6   0xD212             BCS      ??Fuzzy_Shell_P_7
     69          	{
     70          		Gyro_Fzy[0] = (Gyro_E[1] - gyro_err)/(Gyro_E[1]-Gyro_E[0]);
   \   000000E8   0x4858             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   000000EA   0x6840             LDR      R0,[R0, #+4]
   \   000000EC   0x9900             LDR      R1,[SP, #+0]
   \   000000EE   0x.... 0x....      BL       __aeabi_fsub
   \   000000F2   0x0004             MOVS     R4,R0
   \   000000F4   0x4855             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   000000F6   0x6840             LDR      R0,[R0, #+4]
   \   000000F8   0x4954             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   000000FA   0x6809             LDR      R1,[R1, #+0]
   \   000000FC   0x.... 0x....      BL       __aeabi_fsub
   \   00000100   0x0001             MOVS     R1,R0
   \   00000102   0x0020             MOVS     R0,R4
   \   00000104   0x.... 0x....      BL       __aeabi_fdiv
   \   00000108   0x9001             STR      R0,[SP, #+4]
     71          		gyro_N = 0 ;
   \   0000010A   0x2400             MOVS     R4,#+0
   \   0000010C   0xE01B             B        ??Fuzzy_Shell_P_6
     72          	}
     73          	else if(gyro_err<Gyro_E[2])//当陀螺仪Y轴数据小于160时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为1级，此时为70三角形的左边一半
   \                     ??Fuzzy_Shell_P_7: (+1)
   \   0000010E   0x9800             LDR      R0,[SP, #+0]
   \   00000110   0x494E             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   00000112   0x6889             LDR      R1,[R1, #+8]
   \   00000114   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000118   0xD212             BCS      ??Fuzzy_Shell_P_8
     74          	{
     75          		Gyro_Fzy[0] = (Gyro_E[2] - gyro_err)/(Gyro_E[2]-Gyro_E[1]);
   \   0000011A   0x484C             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   0000011C   0x6880             LDR      R0,[R0, #+8]
   \   0000011E   0x9900             LDR      R1,[SP, #+0]
   \   00000120   0x.... 0x....      BL       __aeabi_fsub
   \   00000124   0x0004             MOVS     R4,R0
   \   00000126   0x4849             LDR      R0,??Fuzzy_Shell_P_0+0x8
   \   00000128   0x6880             LDR      R0,[R0, #+8]
   \   0000012A   0x4948             LDR      R1,??Fuzzy_Shell_P_0+0x8
   \   0000012C   0x6849             LDR      R1,[R1, #+4]
   \   0000012E   0x.... 0x....      BL       __aeabi_fsub
   \   00000132   0x0001             MOVS     R1,R0
   \   00000134   0x0020             MOVS     R0,R4
   \   00000136   0x.... 0x....      BL       __aeabi_fdiv
   \   0000013A   0x9001             STR      R0,[SP, #+4]
     76          		gyro_N = 1;
   \   0000013C   0x2401             MOVS     R4,#+1
   \   0000013E   0xE002             B        ??Fuzzy_Shell_P_6
     77          	}
     78          	else                     //当陀螺仪Y轴数据大于160时，对应三角隶属函数的隶属度根据公式得出，方向量度模糊等级为1级，此时为70三角形的右边一半
     79          	{
     80          		Gyro_Fzy[0] =0.0;
   \                     ??Fuzzy_Shell_P_8: (+1)
   \   00000140   0x2000             MOVS     R0,#+0
   \   00000142   0x9001             STR      R0,[SP, #+4]
     81          		gyro_N = 1;
   \   00000144   0x2401             MOVS     R4,#+1
     82          	}
     83          	//一个数据在三角形隶属度函数中对应着两个相邻三角形中的隶属度，两个隶属度和为1
     84          	Gyro_Fzy[1] = 1.0 - Gyro_Fzy[0];
   \                     ??Fuzzy_Shell_P_6: (+1)
   \   00000146   0x9801             LDR      R0,[SP, #+4]
   \   00000148   0x.... 0x....      BL       __aeabi_f2d
   \   0000014C   0x0002             MOVS     R2,R0
   \   0000014E   0x000B             MOVS     R3,R1
   \   00000150   0x2000             MOVS     R0,#+0
   \   00000152   0x493D             LDR      R1,??Fuzzy_Shell_P_0+0x4  ;; 0x3ff00000
   \   00000154   0x.... 0x....      BL       __aeabi_dsub
   \   00000158   0x.... 0x....      BL       __aeabi_d2f
   \   0000015C   0x9002             STR      R0,[SP, #+8]
     85          
     86          	/*查询模糊规则表*/
     87          	//查表的时候不单单查询一个规则，而是向右向下拓展成一个规则正方形查询
     88          	num =rule[gyro_N][angle_N];
   \   0000015E   0x483C             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   00000160   0x210C             MOVS     R1,#+12
   \   00000162   0x4361             MULS     R1,R4,R1
   \   00000164   0x1840             ADDS     R0,R0,R1
   \   00000166   0x2104             MOVS     R1,#+4
   \   00000168   0x4369             MULS     R1,R5,R1
   \   0000016A   0x5847             LDR      R7,[R0, R1]
     89          	Shell_P_Fzy[num] += Gyro_Fzy[0]*Angle_Fzy[0];
   \   0000016C   0x9901             LDR      R1,[SP, #+4]
   \   0000016E   0x9803             LDR      R0,[SP, #+12]
   \   00000170   0x.... 0x....      BL       __aeabi_fmul
   \   00000174   0xA905             ADD      R1,SP,#+20
   \   00000176   0x2204             MOVS     R2,#+4
   \   00000178   0x437A             MULS     R2,R7,R2
   \   0000017A   0x5889             LDR      R1,[R1, R2]
   \   0000017C   0x.... 0x....      BL       __aeabi_fadd
   \   00000180   0xA905             ADD      R1,SP,#+20
   \   00000182   0x2204             MOVS     R2,#+4
   \   00000184   0x4357             MULS     R7,R2,R7
   \   00000186   0x51C8             STR      R0,[R1, R7]
     90          
     91          	num =rule[gyro_N+1][angle_N];
   \   00000188   0x4831             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   0000018A   0x210C             MOVS     R1,#+12
   \   0000018C   0x4361             MULS     R1,R4,R1
   \   0000018E   0x1840             ADDS     R0,R0,R1
   \   00000190   0x2104             MOVS     R1,#+4
   \   00000192   0x4369             MULS     R1,R5,R1
   \   00000194   0x1840             ADDS     R0,R0,R1
   \   00000196   0x68C7             LDR      R7,[R0, #+12]
     92          	Shell_P_Fzy[num] += Gyro_Fzy[1]*Angle_Fzy[0];
   \   00000198   0x9902             LDR      R1,[SP, #+8]
   \   0000019A   0x9803             LDR      R0,[SP, #+12]
   \   0000019C   0x.... 0x....      BL       __aeabi_fmul
   \   000001A0   0xA905             ADD      R1,SP,#+20
   \   000001A2   0x2204             MOVS     R2,#+4
   \   000001A4   0x437A             MULS     R2,R7,R2
   \   000001A6   0x5889             LDR      R1,[R1, R2]
   \   000001A8   0x.... 0x....      BL       __aeabi_fadd
   \   000001AC   0xA905             ADD      R1,SP,#+20
   \   000001AE   0x2204             MOVS     R2,#+4
   \   000001B0   0x4357             MULS     R7,R2,R7
   \   000001B2   0x51C8             STR      R0,[R1, R7]
     93          
     94          	num =rule[gyro_N][angle_N+1];
   \   000001B4   0x4826             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   000001B6   0x210C             MOVS     R1,#+12
   \   000001B8   0x4361             MULS     R1,R4,R1
   \   000001BA   0x1840             ADDS     R0,R0,R1
   \   000001BC   0x2104             MOVS     R1,#+4
   \   000001BE   0x4369             MULS     R1,R5,R1
   \   000001C0   0x1840             ADDS     R0,R0,R1
   \   000001C2   0x6847             LDR      R7,[R0, #+4]
     95          	Shell_P_Fzy[num] += Gyro_Fzy[0]*Angle_Fzy[1];
   \   000001C4   0x9901             LDR      R1,[SP, #+4]
   \   000001C6   0x9804             LDR      R0,[SP, #+16]
   \   000001C8   0x.... 0x....      BL       __aeabi_fmul
   \   000001CC   0xA905             ADD      R1,SP,#+20
   \   000001CE   0x2204             MOVS     R2,#+4
   \   000001D0   0x437A             MULS     R2,R7,R2
   \   000001D2   0x5889             LDR      R1,[R1, R2]
   \   000001D4   0x.... 0x....      BL       __aeabi_fadd
   \   000001D8   0xA905             ADD      R1,SP,#+20
   \   000001DA   0x2204             MOVS     R2,#+4
   \   000001DC   0x4357             MULS     R7,R2,R7
   \   000001DE   0x51C8             STR      R0,[R1, R7]
     96          
     97          	num =rule[gyro_N+1][angle_N+1];
   \   000001E0   0x481B             LDR      R0,??Fuzzy_Shell_P_0+0xC
   \   000001E2   0x210C             MOVS     R1,#+12
   \   000001E4   0x434C             MULS     R4,R1,R4
   \   000001E6   0x1900             ADDS     R0,R0,R4
   \   000001E8   0x2104             MOVS     R1,#+4
   \   000001EA   0x434D             MULS     R5,R1,R5
   \   000001EC   0x1940             ADDS     R0,R0,R5
   \   000001EE   0x6907             LDR      R7,[R0, #+16]
     98          	Shell_P_Fzy[num] += Gyro_Fzy[1]*Angle_Fzy[1];
   \   000001F0   0x9902             LDR      R1,[SP, #+8]
   \   000001F2   0x9804             LDR      R0,[SP, #+16]
   \   000001F4   0x.... 0x....      BL       __aeabi_fmul
   \   000001F8   0xA905             ADD      R1,SP,#+20
   \   000001FA   0x2204             MOVS     R2,#+4
   \   000001FC   0x437A             MULS     R2,R7,R2
   \   000001FE   0x5889             LDR      R1,[R1, R2]
   \   00000200   0x.... 0x....      BL       __aeabi_fadd
   \   00000204   0xA905             ADD      R1,SP,#+20
   \   00000206   0x2204             MOVS     R2,#+4
   \   00000208   0x4357             MULS     R7,R2,R7
   \   0000020A   0x51C8             STR      R0,[R1, R7]
     99          
    100          	/*面积中心法解模糊*/
    101          	fuzzy_P=Shell_P_Fzy[0]*Shell_P[0]+Shell_P_Fzy[1]*Shell_P[1]+Shell_P_Fzy[2]*Shell_P[2];
   \   0000020C   0x9905             LDR      R1,[SP, #+20]
   \   0000020E   0x4811             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   00000210   0x6800             LDR      R0,[R0, #+0]
   \   00000212   0x.... 0x....      BL       __aeabi_fmul
   \   00000216   0x0001             MOVS     R1,R0
   \   00000218   0x000C             MOVS     R4,R1
   \   0000021A   0x9906             LDR      R1,[SP, #+24]
   \   0000021C   0x480D             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   0000021E   0x6840             LDR      R0,[R0, #+4]
   \   00000220   0x.... 0x....      BL       __aeabi_fmul
   \   00000224   0x0021             MOVS     R1,R4
   \   00000226   0x.... 0x....      BL       __aeabi_fadd
   \   0000022A   0x0001             MOVS     R1,R0
   \   0000022C   0x000C             MOVS     R4,R1
   \   0000022E   0x9907             LDR      R1,[SP, #+28]
   \   00000230   0x4808             LDR      R0,??Fuzzy_Shell_P_0+0x10
   \   00000232   0x6880             LDR      R0,[R0, #+8]
   \   00000234   0x.... 0x....      BL       __aeabi_fmul
   \   00000238   0x0021             MOVS     R1,R4
   \   0000023A   0x.... 0x....      BL       __aeabi_fadd
    102            return(fuzzy_P);
   \   0000023E   0xB009             ADD      SP,SP,#+36
   \   00000240   0xBDF0             POP      {R4-R7,PC}       ;; return
   \   00000242   0xBF00             Nop      
   \                     ??Fuzzy_Shell_P_0:
   \   00000244   0x........         DC32     Angle_E
   \   00000248   0x3FF00000         DC32     0x3ff00000
   \   0000024C   0x........         DC32     Gyro_E
   \   00000250   0x........         DC32     rule
   \   00000254   0x........         DC32     Shell_P
    103          }

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H, 0H
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H, 0H
   \              0x00000000   

   \                                 In section .rodata, align 4
   \   00000000   0x00000000         DC32 0H, 0H, 0H
   \              0x00000000   
   \              0x00000000   

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      56   Fuzzy_Shell_P
        56   -> __aeabi_d2f
        56   -> __aeabi_dsub
        56   -> __aeabi_f2d
        56   -> __aeabi_fadd
        56   -> __aeabi_fdiv
        56   -> __aeabi_fmul
        56   -> __aeabi_fsub
        56   -> __aeabi_memclr4
        56 __aeabi_cfcmple


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ?_0
       8  ?_1
      12  ?_2
      12  Angle_E
     600  Fuzzy_Shell_P
      12  Gyro_E
      12  Shell_P
      36  rule

 
  72 bytes in section .data
  28 bytes in section .rodata
 600 bytes in section .text
 
 600 bytes of CODE  memory
  28 bytes of CONST memory
  72 bytes of DATA  memory

Errors: none
Warnings: none
